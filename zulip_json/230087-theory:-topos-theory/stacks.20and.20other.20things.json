[
    {
        "content": "<p>I've gathered from the literature, especially Caramello, the following analogies:</p>\n<ul>\n<li>stack : internal category in a sheaf topos :: fibration : split fibration :: indexed category : strict indexed category</li>\n<li>stack on <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"script\">E</mi></mrow><annotation encoding=\"application/x-tex\">\\mathcal{E}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathcal\" style=\"margin-right:0.08944em;\">E</span></span></span></span> : geometric morphism into <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"script\">E</mi></mrow><annotation encoding=\"application/x-tex\">\\mathcal{E}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathcal\" style=\"margin-right:0.08944em;\">E</span></span></span></span> :: small category : site :: presheaf topos : Grothendieck topos</li>\n</ul>\n<p>First off, it feels like these analogies should come with some size conditions on the stack, but they seem to get glossed over.  What are they?</p>\n<p>Second, the first set of analogies seems like it's not specific to sites/toposes, but the definition of stack is.  Is there a more general way to define stacks so they generalize internal categories, or does that just reduce to a fibration/indexed category?</p>\n<p>Third, it seems like the second set of analogies would associate stacks with a particularly nice kind of model of a geometric theory, like presheaf toposes are particularly nice toposes.  Is there a good characterization of what makes these models nicer?</p>",
        "id": 284003747,
        "sender_full_name": "James Deikun",
        "timestamp": 1653570658
    },
    {
        "content": "<p>There's more subtlety than just that. Not every internal category in a sheaf topos gives rise to a stack. (More precisely, every internal category in a category with finite limits can be \"externalised\" to obtain a strict indexed category, but that does not automatically satisfy the effective descent condition.)</p>",
        "id": 284011890,
        "sender_full_name": "Zhen Lin Low",
        "timestamp": 1653574843
    },
    {
        "content": "<p>Stacks are only defined for sites for the same reason sheaves are only defined for sites: you need to know which descent conditions to impose.</p>",
        "id": 284012000,
        "sender_full_name": "Zhen Lin Low",
        "timestamp": 1653574909
    },
    {
        "content": "<p>I would prefer to push the analogy that a stack is the correct notion of a Cat-valued sheaf, where we understand Cat to be the 2-category of categories, whereas an internal category in a sheaf topos is basically the same thing as a sheaf taking values in the 1-category of \"categories with equality between objects\". (Put it another way, the notion of internal category in a 1-category is really an internalisation of the notion of \"category with equality between objects\".)</p>",
        "id": 284012875,
        "sender_full_name": "Zhen Lin Low",
        "timestamp": 1653575350
    },
    {
        "content": "<p>I understand there is a 'stackification' of any fibration much like there is a 'sheafification' of any presheaf; what distinctions between internal categories are lost by passing to the stackification of the externalization?</p>",
        "id": 284014053,
        "sender_full_name": "James Deikun",
        "timestamp": 1653575961
    },
    {
        "content": "<p>I get the idea of whatever might make stacks 'more special' than internal categories isn't enough to prevent there being a relative Giraud's theorem using stacks instead of internal categories; is this correct?</p>",
        "id": 284014310,
        "sender_full_name": "James Deikun",
        "timestamp": 1653576089
    },
    {
        "content": "<p>In the case of the terminal site, you lose the distinction between non-isomorphic but equivalent categories. But much more happens in general – it's where the first sheaf cohomology group comes from, in some sense.</p>",
        "id": 284014542,
        "sender_full_name": "Zhen Lin Low",
        "timestamp": 1653576186
    },
    {
        "content": "<p>Take an internal group G and consider it as an internal category. Its externalisation will usually fail to be a stack. There is a natural identification between the set of connected components of the fibre over 1 of the stackification and the sheaf cohomology group H^1 (G).</p>",
        "id": 284014911,
        "sender_full_name": "Zhen Lin Low",
        "timestamp": 1653576362
    },
    {
        "content": "<p>(Whereas the fiber over 1 of the plain externalization is always connected, IIUC.)</p>",
        "id": 284015270,
        "sender_full_name": "James Deikun",
        "timestamp": 1653576543
    },
    {
        "content": "<p>Yes. So by passing to the stackification you lose the distinction between internal categories that are weakly equivalent but not strictly equivalent (let alone isomorphic).</p>",
        "id": 284015575,
        "sender_full_name": "Zhen Lin Low",
        "timestamp": 1653576675
    },
    {
        "content": "<p>Oh, there's a specific notion of weak equivalence of internal categories in play here?</p>",
        "id": 284015902,
        "sender_full_name": "James Deikun",
        "timestamp": 1653576850
    },
    {
        "content": "<p>It is more or less the internalisation of the usual notion: a functor is a weak equivalence if it is fully faithful and every object in the codomain category is isomorphic to an object in the image. The existential quantifier is doing the work of making this interesting in a sheaf topos.</p>",
        "id": 284016066,
        "sender_full_name": "Zhen Lin Low",
        "timestamp": 1653576939
    },
    {
        "content": "<p>Ah, so it's just internal anaequivalence!  But I guess in a general sheaf topos you get some interesting homotopy from anaequivalence, and that's what the stacks 'see' by forming a bicategory that is not (I'm guessing) globally equivalent to the bicategory of internal categories?</p>",
        "id": 284017050,
        "sender_full_name": "James Deikun",
        "timestamp": 1653577382
    },
    {
        "content": "<p>I believe so.</p>",
        "id": 284017253,
        "sender_full_name": "Zhen Lin Low",
        "timestamp": 1653577487
    },
    {
        "content": "<p>Thanks, this really clears up the first set of analogies; and in particular its limitations and why stacks might be nicer to work with than internal categories to an even greater degree than non-split fibrations in general.</p>",
        "id": 284017765,
        "sender_full_name": "James Deikun",
        "timestamp": 1653577710
    },
    {
        "content": "<p>(I guess it also clears up why you want <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">∞</mi></mrow><annotation encoding=\"application/x-tex\">\\infty</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord\">∞</span></span></span></span>-stacks; in a similar way, they can see all of the latent homotopy behind sheaf cohomology, basically, not just the lowest levels?)</p>",
        "id": 284018974,
        "sender_full_name": "James Deikun",
        "timestamp": 1653578316
    },
    {
        "content": "<p>Sure. At least it clarifies why ∞-stacks of ∞-groupoids are significant. IIRC this is explained as early as Ken Brown's paper introducing categories of fibrant objects. (He doesn't use these words though...)</p>",
        "id": 284021343,
        "sender_full_name": "Zhen Lin Low",
        "timestamp": 1653579509
    }
]