[
    {
        "content": "<p>We've had some setbacks in the project. </p>\n<ul>\n<li>We thought that the functor <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>E</mi><mo>:</mo><mi mathvariant=\"normal\">Σ</mi><mi mathvariant=\"normal\">Π</mi><mn mathvariant=\"double-struck\">2</mn><mo>→</mo><mrow><mi mathvariant=\"bold\">C</mi><mi mathvariant=\"bold\">o</mi><mi mathvariant=\"bold\">G</mi></mrow></mrow><annotation encoding=\"application/x-tex\">E : \\Sigma \\Pi \\mathbb{2} \\rightarrow \\mathbf{CoG}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">E</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord\">ΣΠ2</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6861em;\"></span><span class=\"mord\"><span class=\"mord mathbf\">CoG</span></span></span></span></span> was faithful. Unfortunately that is not the case, not even when restricted to a functor <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>D</mi><mo>:</mo><mi mathvariant=\"normal\">Σ</mi><mi mathvariant=\"normal\">Π</mi><mn mathvariant=\"double-struck\">1</mn><mo>→</mo><mrow><mi mathvariant=\"bold\">C</mi><mi mathvariant=\"bold\">o</mi><mi mathvariant=\"bold\">h</mi></mrow></mrow><annotation encoding=\"application/x-tex\">D: \\Sigma \\Pi \\mathbb{1} \\rightarrow \\mathbf{Coh}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">D</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord\">ΣΠ1</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord\"><span class=\"mord mathbf\">Coh</span></span></span></span></span>. The reason is that if <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>q</mi><mo stretchy=\"false\">[</mo><mi>j</mi><mo stretchy=\"false\">]</mo><mo>=</mo><mi mathvariant=\"normal\">∅</mi></mrow><annotation encoding=\"application/x-tex\">q[j] = \\emptyset</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">q</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mclose\">]</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8056em;vertical-align:-0.0556em;\"></span><span class=\"mord\">∅</span></span></span></span> for some $j$, then the information $f(i) = j$ is lost when applying $D$ to $(F, f)$. </li>\n<li>We even hoped that the <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>E</mi></mrow><annotation encoding=\"application/x-tex\">E</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">E</span></span></span></span> would be full when the morphisms of $$\\mathbf{CoG}$ are restricted to maximal relations. This is also not the case. A counterexample is given by the object <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mi>p</mi><mo separator=\"true\">,</mo><mi>P</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">(p, P)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">p</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mclose\">)</span></span></span></span> with <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>p</mi><mo stretchy=\"false\">[</mo><mn>1</mn><mo stretchy=\"false\">]</mo><mo>=</mo><mi>i</mi></mrow><annotation encoding=\"application/x-tex\">p[1] = {i}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">p</span><span class=\"mopen\">[</span><span class=\"mord\">1</span><span class=\"mclose\">]</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6595em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">i</span></span></span></span></span>, <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>p</mi><mo stretchy=\"false\">[</mo><mi>i</mi><mo stretchy=\"false\">]</mo><mo>=</mo><mi>a</mi></mrow><annotation encoding=\"application/x-tex\">p[i] = {a}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">p</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">i</span><span class=\"mclose\">]</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span></span></span></span></span> and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>P</mi><mo stretchy=\"false\">(</mo><mi>i</mi><mo separator=\"true\">,</mo><mi>a</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mi mathvariant=\"normal\">⊥</mi></mrow><annotation encoding=\"application/x-tex\">P(i, a) = \\bot</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">i</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">a</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord\">⊥</span></span></span></span>. </li>\n</ul>\n<p>Jeremy is now going to try to repair this by further tweaking <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"bold\">C</mi><mi mathvariant=\"bold\">o</mi><mi mathvariant=\"bold\">G</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbf{CoG}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6861em;\"></span><span class=\"mord\"><span class=\"mord mathbf\">CoG</span></span></span></span></span>. I'm going to look at relations with Joyal's category of Conway games.</p>",
        "id": 284792606,
        "sender_full_name": "Jan Rooduijn",
        "timestamp": 1654197844
    },
    {
        "content": "<p>hi <span class=\"user-mention\" data-user-id=\"497075\">@Jan Rooduijn</span> , nice to hear from you! <br>\n setbacks are part of the process! do not worry, carry on trying variants.</p>\n<p>Because I'm a pest, I will say again that instead of thinking of PiSigma2 (actuallly don't you mean SigmaPi2?) why not think of GSets=LDial?  I'm sure we can make a nice category of games Dial_2 (Coh) or LDial(Coh)...<br>\nI just don't know if this works for Jeremie's goals</p>",
        "id": 284793062,
        "sender_full_name": "Valeria de Paiva",
        "timestamp": 1654198045
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"276656\">Valeria de Paiva</span> <a href=\"#narrow/stream/323208-practice.3A-Dialectica/topic/Dialectica.20and.20Games/near/284777893\">said</a>:</p>\n<blockquote>\n<p>hi <span class=\"user-mention silent\" data-user-id=\"275920\">John Baez</span> , I hope this is not inside practice: chemistry by mistake!</p>\n</blockquote>",
        "id": 284796908,
        "sender_full_name": "John Baez",
        "timestamp": 1654200081
    },
    {
        "content": "<p>I don't know what you're referring to , <span class=\"user-mention\" data-user-id=\"276656\">@Valeria de Paiva</span>.</p>",
        "id": 284797061,
        "sender_full_name": "John Baez",
        "timestamp": 1654200132
    },
    {
        "content": "<p>hi <span class=\"user-mention\" data-user-id=\"275920\">@John Baez</span> I think you deleted our stream and recreated it yesterday, at least this is how it looked from here. might be somethign to do with the spotty internet.</p>",
        "id": 284797430,
        "sender_full_name": "Valeria de Paiva",
        "timestamp": 1654200330
    },
    {
        "content": "<p>No, I did some other silly thing and undid it.    Sorry!</p>\n<p>I marked this topic as \"resolved\".  This happens when you accidentally click the little gray check mark to the right of the name of a topic.</p>",
        "id": 284800874,
        "sender_full_name": "John Baez",
        "timestamp": 1654202007
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"276656\">Valeria de Paiva</span> <a href=\"#narrow/stream/323208-practice.3A-Dialectica/topic/Dialectica.20and.20Games/near/284793062\">said</a>:</p>\n<blockquote>\n<p>I will say again that instead of thinking of PiSigma2 (actuallly don't you mean SigmaPi2?) why not think of GSets=LDial?  I'm sure we can make a nice category of games Dial_2 (Coh) or LDial(Coh)...<br>\nI just don't know if this works for Jeremie's goals</p>\n</blockquote>\n<p>This is definitely an interesting thing to explore, it is not completely clear if/how that would fit in with our angle so far of Dialectica &lt;-&gt; Coh read as Normal form &lt;-&gt; Extensive form games. (I agree we shouldn't bring in the extra complexity of ΣΠ2 on top of all that.)</p>",
        "id": 284802144,
        "sender_full_name": "Jérémie Koenig",
        "timestamp": 1654202705
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"276656\">Valeria de Paiva</span> <a href=\"#narrow/stream/323208-practice.3A-Dialectica/topic/Dialectica.20and.20games/near/284793062\">said</a>:</p>\n<blockquote>\n<p>hi <span class=\"user-mention silent\" data-user-id=\"497075\">Jan Rooduijn</span> , nice to hear from you! <br>\n setbacks are part of the process! do not worry, carry on trying variants.</p>\n<p>Because I'm a pest, I will say again that instead of thinking of PiSigma2 (actuallly don't you mean SigmaPi2?) why not think of GSets=LDial?  I'm sure we can make a nice category of games Dial_2 (Coh) or LDial(Coh)...<br>\nI just don't know if this works for Jeremie's goals</p>\n</blockquote>\n<p>Thanks, I indeed meant <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">Σ</mi><mi mathvariant=\"normal\">Π</mi><mn>2</mn></mrow><annotation encoding=\"application/x-tex\">\\Sigma \\Pi 2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord\">ΣΠ2</span></span></span></span> and I agree that it is a good idea to first look at the non-dependent version. We're discussing your other suggestions.</p>",
        "id": 284814394,
        "sender_full_name": "Jan Rooduijn",
        "timestamp": 1654209675
    },
    {
        "content": "<p>We have discussed how coherence games provide a general model of games.  A (scored) coherence game is a pair (|A|, ^) where |A| is a set of \"tokens\" and ^  is a symmetric binary relation on |A|. The set |A| is to represent plays of the game, and ^ is a relation which holds between distinct plays u,v in |A|, whenever they form a coherent strategy for Player 1 (Alice) and ^ holds between a play u and itself whenever it is winning for Alice. (A strategy for Alice is a collection of plays, where from the same position in any two different plays Alice always makes the same move. Strategies need not be complete, i.e. always tell you what move to make. Thus the emptyset and any singleton consisting of a single play are always strategies for Alice.)</p>\n<p>As outlined I don't see how to use coherence games to model concurrency. Consider a simple game where Alice and player 2 (Bob), each choose a number 1 or 2. If they both choose the same number then Alice wins, and if they choose different numbers Bob wins. This game can either be played simultaneously (both players choose numbers and simultaneously reveal them) or sequentially (Alice chooses and number and then Bob can choose a number based off of Alice's choice). Clearly in the simultaneous game, if Alice  is a random number generator Bob cannot be guaranteed to win and in the second game Bob can always win by choosing the number Alice didn't choose. However, the coherence game model of both games is identical, because  a strategy for Alice in both games is determined by choosing a single number, and the winning conditions for Alice are also the same.</p>\n<p>I haven't been able to think of a different way to use coherence games to account for the difference between the two games described above. The only thing I can think of is to add an additional symmetric binary relation ~ on |A| so that when u,v are distinct plays, u ~ v whenever u and v form a coherent strategy for Bob, and u~u whenever u is a winning play for Bob. Plays of either the simultaneous or sequential game can be represented as order pairs (x,y) where x,y are in {1,2} and x represents Alice's number and y, Bob's number.  thus |A| = { (x,y) : x,y \\in {1,2} } and ...</p>\n<p>the simultaneous game has relations:<br>\n(x,y) ^ (w,z) iff (x = w and (y \\neq z or x = y))<br>\n(x,y) ~ (w,z) iff (y = z and (x \\neq w or x \\neq y))</p>\n<p>And the sequential game has relations:<br>\n^ is the same as in the simultaneous game.<br>\n(x,y) ~ (w,z) iff (x \\neq w or ( (x,y) = (w,z) and x \\neq y ) ).</p>\n<p>It is probably easier to just draw a graph whose vertices are the plays and have two colored edges for the relations and work out the two game graphs. In the first one there are two maximal player 2 strategies: Bob can either choose 1 or choose 2. In the second game, Bob has 4 maximal strategies: he can stubbornly choose 1 or 2 independent of what Alice does, he can foolishly copy what Alice does or he can wisely choose what Alice didn't.</p>",
        "id": 286129965,
        "sender_full_name": "Colin Bloomfield",
        "timestamp": 1655239400
    },
    {
        "content": "<p>Just saw your message <span class=\"user-mention\" data-user-id=\"498391\">@Colin Bloomfield</span>   Don't know if I can help with it. I am sure that you can read the linear logic connectives of Coh as a way of doing concurrency, as Coh is the prototypical model of LL. but this is probably not what you want, as this way we don't model strategies.<br>\nYou can do Dial(Coh) and this is another model of LL, not described in the literature, but maybe has the same problem of not modelling strategies?<br>\n I haven't read Winkel's paper properly, but doesn't he do the kind of modelling you want? if not, why not?</p>",
        "id": 286284120,
        "sender_full_name": "Valeria de Paiva",
        "timestamp": 1655332663
    }
]