[
    {
        "content": "<p>I think you could use pushouts. The idea is that you first define an \"open\" equation to be a cospan of finite sets <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>I</mi><mo>→</mo><mi>X</mi><mo>←</mo><mi>O</mi></mrow><annotation encoding=\"application/x-tex\">I \\to X \\leftarrow O</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">I</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">←</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span></span></span></span> equipped with an equation e with variables in X. The idea is that I and O are input and output sets pointing to elements of X which may identified with variables of other open equations.</p>",
        "id": 244192190,
        "sender_full_name": "Jade Master",
        "timestamp": 1624907800
    },
    {
        "content": "<p>Then to bond equations you could take another such open equation <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo>→</mo><mi>Y</mi><mo>←</mo><mi>R</mi></mrow><annotation encoding=\"application/x-tex\">O \\to Y \\leftarrow R</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">←</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span></span></span></span> with equation e', take the pushout of these cospans to join the output variables of the first with the input variables of the second, then pushforward e and e' to this new pushout.</p>",
        "id": 244192447,
        "sender_full_name": "Jade Master",
        "timestamp": 1624907956
    },
    {
        "content": "<p>There is something similar in <span class=\"user-mention\" data-user-id=\"275920\">@John Baez</span> and <span class=\"user-mention\" data-user-id=\"275953\">@Blake Pollard</span> 's paper \"A compositional framework for reaction networks\". Look at the category Dynam in section 3 I think.</p>",
        "id": 244192549,
        "sender_full_name": "Jade Master",
        "timestamp": 1624908006
    },
    {
        "content": "<p>Yes, we study systems of first-order ordinary differential equations, which we call dynamical systems... but the same methodology should work for equations of any kind.</p>",
        "id": 244193332,
        "sender_full_name": "John Baez",
        "timestamp": 1624908455
    },
    {
        "content": "<p>Jade explained it pretty well so I won't say more!</p>",
        "id": 244193707,
        "sender_full_name": "John Baez",
        "timestamp": 1624908669
    }
]