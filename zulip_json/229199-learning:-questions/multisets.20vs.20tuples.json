[
    {
        "content": "<p>I am currently working on higher arity generalizations of category-like structures and I would like to gether some sentiment from this community about multisets vs tuples. Suppose one is not interested in sequential information, e.g. focus on counting, hypergraph topology, etc., my question is: are there any general reasons (other than tradition) to use n-tuples over multisets  of fixed cardinality n to encode the primitive notion of a collection of n (possibly repeating) elements?</p>\n<p>The main example I have in mind are homsets in categories: in the standard definition of category homsets are defined on 2-tuples of objects so that C(A,B) =/= C(B,A), which is convenient when thinking of morphisms as directed links between objects. One could define an \"undirected\" category so that given a pair of objects A and B only the homset C(AB), where AB denotes a multiset of cardinality 2,  is defined. As far as I can see, all the usual notions of categories (composition, associativity, identities) appy in this \"undirected\" setting.</p>\n<p>In a higher arity generalization of a category homsets may take the form C(ABCD...) where n-ary morphisms are defined on multisets of objects of cardinality n. This approach seems to allow us to preserve a great deal of the compositional structure of categories into the higher arity realm while relaxing the rigidity of sequentiality imposed by tuples. Can you see any major issues with this approach?</p>",
        "id": 281100143,
        "sender_full_name": "Carlos Zapata-Carratala",
        "timestamp": 1651627117
    },
    {
        "content": "<p>It is unclear to me what kinds of examples you have in mind, so it is difficult to judge whether the approach has \"major issues\".</p>",
        "id": 281102983,
        "sender_full_name": "Zhen Lin Low",
        "timestamp": 1651630516
    },
    {
        "content": "<p>But here is something to think about. If there is some kind of \"undirected\" analogue of the notion of category it should be a generalisation of the notion of groupoid. In a groupoid there is certainly a canonical bijection between Hom(A, B) and Hom(B, A), and if we take Hom(A, B, ..., Z) to be the set of tuples of morphisms A → B, B → C, ..., Y → Z, then there are canonical bijections between e.g. Hom(A, B, C) and Hom(C, A, B). But then now we have two potentially different bijections between Hom(A, B, B) and Hom(B, A, B), induced by the canonical bijection between Hom(A, B, C) and Hom(C, A, B) or Hom(B, A, C) after substituting C = B. This ambiguity means it is not feasible to think of Hom(A, B, ..., Z) as being indexed by a plain multiset (A, B, ..., Z).</p>",
        "id": 281103834,
        "sender_full_name": "Zhen Lin Low",
        "timestamp": 1651631440
    },
    {
        "content": "<p>I vaguely remember a discussion about \"undirected\" categories on here (more than a year ago), but I couldn't find it.</p>",
        "id": 281120188,
        "sender_full_name": "Ralph Sarkis",
        "timestamp": 1651649793
    },
    {
        "content": "<p>Categories of relations (e.g. allegories) have the form that you describe <span class=\"user-mention\" data-user-id=\"407556\">@Carlos Zapata-Carratala</span>, although as <span class=\"user-mention\" data-user-id=\"416301\">@Zhen Lin Low</span> pointed out, if you want to compose relations where one of the codomains is repeated you have to be careful about which way around the relation is, at which point the set might as well be ordered.</p>",
        "id": 281125674,
        "sender_full_name": "Morgan Rogers (he/him)",
        "timestamp": 1651653449
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"407556\">Carlos Zapata-Carratala</span> <a href=\"#narrow/stream/229199-learning.3A-questions/topic/multisets.20vs.20tuples/near/281100143\">said</a>:</p>\n<blockquote>\n<p>I am currently working on higher arity generalizations of category-like structures and I would like to gether some sentiment from this community about multisets vs tuples. Suppose one is not interested in sequential information, e.g. focus on counting, hypergraph topology, etc., my question is: are there any general reasons (other than tradition) to use n-tuples over multisets  of fixed cardinality n to encode the primitive notion of a collection of n (possibly repeating) elements?</p>\n<p>The main example I have in mind are homsets in categories: in the standard definition of category homsets are defined on 2-tuples of objects so that C(A,B) =/= C(B,A), which is convenient when thinking of morphisms as directed links between objects. One could define an \"undirected\" category so that given a pair of objects A and B only the homset C(AB), where AB denotes a multiset of cardinality 2,  is defined. As far as I can see, all the usual notions of categories (composition, associativity, identities) appy in this \"undirected\" setting.</p>\n<p>In a higher arity generalization of a category homsets may take the form C(ABCD...) where n-ary morphisms are defined on multisets of objects of cardinality n. This approach seems to allow us to preserve a great deal of the compositional structure of categories into the higher arity realm while relaxing the rigidity of sequentiality imposed by tuples. Can you see any major issues with this approach?</p>\n</blockquote>\n<p>It will make a big difference imho if at some point you plan to implement this or not. Computers like tuples much more than multisets, in general*. Also, as I think <span class=\"user-mention\" data-user-id=\"416301\">@Zhen Lin Low</span>  already said, you could also use tuples + symmetries that allow you to shuffle things around. Tuples + symmetries form a groupoid and, in some way, this allows you to work as if you were working with multisets but at the same time it allows you to be more explicit about them.</p>\n<p>*By this I mean that a good 40% of day-to-day programming is about manipulating lists of things, and there are countless tools and libraries developed to operate on lists in any possible way one can imagine. The same cannot be said of multisets.</p>",
        "id": 281143314,
        "sender_full_name": "Fabrizio Genovese",
        "timestamp": 1651664846
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"276438\">Fabrizio Genovese</span> <a href=\"#narrow/stream/229199-learning.3A-questions/topic/multisets.20vs.20tuples/near/281143314\">said</a>:</p>\n<blockquote>\n<p>It will make a big difference imho if at some point you plan to implement this or not. Computers like tuples much more than multisets, in general*. Also, as I think <span class=\"user-mention silent\" data-user-id=\"416301\">Zhen Lin Low</span>  already said, you could also use tuples + symmetries that allow you to shuffle things around. Tuples + symmetries form a groupoid and, in some way, this allows you to work as if you were working with multisets but at the same time it allows you to be more explicit about them.</p>\n<p>*By this I mean that a good 40% of day-to-day programming is about manipulating lists of things, and there are countless tools and libraries developed to operate on lists in any possible way one can imagine. The same cannot be said of multisets.</p>\n</blockquote>\n<p>Yes, I completely agree. There will be a big difference for computational implementation. Our modern digital computers are very sequential machines deep down.</p>",
        "id": 281144575,
        "sender_full_name": "Carlos Zapata-Carratala",
        "timestamp": 1651665620
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"277473\">Morgan Rogers (he/him)</span> <a href=\"#narrow/stream/229199-learning.3A-questions/topic/multisets.20vs.20tuples/near/281125674\">said</a>:</p>\n<blockquote>\n<p>Categories of relations (e.g. allegories) have the form that you describe <span class=\"user-mention silent\" data-user-id=\"407556\">Carlos Zapata-Carratala</span>, although as <span class=\"user-mention silent\" data-user-id=\"416301\">Zhen Lin Low</span> pointed out, if you want to compose relations where one of the codomains is repeated you have to be careful about which way around the relation is, at which point the set might as well be ordered.</p>\n</blockquote>\n<p>Yes, using the multiset approach for homsets of repeated objects seems like a potential issue. As far as I can see there is a trade-off: either you insist that all your morphisms bind different objects (no endomorphisms) or you allow for repeated objects in which case the ambiguity for composition is encoded in permutations of repeated objects shared between morphisms. I can see that tuples are efficient in doing away with this issue at the cost of introducing \"a priori\" sequentiality.</p>",
        "id": 281147589,
        "sender_full_name": "Carlos Zapata-Carratala",
        "timestamp": 1651667482
    },
    {
        "content": "<p>There could be an interesting version of this idea with an antisymmetry condition that forces C(AB...) to be trivial (a one-element set) whenever there are repeated indices.</p>",
        "id": 281151468,
        "sender_full_name": "Morgan Rogers (he/him)",
        "timestamp": 1651669367
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"407556\">Carlos Zapata-Carratala</span> <a href=\"#narrow/stream/229199-learning.3A-questions/topic/multisets.20vs.20tuples/near/281100143\">said</a>:</p>\n<blockquote>\n<p>The main example I have in mind are homsets in categories: in the standard definition of category homsets are defined on 2-tuples of objects so that C(A,B) =/= C(B,A), which is convenient when thinking of morphisms as directed links between objects. One could define an \"undirected\" category so that given a pair of objects A and B only the homset C(AB), where AB denotes a multiset of cardinality 2,  is defined. As far as I can see, all the usual notions of categories (composition, associativity, identities) appy in this \"undirected\" setting.</p>\n</blockquote>\n<p>Sounds good to me: categories are to directed graphs as undirected categories are to undirected graphs.. Also, this reminds me of dagger categories.</p>",
        "id": 281240913,
        "sender_full_name": "Simon Burton",
        "timestamp": 1651712713
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"277321\">Simon Burton</span> <a href=\"#narrow/stream/229199-learning.3A-questions/topic/multisets.20vs.20tuples/near/281240913\">said</a>:</p>\n<blockquote>\n<p>Sounds good to me: categories are to directed graphs as undirected categories are to undirected graphs.. Also, this reminds me of dagger categories.</p>\n</blockquote>\n<p>That was my intuition behind that example too. Higher arity generalizations of categories will take hypergraphs (whether directed or undirected).</p>",
        "id": 281282211,
        "sender_full_name": "Carlos Zapata-Carratala",
        "timestamp": 1651748233
    },
    {
        "content": "<p>So my next question is, what are the structure preserving morphisms between undirected categories (ucategories) ? It would seem that these morphisms  would be directed, which just comes from the underlying use of sets and functions. So instead of \"structure preserving morphisms\", we would want some kind of \"structure relating umorphisms\" between ucategories. Right? I'm guessing these things look like (labelled? simplicial?) cobordisms between ucategories, where we are thinking of a ucategory as some kind of labelled simplicial set.</p>",
        "id": 281294144,
        "sender_full_name": "Simon Burton",
        "timestamp": 1651755043
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"277321\">Simon Burton</span> <a href=\"#narrow/stream/229199-learning.3A-questions/topic/multisets.20vs.20tuples/near/281294144\">said</a>:</p>\n<blockquote>\n<p>So my next question is, what are the structure preserving morphisms between undirected categories (ucategories) ? It would seem that these morphisms  would be directed, which just comes from the underlying use of sets and functions. So instead of \"structure preserving morphisms\", we would want some kind of \"structure relating umorphisms\" between ucategories. Right? I'm guessing these things look like (labelled? simplicial?) cobordisms between ucategories, where we are thinking of a ucategory as some kind of labelled simplicial set.</p>\n</blockquote>\n<p>I haven't thought much about the morphisms between these higher arity ucategories since I haven't settled on a definition yet but the cobordism picture makes sense. I also think that in direct analogy with the case of functors for categories you would need to define \"hypergraphs of edges\" in some sense too.</p>",
        "id": 281356313,
        "sender_full_name": "Carlos Zapata-Carratala",
        "timestamp": 1651783321
    },
    {
        "content": "<p>If you want an undirected notion of category, doesn't the notion of <a href=\"https://ncatlab.org/nlab/show/groupoid\">[[groupoid]]</a> suffice?</p>",
        "id": 281363437,
        "sender_full_name": "Nathanael Arkor",
        "timestamp": 1651787097
    }
]