[
    {
        "content": "<p>There's a bunch of names one can give to a left adjoint: completion, free completion, free ..., -ization. <a href=\"https://ncatlab.org/nlab/show/completion\">This nLab page</a> explains when to use which. To summarize (as far as I understand what the page is trying to say), we call a left adjoint</p>\n<ul>\n<li><em>completion</em> if it is faithful and its right adjoint is fully faithful;</li>\n<li><em>-ization</em> or <em>-ification</em> if (it is not faithful and) its right adjoint is fully faithful (i.e., forgets property);</li>\n<li><em>free completion</em> if its right adjoint is faithful and forgets property-like structure;</li>\n<li><em>free</em> if its right adjoint is faithful (i.e., forgets structure).</li>\n</ul>\n<p>Is that correct? While I read the article rather carefully and most of the examples seem to support these definitions, I am confused about these counterexamples:</p>\n<ol>\n<li>On the page itself it says:</li>\n</ol>\n<blockquote>\n<p>By contrast, the forgetful functor from the 2-category of monoidal categories to Cat forgets structure, rather than properties, so its left adjoint should be called a “free” construction rather than a “completion.”</p>\n</blockquote>\n<p>But the forgetful functor from monoidal categories to categories is not faithful, since a monoidal functor is not determined by its underlying functor of categories. So why is one allowed to call that construction \"free\"?</p>\n<ol start=\"2\">\n<li>Why is one allowed to call the regularization of a cartesian category \"-ization\"?</li>\n</ol>",
        "id": 284390062,
        "sender_full_name": "Leopold Schlicht",
        "timestamp": 1653930456
    },
    {
        "content": "<p>The rambling reflections on that page shouldn't be taken as gospel, but as an attempt to make sense of an <em>existing</em> hodgepodge of terminology.  So it's not surprising that it won't encompass all existing terminologies -- it's more surprising that any systematic classification would encompas so <em>many</em> of the existing terminologies, most of which were probably introduced in an <em>ad hoc</em> manner.</p>",
        "id": 284390305,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1653930683
    },
    {
        "content": "<p>With that said...</p>",
        "id": 284390417,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1653930761
    },
    {
        "content": "<p>Ad (1), I don't see anywhere on the page that suggests that we should only use the word \"free\" when the right adjoint is faithful.</p>",
        "id": 284390445,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1653930784
    },
    {
        "content": "<p>I could imagine someone making such a suggestion, but only in the context of 1-categories.  For higher categories, I think the criterion ought to go up with the dimension.</p>",
        "id": 284390487,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1653930825
    },
    {
        "content": "<p>Ad (2), I don't think I <em>would</em> call it \"regularization\" -- I would say \"free regular completion\".</p>",
        "id": 284390545,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1653930860
    },
    {
        "content": "<p>Where did you see \"regularization\"?</p>",
        "id": 284390558,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1653930876
    },
    {
        "content": "<p>Thank you very much!</p>\n<p>Ad (1), this quote from the nLab page suggests that we should only use the word \"free\" when the right adjoint is faithful:</p>\n<blockquote>\n<p>By contrast, when we add structure to objects, i.e. we consider an adjoint to a forgetful functor which is faithful but not necessarily full, we usually do not use the word “completion” but rather the word “free”.</p>\n</blockquote>\n<p>What do you mean by \"the criterion ought to go up with the dimension\", is there a reasonable definition of \"faithful\" for 2-functors such that the forgetful functor from monoidal categories to categories is faithful?</p>\n<p>Ad (2), I read \"regularization\" at several places in the Elephant.</p>",
        "id": 284392964,
        "sender_full_name": "Leopold Schlicht",
        "timestamp": 1653932901
    },
    {
        "content": "<p>That quote says that we use the word \"free\" when we add structure, but not that we <em>only</em> use the word free when adding structure.</p>",
        "id": 284393150,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1653933117
    },
    {
        "content": "<p>I don't mean the criterion for the word \"faithful\" but the one for the word \"free\".  If we're restricting left adjoints between 1-categories to be called \"free\" when their right adjoint is faithful, then I would say a left adjoint between 2-categories should be allowed to be called \"free\" when its right adjoint is locally faithful, and so on.  This \"changing the goalposts\" when we go up in dimension is, I think, another argument for <em>not</em> imposing such a requirement on the word \"free\", since it's better to be able to consider 1-categories as degenerate 2-categories without changing our terminology.</p>",
        "id": 284393296,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1653933211
    },
    {
        "content": "<p>Re: the Elephant, ah, I see.  Well, as I said, I wouldn't say that.</p>",
        "id": 284393505,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1653933377
    },
    {
        "content": "<p>Thanks!</p>",
        "id": 284395800,
        "sender_full_name": "Leopold Schlicht",
        "timestamp": 1653935585
    }
]