[
    {
        "content": "<p>There's some discussion of this towards the beginning of Adamek-Rosicky <em>Locally presentable and accessible categories</em>, I believe.</p>",
        "id": 272727880,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1645472170
    },
    {
        "content": "<p>This is sort of like how to check if your function is continuous--you use various facts you already know about continuous functions but mainly what you need to do is determined by the function in question.</p>",
        "id": 272729759,
        "sender_full_name": "Reid Barton",
        "timestamp": 1645473558
    },
    {
        "content": "<p>Assuming Met is some flavor of metric spaces and short maps, IIRC it is only locally <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>ω</mi><mn>1</mn></msub></mrow><annotation encoding=\"application/x-tex\">\\omega_1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.5806em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">ω</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>-presentable and so you shouldn't necessarily expect there to be a good theory of functors that preserve filtered colimits, but there should indeed be a good theory of functors preserving <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>ω</mi><mn>1</mn></msub></mrow><annotation encoding=\"application/x-tex\">\\omega_1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.5806em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">ω</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>-filtered colimits.</p>",
        "id": 272729881,
        "sender_full_name": "Reid Barton",
        "timestamp": 1645473617
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"276480\">Reid Barton</span> <a href=\"#narrow/stream/229199-learning.3A-questions/topic/Checking.20if.20my.20functor.20preserves.20filtered.20colimits/near/272729759\">said</a>:</p>\n<blockquote>\n<p>This is sort of like how to check if your function is continuous--you use various facts you already know about continuous functions but mainly what you need to do is determined by the function in question.</p>\n</blockquote>\n<p>Do you have a reference where this is done by hands (for accessibility not continuity <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span>)? I think every proof of accessibility I have seen are very high level (e.g. using the fact that adjoints on locally presentable categories are accessible).</p>",
        "id": 272731424,
        "sender_full_name": "Ralph Sarkis",
        "timestamp": 1645474672
    },
    {
        "content": "<p>So an example that you can check by hand is that the functor F : Set -&gt; Set, F(X) = X^n for n a natural number preserves filtered colimits. That's because if X = colim_i X_i is a colimit over a filtered diagram, then every n-tuple of elements of X already arises as an n-tuple in some X_i (using filteredness), and likewise any two elements of X_i^n with the same image in X^n already get identified in X_j^n for some i &lt;= j.</p>",
        "id": 272732470,
        "sender_full_name": "Reid Barton",
        "timestamp": 1645475519
    },
    {
        "content": "<p>Or, using the general theory, this is just an instance of finite limits commuting with filtered colimits.</p>",
        "id": 272732535,
        "sender_full_name": "Reid Barton",
        "timestamp": 1645475551
    },
    {
        "content": "<p>All <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>ω</mi></mrow><annotation encoding=\"application/x-tex\">\\omega</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">ω</span></span></span></span>-accessible functors F : Set -&gt; Set are built up from these examples under colimits.</p>",
        "id": 272732575,
        "sender_full_name": "Reid Barton",
        "timestamp": 1645475590
    }
]