[
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"276777\">Mike Shulman</span> <a href=\"#narrow/stream/232163-learning.3A-history-of-ideas/topic/lax.20functors.20in.20Span.20.26.20their.20Grothendieck.20construction/near/306746439\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"275932\">Matteo Capucci (he/him)</span> <a href=\"#narrow/stream/232163-learning.3A-history-of-ideas/topic/lax.20functors.20in.20Span.20.26.20their.20Grothendieck.20construction/near/306719447\">said</a>:</p>\n<blockquote>\n<p>For some reason category theorists seem to be particularly prone to this phenomenon, having some of the founding fathers avoided publication of lots of non-trivial stuff.</p>\n</blockquote>\n<p>I suspect it's also partly due to the fact that so many facts in category theory have proofs that are straightforward and easy for experts to do in their head, but time-consuming and tedious to write down on paper.</p>\n</blockquote>\n<p>I think this problem originates from the fact that academic life does not reward the practice of writing down explicit arguments because yeah yeah, whatever, it's obvious once you're in the circle of ideas. I'm not saying we should write <em>everything</em> up; I'm saying that when someone writes down something completely elementary at a painstaking level of detail and accuracy (with exactly zero occurrences of \"one easily sees that the diagram commutes\"), we should at least thank them instead of belittling their effort.</p>",
        "id": 306820232,
        "sender_full_name": "fosco",
        "timestamp": 1667040803
    },
    {
        "content": "<p>Anyway, more in topic: I suspect <span class=\"user-mention\" data-user-id=\"275932\">@Matteo Capucci (he/him)</span> asked this question because of me, so maybe I can explain at least in the main lies what motivated me.</p>\n<p>I have a construction that I can turn into either</p>\n<ul>\n<li>a normal oplax functor <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"script\">C</mi><mo>→</mo><mi>S</mi><mi>p</mi><mi>a</mi><mi>n</mi><mo stretchy=\"false\">(</mo><mi>C</mi><mi>a</mi><mi>t</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">{\\cal C}\\to Span(Cat)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathcal\" style=\"margin-right:0.05834em;\">C</span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">Sp</span><span class=\"mord mathnormal\">an</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">t</span><span class=\"mclose\">)</span></span></span></span></li>\n<li>a normal lax functor <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"script\">C</mi><mo>→</mo><mi>C</mi><mi>o</mi><mi>S</mi><mi>p</mi><mi>a</mi><mi>n</mi><mo stretchy=\"false\">(</mo><mi>C</mi><mi>a</mi><mi>t</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">{\\cal C}\\to CoSpan(Cat)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathcal\" style=\"margin-right:0.05834em;\">C</span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">Sp</span><span class=\"mord mathnormal\">an</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">t</span><span class=\"mclose\">)</span></span></span></span></li>\n</ul>\n<p>(clearly these constructions arise as dual to each other in a suitable sense, so they are \"essentially the same\")</p>\n<p>My problem is that I don't know if this defines some kind of displayed category over <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"script\">C</mi></mrow><annotation encoding=\"application/x-tex\">\\cal C</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord\"><span class=\"mord mathcal\" style=\"margin-right:0.05834em;\">C</span></span></span></span></span>, generalising/dualising/etc the Grothendieck-Bénabou construction: if it doesn't, it's completely useless for my purposes. </p>\n<p>What gets in the way is that \"oplax into Span\" part: it's not lax into Span; and even if I transform it into a lax functor, I fall in cospans. So, the blanket is always too short either way I turn the arrow!</p>",
        "id": 306820529,
        "sender_full_name": "fosco",
        "timestamp": 1667040981
    },
    {
        "content": "<p>(in turn, the question is motivated by me trying to exit a cul-de-sac in a work in progress with <span class=\"user-mention\" data-user-id=\"278816\">@Greta Coraglia</span> , who might be interested in adding a word)</p>",
        "id": 306820765,
        "sender_full_name": "fosco",
        "timestamp": 1667041133
    },
    {
        "content": "<p>(funnily enough, I started this I was thinking about lax functors in Span bc of a conversation with <span class=\"user-mention\" data-user-id=\"276037\">@Jade Master</span> and you posted about it at the same time!)</p>",
        "id": 306827603,
        "sender_full_name": "Matteo Capucci (he/him)",
        "timestamp": 1667044527
    }
]