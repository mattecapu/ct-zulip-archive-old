[
    {
        "content": "<p>I would draw that diagram as this:</p>",
        "id": 320147842,
        "sender_full_name": "Eduardo Ochs",
        "timestamp": 1673238263
    },
    {
        "content": "<p><a href=\"/user_uploads/21317/i8mnyZTpzAqEuQ_T0HJywkGP/d.jpg\">d.jpg</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/21317/i8mnyZTpzAqEuQ_T0HJywkGP/d.jpg\" title=\"d.jpg\"><img src=\"/user_uploads/21317/i8mnyZTpzAqEuQ_T0HJywkGP/d.jpg\"></a></div>",
        "id": 320147849,
        "sender_full_name": "Eduardo Ochs",
        "timestamp": 1673238292
    },
    {
        "content": "<p>The details of the conventions that I use are here:<br>\n<a href=\"http://angg.twu.net/math-b.html#2022-md\">http://angg.twu.net/math-b.html#2022-md</a><br>\nTake a look at its section 8.12! =)</p>",
        "id": 320147937,
        "sender_full_name": "Eduardo Ochs",
        "timestamp": 1673238428
    },
    {
        "content": "<p>28 messages were moved here from <a class=\"stream-topic\" data-stream-id=\"229111\" href=\"/#narrow/stream/229111-general/topic/learning.20CT\">#general &gt; learning CT</a> by <span class=\"user-mention silent\" data-user-id=\"275932\">Matteo Capucci (he/him)</span>.</p>",
        "id": 320301369,
        "sender_full_name": "Notification Bot",
        "timestamp": 1673290340
    },
    {
        "content": "<p>In pullback/base change, is 'f' in itself a fiber/bundle? If so then that'd make a lots of sense.</p>",
        "id": 320435930,
        "sender_full_name": "Henri Tuhola",
        "timestamp": 1673352699
    },
    {
        "content": "<p>It can be, but not necessarily. It's better to think of <code>f</code> as a term that is being substituted into the definition of the dependent type.</p>",
        "id": 320436907,
        "sender_full_name": "Spencer Breiner",
        "timestamp": 1673353036
    },
    {
        "content": "<p>But why it ends up being defined before there is anything to substitute? In the introduction of the dependent function?</p>",
        "id": 320437587,
        "sender_full_name": "Henri Tuhola",
        "timestamp": 1673353247
    },
    {
        "content": "<p>I'm reading through \"Topoi, the Categorial Analysis of Logic.\" it has helped me to understand these concepts.</p>",
        "id": 320439924,
        "sender_full_name": "Henri Tuhola",
        "timestamp": 1673354070
    },
    {
        "content": "<p>But had to take a break. Maybe I'll just be silent until I've read through.</p>",
        "id": 320445276,
        "sender_full_name": "Henri Tuhola",
        "timestamp": 1673355714
    },
    {
        "content": "<p>This is the picture that helped me<br>\n<a href=\"/user_uploads/21317/uc_Ezr2IHHYyTwydO3jl-s6o/PXL_20230110_1315283532.jpg\">PXL_20230110_131528353~2.jpg</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/21317/uc_Ezr2IHHYyTwydO3jl-s6o/PXL_20230110_1315283532.jpg\" title=\"PXL_20230110_131528353~2.jpg\"><img src=\"/user_uploads/21317/uc_Ezr2IHHYyTwydO3jl-s6o/PXL_20230110_1315283532.jpg\"></a></div>",
        "id": 320448061,
        "sender_full_name": "Spencer Breiner",
        "timestamp": 1673356695
    },
    {
        "content": "<p>But the picture on the right is just an elaborate way to construct a commutative triangle<br>\n<a href=\"/user_uploads/21317/2RhaLJtDJC3-EP7D-GX6o86k/PXL_20230110_1319187262.jpg\">PXL_20230110_131918726~2.jpg</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/21317/2RhaLJtDJC3-EP7D-GX6o86k/PXL_20230110_1319187262.jpg\" title=\"PXL_20230110_131918726~2.jpg\"><img src=\"/user_uploads/21317/2RhaLJtDJC3-EP7D-GX6o86k/PXL_20230110_1319187262.jpg\"></a></div>",
        "id": 320448378,
        "sender_full_name": "Spencer Breiner",
        "timestamp": 1673356791
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"278008\">Spencer Breiner</span> <a href=\"#narrow/stream/229111-general/topic/learning.20dependent.20type.20theory/near/320448061\">said</a>:</p>\n<blockquote>\n<p>This is the picture that helped me<br>\n<a href=\"/user_uploads/21317/uc_Ezr2IHHYyTwydO3jl-s6o/PXL_20230110_1315283532.jpg\">PXL_20230110_131528353~2.jpg</a></p>\n</blockquote>\n<p>what do those things correspond to? is this a construction, if so, of what starting from what?</p>",
        "id": 320451644,
        "sender_full_name": "Josselin Poiret",
        "timestamp": 1673357687
    },
    {
        "content": "<p>On the left we have three declarations, and on the right the associated categorical structure. In particular, the pullback is used to interpret the substitution of <code>f</code> into <code>A</code>, which is needed to give the type of <code>a</code>.</p>",
        "id": 320454083,
        "sender_full_name": "Spencer Breiner",
        "timestamp": 1673358396
    },
    {
        "content": "<p>From the diagrammatic perspective it's a bit roundabout because it's not easy to talk about a term that depends on one context in a type that depends on another. For me, it's easier to think about the partial section <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>Y</mi><mo>→</mo><mi>A</mi></mrow><annotation encoding=\"application/x-tex\">Y\\to A</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">A</span></span></span></span> directly, and the (total) section of the pullback is just a device to fit it into type theory.</p>",
        "id": 320454973,
        "sender_full_name": "Spencer Breiner",
        "timestamp": 1673358667
    },
    {
        "content": "<p>Obviously a very important device...</p>",
        "id": 320455091,
        "sender_full_name": "Spencer Breiner",
        "timestamp": 1673358695
    }
]