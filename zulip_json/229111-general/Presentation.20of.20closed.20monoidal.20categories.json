[
    {
        "content": "<p>I'm working on something involving closed monoidal categories, and I wondered if anybody has a pointer on the construction of a free symmetric closed monoidal category (SCMC) starting from a collection of generating objects and morphisms. </p>\n<p>Traditionally, SCMCs are described as SMCs where the tensor has a right adjoint. However, I believe it should be doable to describe this data equivalently by saying that there are eval_{A,B} morphisms for each objects A,B, and Lambda(f) morphisms for each morphism f, satisfying certain equations. I've started working this out myself (in fact, I've used something along these lines fairly recently, in a FSCD2022 paper on rewriting in SCMCs, but I'd like to understand it more systematically). However, I have the impression it should be written somewhere already. Any hint?</p>",
        "id": 348509626,
        "sender_full_name": "Fabio Zanasi",
        "timestamp": 1681230473
    },
    {
        "content": "<p>Sorry for the very dumb comment but can't you use eval and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>λ</mi></mrow><annotation encoding=\"application/x-tex\">\\lambda</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\">λ</span></span></span></span> to recover the units and counits of the tensor-hom adjunction? then you're back at the problem of presenting a monoidal category</p>",
        "id": 348510459,
        "sender_full_name": "Matteo Capucci (he/him)",
        "timestamp": 1681230676
    },
    {
        "content": "<p>Are you thinking of a linear type theory, something like section 2.10 of <a href=\"http://mikeshulman.github.io/catlog/catlog.pdf\">mikeshulman.github.io/catlog/catlog.pdf</a>?</p>",
        "id": 348510498,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1681230687
    },
    {
        "content": "<p>I think what you want is contained in the paper, \"Graphical presentations of symmetric monoidal closed theories\"</p>\n<p><a href=\"https://hal.science/hal-00333750/file/smcc.pdf\">https://hal.science/hal-00333750/file/smcc.pdf</a></p>",
        "id": 348511782,
        "sender_full_name": "Cole Comfort",
        "timestamp": 1681230987
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"276777\">Mike Shulman</span> <a href=\"#narrow/stream/229111-general/topic/Presentation.20of.20closed.20monoidal.20categories/near/348510498\">said</a>:</p>\n<blockquote>\n<p>Are you thinking of a linear type theory, something like section 2.10 of <a href=\"http://mikeshulman.github.io/catlog/catlog.pdf\">mikeshulman.github.io/catlog/catlog.pdf</a>?</p>\n</blockquote>\n<p>Mmm I'm thinking of something way more basic than this. Just a presentation by generators and relations.</p>",
        "id": 348576283,
        "sender_full_name": "Fabio Zanasi",
        "timestamp": 1681253814
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"275932\">Matteo Capucci (he/him)</span> <a href=\"#narrow/stream/229111-general/topic/Presentation.20of.20closed.20monoidal.20categories/near/348510459\">said</a>:</p>\n<blockquote>\n<p>Sorry for the very dumb comment but can't you use eval and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>λ</mi></mrow><annotation encoding=\"application/x-tex\">\\lambda</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\">λ</span></span></span></span> to recover the units and counits of the tensor-hom adjunction? then you're back at the problem of presenting a monoidal category</p>\n</blockquote>\n<p>Basically yes, that's the route I pursued. But I was wondering whether there was an existing reference for this style of presentation, perhaps also operating some simplifcation with respect to a plain translation of the unit/counit conditions.</p>\n<p>The question is related to using string diagrams to reason about free SCMCs. Note for the case of SMCs we can confine ourselves to generating objects as wire labels, but this does not seem possible for SCMCs, because arbitrary objects are not just lists of generators but more complex entities (they mix $\\otimes$ with $\\multimap$).</p>",
        "id": 348576886,
        "sender_full_name": "Fabio Zanasi",
        "timestamp": 1681254099
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"277391\">Cole Comfort</span> <a href=\"#narrow/stream/229111-general/topic/Presentation.20of.20closed.20monoidal.20categories/near/348511782\">said</a>:</p>\n<blockquote>\n<p>I think what you want is contained in the paper, \"Graphical presentations of symmetric monoidal closed theories\"</p>\n<p><a href=\"https://hal.science/hal-00333750/file/smcc.pdf\">https://hal.science/hal-00333750/file/smcc.pdf</a></p>\n</blockquote>\n<p>This seems very much relevant, thanks. I'm going to study it in more detail.</p>",
        "id": 348577281,
        "sender_full_name": "Fabio Zanasi",
        "timestamp": 1681254263
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"351836\">Fabio Zanasi</span> <a href=\"#narrow/stream/229111-general/topic/Presentation.20of.20closed.20monoidal.20categories/near/348576886\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"275932\">Matteo Capucci (he/him)</span> <a href=\"#narrow/stream/229111-general/topic/Presentation.20of.20closed.20monoidal.20categories/near/348510459\">said</a>:</p>\n<blockquote>\n<p>Sorry for the very dumb comment but can't you use eval and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>λ</mi></mrow><annotation encoding=\"application/x-tex\">\\lambda</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\">λ</span></span></span></span> to recover the units and counits of the tensor-hom adjunction? then you're back at the problem of presenting a monoidal category</p>\n</blockquote>\n<p>Basically yes, that's the route I pursued. But I was wondering whether there was an existing reference for this style of presentation, perhaps also operating some simplifcation with respect to a plain translation of the unit/counit conditions.</p>\n<p>The question is related to using string diagrams to reason about free SCMCs. Note for the case of SMCs we can confine ourselves to generating objects as wire labels, but this does not seem possible for SCMCs, because arbitrary objects are not just lists of generators but more complex entities (they mix $\\otimes$ with $\\multimap$).</p>\n</blockquote>\n<p><span class=\"user-mention\" data-user-id=\"276777\">@Mike Shulman</span> proved that closed symmetric monoidal categories fully faithfully embed in *-autonomous categories:<br>\n<a href=\"https://arxiv.org/pdf/2004.08487.pdf\">https://arxiv.org/pdf/2004.08487.pdf</a> (<a href=\"https://www.youtube.com/watch?v=5CjSu5hLtcw\">https://www.youtube.com/watch?v=5CjSu5hLtcw</a>)</p>\n<div class=\"youtube-video message_inline_image\"><a data-id=\"5CjSu5hLtcw\" href=\"https://www.youtube.com/watch?v=5CjSu5hLtcw\"><img src=\"https://uploads.zulipusercontent.net/e7cbf4ebbdd36ce01238837e18f0921df2d2333d/68747470733a2f2f692e7974696d672e636f6d2f76692f35436a537535684c7463772f64656661756c742e6a7067\"></a></div><p>So you can regard the  object <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>A</mi><mo>⊸</mo><mi>B</mi></mrow><annotation encoding=\"application/x-tex\"> A \\multimap B</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">A</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel amsrm\">⊸</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span></span></span></span> as <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><msup><mi>A</mi><mo>∗</mo></msup><mo>⊗</mo><mi>B</mi><msup><mo stretchy=\"false\">)</mo><mo>∗</mo></msup></mrow><annotation encoding=\"application/x-tex\"> (A^* \\otimes B)^* </annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">A</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6887em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⊗</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6887em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span>.  This may not be a completely satisfying to you, but this perspective is conceptually useful for me.</p>",
        "id": 348712759,
        "sender_full_name": "Cole Comfort",
        "timestamp": 1681302407
    }
]