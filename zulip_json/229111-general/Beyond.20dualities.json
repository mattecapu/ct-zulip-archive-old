[
    {
        "content": "<p>There is a tragic irony in life: there are things for which we know not of their definition, but we learn about them through perception. We then try to come up with principles through our empirical evidence in a vain effort to explain things. True enough, the less we observe the less accurate our principles are. And this is deeply ironic because no matter what, our observations can never be complete. I.e. the Yoneda lemma, in its full generality, is beyond our grasp. Now, the irony being tragic depends on the existence of someone with complete access to observations, but let's not touch on that.</p>\n<p>Before I got into CT I always thought math only care about well-defined objects and their properties. In an observationally unclear world, math could be this sanctum of  well-foundedness that can give some semblance of order, of security, I thought. I couldn't have been more wrong. Definition vs observation, composition vs decomposition, structure vs destruction, this is not just a duality, it's an eternal conflict!</p>\n<p>Strangely enough, I've come to appreciate and embrace this seemingly fundamental duality. Which is perhaps  why I'm so into algebras and coalgebras, monads and comonads, distributive laws of one over the other. Distributive laws prove that observation and structure can co-exist, that behavior may arise compositionally through structure. But, just like in real life, you can never know if there's order hidden in the chaos.</p>\n<p>Understanding this duality has been one of the most important lessons I could ever have, one that changed my viewpoint on Life, the Universe and Everything.</p>",
        "id": 192960737,
        "sender_full_name": "Stelios Tsampas",
        "timestamp": 1586095012
    },
    {
        "content": "<p>Did you read Yoshihiro Maruyama's PhD thesis? It's fundamentally about dualities, also from a philosophical standpoint <span aria-label=\"slight smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"slight smile\">:slight_smile:</span></p>",
        "id": 192962409,
        "sender_full_name": "Fabrizio Genovese",
        "timestamp": 1586097491
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"276438\">Fabrizio Genovese</span> <a href=\"#narrow/stream/229111-general/topic/Math.20and.20Real.20Life/near/192962409\" title=\"#narrow/stream/229111-general/topic/Math.20and.20Real.20Life/near/192962409\">said</a>:</p>\n<blockquote>\n<p>Did you read Yoshihiro Maruyama's PhD thesis? It's fundamentally about dualities, also from a philosophical standpoint :)</p>\n</blockquote>\n<p>No, I haven't... But I've seen that mentioned before, maybe from you! Have you?</p>",
        "id": 192962676,
        "sender_full_name": "Stelios Tsampas",
        "timestamp": 1586097911
    },
    {
        "content": "<p>I've entertained the idea (late at night, under the influence of... things) that duality is actually a jail we're all imprisoned in. That maybe there's something hidden in plain sight, like a \"trinity\" or \"n-ity\" that we just can't see. Like a conceptual fourth dimension of sorts.</p>",
        "id": 192962849,
        "sender_full_name": "Stelios Tsampas",
        "timestamp": 1586098127
    },
    {
        "content": "<p>Not from me, anyway you can find it here: <a href=\"http://www.cs.ox.ac.uk/people/bob.coecke/Yoshi.pdf\" title=\"http://www.cs.ox.ac.uk/people/bob.coecke/Yoshi.pdf\">http://www.cs.ox.ac.uk/people/bob.coecke/Yoshi.pdf</a></p>",
        "id": 192962854,
        "sender_full_name": "Fabrizio Genovese",
        "timestamp": 1586098138
    },
    {
        "content": "<p>Thanks!</p>",
        "id": 192962868,
        "sender_full_name": "Stelios Tsampas",
        "timestamp": 1586098161
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"275900\">Stelios Tsampas</span> <a href=\"#narrow/stream/229111-general/topic/Math.20and.20Real.20Life/near/192962849\" title=\"#narrow/stream/229111-general/topic/Math.20and.20Real.20Life/near/192962849\">said</a>:</p>\n<blockquote>\n<p>I've entertained the idea (late at night, under the influence of... things) that duality is actually a jail we're all imprisoned in. That maybe there's something hidden in plain sight, like a \"trinity\" or \"n-ity\" that we just can't see. Like a conceptual fourth dimension of sorts.</p>\n</blockquote>\n<p>I think something along <a href=\"https://ncatlab.org/nlab/show/Aufhebung\" title=\"https://ncatlab.org/nlab/show/Aufhebung\">Lawvere's notion of Aufhebung</a>, itself based on the notion of levels of a topos, might be an interesting expansion of the dualistic point of view.</p>",
        "id": 192963735,
        "sender_full_name": "Matteo Capucci (he/him)",
        "timestamp": 1586099456
    },
    {
        "content": "<p>Rota vaguely opined that eventually math is going to move on to take ternary operations seriously.  The same might be said for trialities.  The one really important triality I've put a lot of time into is the <a href=\"http://math.ucr.edu/home/baez/octonions/node7.html\" title=\"http://math.ucr.edu/home/baez/octonions/node7.html\">triality in 8 dimensions</a>, which underlies the octonions and ultimately superstring theory.   But this seems so exotic and specialized compared to dualities!</p>",
        "id": 192974689,
        "sender_full_name": "John Baez",
        "timestamp": 1586115943
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"275920\">John Baez</span> <a href=\"#narrow/stream/229111-general/topic/Math.20and.20Real.20Life/near/192974689\" title=\"#narrow/stream/229111-general/topic/Math.20and.20Real.20Life/near/192974689\">said</a>:</p>\n<blockquote>\n<p>Rota vaguely opined that eventually math is going to move on to take ternary operations seriously.  The same might be said for trialities.  The one really important triality I've put a lot of time into is the <a href=\"http://math.ucr.edu/home/baez/octonions/node7.html\" title=\"http://math.ucr.edu/home/baez/octonions/node7.html\">triality in 8 dimensions</a>, which underlies the octonions and ultimately superstring theory.   But this seems so exotic and specialized compared to dualities!</p>\n</blockquote>\n<p>Might be fun to try to think of a few \"convincing\" examples of ternary operations (meaning, \"ones to take seriously\"). How convincing are <a href=\"https://ncatlab.org/nlab/show/heap\" title=\"https://ncatlab.org/nlab/show/heap\">heaps</a>?</p>",
        "id": 192977431,
        "sender_full_name": "Todd Trimble",
        "timestamp": 1586119696
    },
    {
        "content": "<p>‚Äúquantum heap‚Äù is an amazing name. ü§£</p>",
        "id": 192977604,
        "sender_full_name": "James Wood",
        "timestamp": 1586119929
    },
    {
        "content": "<p>A lot of  'binary' operations are actually n-ary operations for all natural n. Thinking of ternary operations is difficult, but so is thinking of binary operations that aren't associative!</p>",
        "id": 192977694,
        "sender_full_name": "Oscar Cunningham",
        "timestamp": 1586120062
    },
    {
        "content": "<p>Yeah, I wanted to say something like this. A monoid is not really about its binary and nullary operators, but rather its ability to handle lists of inputs in a uniform way (in the sense that it doesn't look to see how many elements the list has, or anything like that).</p>",
        "id": 192977854,
        "sender_full_name": "James Wood",
        "timestamp": 1586120336
    },
    {
        "content": "<p>One ternary <em>relation</em> that is pretty convincing (and might actually be related to heaps) is betweenness: the relation of a point belonging to the line segment between two others. IIRC, you can axiomatize affine space using just this relation.</p>",
        "id": 192977996,
        "sender_full_name": "Evan Patterson",
        "timestamp": 1586120487
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"275920\">John Baez</span> <a href=\"#narrow/stream/229111-general/topic/Math.20and.20Real.20Life/near/192974689\" title=\"#narrow/stream/229111-general/topic/Math.20and.20Real.20Life/near/192974689\">said</a>:</p>\n<blockquote>\n<p>Rota vaguely opined that eventually math is going to move on to take ternary operations seriously.  The same might be said for trialities.  The one really important triality I've put a lot of time into is the <a href=\"http://math.ucr.edu/home/baez/octonions/node7.html\" title=\"http://math.ucr.edu/home/baez/octonions/node7.html\">triality in 8 dimensions</a>, which underlies the octonions and ultimately superstring theory.   But this seems so exotic and specialized compared to dualities!</p>\n</blockquote>\n<p>So that stuff actually exists. Huh.</p>",
        "id": 192978051,
        "sender_full_name": "Stelios Tsampas",
        "timestamp": 1586120534
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"281583\">James Wood</span> <a href=\"#narrow/stream/229111-general/topic/Math.20and.20Real.20Life/near/192977854\" title=\"#narrow/stream/229111-general/topic/Math.20and.20Real.20Life/near/192977854\">said</a>:</p>\n<blockquote>\n<p>Yeah, I wanted to say something like this. A monoid is not really about its binary and nullary operators, but rather its ability to handle lists of inputs in a uniform way (in the sense that it doesn't look to see how many elements the list has, or anything like that).</p>\n</blockquote>\n<p>Of course I agree, but I think I mean the question in a loose \"change hearts and minds\" sense, that might get people to consider researching certain ternary operations as important.</p>",
        "id": 192978175,
        "sender_full_name": "Todd Trimble",
        "timestamp": 1586120749
    },
    {
        "content": "<p>Between a shape having an inside and an outside, and an arrow having a pointy end and a feathery end, it's hard to imagine trialities ever being as important as dualities</p>",
        "id": 192978222,
        "sender_full_name": "Jules Hedges",
        "timestamp": 1586120778
    },
    {
        "content": "<p>VERY vague thought here, but there is a third element hiding in all of these: in the first, the boundary of the shape itself, and in the second, the arrow itself. I feel like we might at some point move from ‚Äúobject-level manipulations‚Äù (e.g. take a binary product of these two things) to ‚Äústatement-level manipulations‚Äù (e.g. look at the equality between the arguments of the binary product and its output as a ternary relationship, and treat that as ‚Äúprimitively‚Äù as we do the binary operation now)</p>",
        "id": 192978553,
        "sender_full_name": "T Murrills",
        "timestamp": 1586121246
    },
    {
        "content": "<p>There are some <em>trichotomies</em> eg. positive/negative/zero, inside/outside/boundary, parabolic/hyperbolic/elliptic... there was a mathoverflow question about this once</p>",
        "id": 192978598,
        "sender_full_name": "Jules Hedges",
        "timestamp": 1586121353
    },
    {
        "content": "<p>Actually, the cross-ratio is a classical sort of 4-ary operation on projective lines that seems to be of some interest.</p>",
        "id": 192978909,
        "sender_full_name": "Todd Trimble",
        "timestamp": 1586121774
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"277611\">Todd Trimble</span> <a href=\"#narrow/stream/229111-general/topic/Math.20and.20Real.20Life/near/192978909\" title=\"#narrow/stream/229111-general/topic/Math.20and.20Real.20Life/near/192978909\">said</a>:</p>\n<blockquote>\n<p>Actually, the cross-ratio is a classical sort of 4-ary operation on projective lines that seems to be of some interest.</p>\n</blockquote>\n<p>Hm, probably didn't say that right. Maybe better to consider a family of ternary operations <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>C</mi><mi>r</mi></msub></mrow><annotation encoding=\"application/x-tex\">C_r</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.07153em;\">C</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.02778em;\">r</span></span></span></span><span class=\"vlist-s\">‚Äã</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> (parametrized by points <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>r</mi></mrow><annotation encoding=\"application/x-tex\">r</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">r</span></span></span></span> in the model <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>k</mi><mo>‚äî</mo><mo stretchy=\"false\">{</mo><mi mathvariant=\"normal\">‚àû</mi><mo stretchy=\"false\">}</mo></mrow><annotation encoding=\"application/x-tex\">k \\sqcup \\{\\infty\\}</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.03148em;\">k</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">‚äî</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">{</span><span class=\"mord\">‚àû</span><span class=\"mclose\">}</span></span></span></span>) where <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>C</mi><mi>r</mi></msub><mo stretchy=\"false\">(</mo><mi>x</mi><mo separator=\"true\">,</mo><mi>y</mi><mo separator=\"true\">,</mo><mi>z</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mi>w</mi></mrow><annotation encoding=\"application/x-tex\">C_r(x, y, z) = w</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.07153em;\">C</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.02778em;\">r</span></span></span></span><span class=\"vlist-s\">‚Äã</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">x</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">y</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.04398em;\">z</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.02691em;\">w</span></span></span></span> means <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">[</mo><mi>x</mi><mo separator=\"true\">,</mo><mi>y</mi><mo separator=\"true\">;</mo><mi>z</mi><mo separator=\"true\">,</mo><mi>w</mi><mo stretchy=\"false\">]</mo><mo>=</mo><mi>r</mi></mrow><annotation encoding=\"application/x-tex\">[x, y; z , w] = r</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord mathdefault\">x</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">y</span><span class=\"mpunct\">;</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.04398em;\">z</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.02691em;\">w</span><span class=\"mclose\">]</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">r</span></span></span></span>. Then at least for projective transformations <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>œï</mi></mrow><annotation encoding=\"application/x-tex\">\\phi</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathdefault\">œï</span></span></span></span>, we have <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>œï</mi><mo stretchy=\"false\">(</mo><msub><mi>C</mi><mi>r</mi></msub><mo stretchy=\"false\">(</mo><mi>x</mi><mo separator=\"true\">,</mo><mi>y</mi><mo separator=\"true\">,</mo><mi>z</mi><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">)</mo><mo>=</mo><msub><mi>C</mi><mi>r</mi></msub><mo stretchy=\"false\">(</mo><mi>œï</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">)</mo><mo separator=\"true\">,</mo><mi>œï</mi><mo stretchy=\"false\">(</mo><mi>y</mi><mo stretchy=\"false\">)</mo><mo separator=\"true\">,</mo><mi>œï</mi><mo stretchy=\"false\">(</mo><mi>z</mi><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\phi(C_r(x, y, z)) = C_r(\\phi(x), \\phi(y), \\phi(z))</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\">œï</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.07153em;\">C</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.02778em;\">r</span></span></span></span><span class=\"vlist-s\">‚Äã</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">x</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">y</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.04398em;\">z</span><span class=\"mclose\">)</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.07153em;\">C</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.02778em;\">r</span></span></span></span><span class=\"vlist-s\">‚Äã</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">œï</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">x</span><span class=\"mclose\">)</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\">œï</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">y</span><span class=\"mclose\">)</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\">œï</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\" style=\"margin-right:0.04398em;\">z</span><span class=\"mclose\">)</span><span class=\"mclose\">)</span></span></span></span>.</p>",
        "id": 192979870,
        "sender_full_name": "Todd Trimble",
        "timestamp": 1586123227
    },
    {
        "content": "<p>I think there are plenty of non-binary operations to be had in computer science. For instance, binary trees have a node forming operation <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mrow><mi mathvariant=\"sans-serif\">T</mi><mi mathvariant=\"sans-serif\">r</mi><mi mathvariant=\"sans-serif\">e</mi><mi mathvariant=\"sans-serif\">e</mi></mrow><mtext>¬†</mtext><mi>A</mi><mo>‚Üí</mo><mi>A</mi><mo>‚Üí</mo><mrow><mi mathvariant=\"sans-serif\">T</mi><mi mathvariant=\"sans-serif\">r</mi><mi mathvariant=\"sans-serif\">e</mi><mi mathvariant=\"sans-serif\">e</mi></mrow><mtext>¬†</mtext><mi>A</mi><mo>‚Üí</mo><mrow><mi mathvariant=\"sans-serif\">T</mi><mi mathvariant=\"sans-serif\">r</mi><mi mathvariant=\"sans-serif\">e</mi><mi mathvariant=\"sans-serif\">e</mi></mrow><mtext>¬†</mtext><mi>A</mi></mrow><annotation encoding=\"application/x-tex\">\\mathsf{Tree}\\ A ‚Üí A ‚Üí \\mathsf{Tree}\\ A ‚Üí \\mathsf{Tree}\\ A</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathsf\">T</span><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">r</span><span class=\"mord mathsf\">e</span><span class=\"mord mathsf\">e</span></span><span class=\"mspace\">¬†</span><span class=\"mord mathdefault\">A</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">‚Üí</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">A</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">‚Üí</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathsf\">T</span><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">r</span><span class=\"mord mathsf\">e</span><span class=\"mord mathsf\">e</span></span><span class=\"mspace\">¬†</span><span class=\"mord mathdefault\">A</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">‚Üí</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathsf\">T</span><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">r</span><span class=\"mord mathsf\">e</span><span class=\"mord mathsf\">e</span></span><span class=\"mspace\">¬†</span><span class=\"mord mathdefault\">A</span></span></span></span>.</p>",
        "id": 192981632,
        "sender_full_name": "Dan Doel",
        "timestamp": 1586126062
    },
    {
        "content": "<p>What's the node forming operation?</p>",
        "id": 192981838,
        "sender_full_name": "Todd Trimble",
        "timestamp": 1586126496
    },
    {
        "content": "<p>It forms a tree with the specified root value and two subtrees.</p>",
        "id": 192981896,
        "sender_full_name": "Dan Doel",
        "timestamp": 1586126525
    },
    {
        "content": "<p>I think there might be a name for this sort of structure for which trees are the free example, but I forget the name.</p>",
        "id": 192981976,
        "sender_full_name": "Dan Doel",
        "timestamp": 1586126712
    },
    {
        "content": "<p>Similar to monoids, but to glue two things together, you must put something in between (<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>M</mi><mo>‚Üí</mo><mi>A</mi><mo>‚Üí</mo><mi>M</mi><mo>‚Üí</mo><mi>M</mi></mrow><annotation encoding=\"application/x-tex\">M ‚Üí A ‚Üí M ‚Üí M</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.10903em;\">M</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">‚Üí</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">A</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">‚Üí</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.10903em;\">M</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">‚Üí</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.10903em;\">M</span></span></span></span>), and trees aren't associative so it might have 'skew' in the name.</p>",
        "id": 192982089,
        "sender_full_name": "Dan Doel",
        "timestamp": 1586126905
    },
    {
        "content": "<p>Hi, <span class=\"user-mention\" data-user-id=\"277611\">@Todd Trimble</span>!  Great to see you here!  Yes, heaps are a nice way to formalize \"groups that have forgotten their origin\", a nice alternative to torsors where you need to have a group around to define them.</p>\n<p>Some other examples of ternary operations: James Dolan used to like explaining <a href=\"https://en.wikipedia.org/wiki/Triple_system#Lie_triple_systems\" title=\"https://en.wikipedia.org/wiki/Triple_system#Lie_triple_systems\">Lie triple systems</a>, which are to symmetric spaces as Lie algebras are to Lie groups.</p>\n<p>Also there are <a href=\"https://en.wikipedia.org/wiki/Triple_system#Jordan_triple_systems\" title=\"https://en.wikipedia.org/wiki/Triple_system#Jordan_triple_systems\">Jordan triple systems</a>, which I forget the deep inner meaning of... I think they're like Jordan algebras that have \"forgotten its 1\".    It's important to be able to change your mind about which element is the multiplicative unit in a Jordan algebra (sorry if that remark is obscure, I could explain it now that it's coming back to me).</p>\n<p>Also there's the <a href=\"http://math.ucr.edu/home/baez/octonions/node18.html\" title=\"http://math.ucr.edu/home/baez/octonions/node18.html\">Freudenthal triple system</a>, which is highly specialized: a way to talk about the structure possessed by the smallest irrep of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>E</mi><mn>7</mn></msub></mrow><annotation encoding=\"application/x-tex\">E_7</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.05764em;\">E</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">7</span></span></span></span><span class=\"vlist-s\">‚Äã</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>.   </p>\n<p>And generalizing the last two, there are <a href=\"https://www.encyclopediaofmath.org/index.php/Freudenthal-Kantor_triple_system\" title=\"https://www.encyclopediaofmath.org/index.php/Freudenthal-Kantor_triple_system\">Freudenthal-Kantor triple systems</a>, which as you can see have quite noble ambitions.  I don't understand them.</p>",
        "id": 192982159,
        "sender_full_name": "John Baez",
        "timestamp": 1586127082
    },
    {
        "content": "<p>Kinda wanna ask, \"<a href=\"https://en.wikipedia.org/wiki/What_would_Jesus_do%3F\" title=\"https://en.wikipedia.org/wiki/What_would_Jesus_do%3F\">what would Rota say?</a>\" to any one of these interesting examples.</p>",
        "id": 192982271,
        "sender_full_name": "Todd Trimble",
        "timestamp": 1586127256
    },
    {
        "content": "<p>I guess the non-associativity is essential, because otherwise you could just say it's a free semigroup/monoid. The non-associativity means that the ternary operation encodes meaning that isn't obviously divided into an inclusion and a unital binary operation.</p>",
        "id": 192982707,
        "sender_full_name": "Dan Doel",
        "timestamp": 1586128065
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"275920\">John Baez</span> <a href=\"#narrow/stream/229111-general/topic/Beyond.20dualities/near/192982159\" title=\"#narrow/stream/229111-general/topic/Beyond.20dualities/near/192982159\">said</a>:</p>\n<blockquote>\n<p>Some other examples of ternary operations: James Dolan used to like explaining <a href=\"https://en.wikipedia.org/wiki/Triple_system#Lie_triple_systems\" title=\"https://en.wikipedia.org/wiki/Triple_system#Lie_triple_systems\">Lie triple systems</a>, which are to symmetric spaces as Lie algebras are to Lie groups.</p>\n</blockquote>\n<p>I took a look in the wikipedia page for Lie triple systems and I noticed that their second law, which looks like it involves a shifting of sorts, resembles what my idea of a triality would be: If the (informal) principle of duality manifests as \"Take a construct represented in a commutative diagram and reverse the arrows to create its dual\" in Category Theory, a possible triality would instead involve a shifting operation between three objects (they can be something like \"source, target and observer\"). Of course, I'd expect that after three shifts I'd be right where I started, much like <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><msup><mi mathvariant=\"double-struck\">C</mi><mrow><mi>o</mi><mi>p</mi></mrow></msup><msup><mo stretchy=\"false\">)</mo><mrow><mi>o</mi><mi>p</mi></mrow></msup><mo>‚â°</mo><msup><mi mathvariant=\"double-struck\">C</mi><mrow><mi>o</mi><mi>p</mi></mrow></msup></mrow><annotation encoding=\"application/x-tex\"> (\\mathbb{C}^{op})^{op} \\equiv \\mathbb{C}^{op}</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathbb\">C</span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.664392em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">o</span><span class=\"mord mathdefault mtight\">p</span></span></span></span></span></span></span></span></span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.664392em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">o</span><span class=\"mord mathdefault mtight\">p</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">‚â°</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68889em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathbb\">C</span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.664392em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">o</span><span class=\"mord mathdefault mtight\">p</span></span></span></span></span></span></span></span></span></span></span></span>. Trippy...</p>",
        "id": 193235706,
        "sender_full_name": "Stelios Tsampas",
        "timestamp": 1586287478
    },
    {
        "content": "<p>But this sounds a lot like (co)slice categories so I don't know.</p>",
        "id": 193236093,
        "sender_full_name": "Stelios Tsampas",
        "timestamp": 1586287674
    },
    {
        "content": "<p>This second law is a mutant version of the \"Jacobi identity\", which for a binary operation [-,-] says</p>\n<p>[a,[b,c]] + [b,[c,a]] + [c,[a,b]] = 0</p>\n<p>(we're summing over cyclic permutations). The Jacobi identity holds for Lie algebras.</p>\n<p>This stuff is fun!</p>",
        "id": 193239712,
        "sender_full_name": "John Baez",
        "timestamp": 1586289470
    }
]