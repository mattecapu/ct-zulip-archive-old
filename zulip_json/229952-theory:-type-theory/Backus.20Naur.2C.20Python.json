[
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"629908\">Julius</span> <a href=\"#narrow/stream/229952-theory.3A-type-theory/topic/Bacchus.20Naur.2C.20Python/near/377619260\">said</a>:</p>\n<blockquote>\n<p>Curious if there’s a dense, pure definition of category theoretic objects as a tight, rigorous language - could be like an extended Bacchus Naur Form description of category theory, axiomatically / as a formal language?</p>\n<p>I’m personally try to make sure I have some basic definitions solidified. Seven Sketches of Compositionality, the book I’m working with, does not provide definitions of sets or logical concepts, beyond “a collection of things”.</p>\n<p>But my early attempt would be something like this (maybe to come, in Python).</p>\n<p>We could take the Python set object as the mathematical concept of a set. To add structure we can define new classes.</p>\n<p>What might a list of definitions look like?</p>\n<p>We probably need products and subsets next?</p>\n<p>Products are tuples in Python.</p>\n<p>A subset is a set, the parent / superset set, and the “subset function” that tests the truth condition “is subset”: so its signature is actually a triple, A, B, f. Right? def subset(A, B): condition = False; for element in B: if element not in A: condition = False; return condition</p>\n<p>I imagine there’s a more pythonic way using a list processing method like a map or filter or something.</p>\n<p>And then? I’ll see what is needed next. I know a relation is actually a subset of a product set. A function is a relation with a certain condition expressed in logical quantifiers, I think? two sets A B, for each b in B, there exists one and only one a in A such that the tuple in the subset of the product set of A and B has b in second place.</p>\n<p>So we skipped over sets and logic, but it doesn’t matter since we already roughly have it in Python. We define a preorder as a binary relation which is reflexive and transitive. Like subsets, perhaps, all concepts can be defined as a signature of objects <em>and</em> functions they have to pass - their conditions?</p>\n</blockquote>\n<p>In a dependently typed language such as FOLDS , which was already mentioned above, the concepts category, object and morphism are primitives and you don't have to ever say \"set\" in such a language if you don't want to. You can of course add a category \"Set\" to such a language and axiomatise some of its categorical properties in the spirit of ETCS for example.</p>",
        "id": 379453963,
        "sender_full_name": "Nico Beck",
        "timestamp": 1690541321
    },
    {
        "content": "<p>I'm changing the title of this post from \"Bacchus Naur\" to \"Backus Naur\" even though I <em>really love</em> the idea that the Roman god of wine and festivity has a computer science concept named after him.</p>",
        "id": 379456374,
        "sender_full_name": "John Baez",
        "timestamp": 1690541749
    },
    {
        "content": "<p>heh, there's always the \"Ballmer peak\": <a href=\"https://xkcd.com/323/\">https://xkcd.com/323/</a></p>",
        "id": 379580350,
        "sender_full_name": "Ryan Wisnesky",
        "timestamp": 1690564507
    }
]