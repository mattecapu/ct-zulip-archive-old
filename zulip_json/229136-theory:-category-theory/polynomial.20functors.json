[
    {
        "content": "<p>I want to draw attention and start a discussion thread on <span class=\"user-mention\" data-user-id=\"276049\">@David Spivak</span>'s new preprint <a href=\"https://arxiv.org/abs/2005.01894\" title=\"https://arxiv.org/abs/2005.01894\">https://arxiv.org/abs/2005.01894</a> on the category of polynomial functors</p>",
        "id": 196775418,
        "sender_full_name": "Jules Hedges",
        "timestamp": 1588860577
    },
    {
        "content": "<p>I suspect this category might be very folkloric, I wonder if anyone's seen it in anything old? (There's a cluster of literature beginning with <a href=\"https://www.cs.nott.ac.uk/~psztxa/publ/fossacs03.pdf\" title=\"https://www.cs.nott.ac.uk/~psztxa/publ/fossacs03.pdf\">https://www.cs.nott.ac.uk/~psztxa/publ/fossacs03.pdf</a> and Michael Abbott's thesis, which I already told David about, which studies this category)</p>",
        "id": 196775674,
        "sender_full_name": "Jules Hedges",
        "timestamp": 1588860700
    },
    {
        "content": "<p>Bob Atkey also wrote me this: \"There's even more structure in Poly! Tamara von Glehn's thesis shows that it is a model of dependent types with an equality type that refutes functional extensionality. Also, there's an interesting skew-monoidal product related to selective functors.\"</p>",
        "id": 196775818,
        "sender_full_name": "Jules Hedges",
        "timestamp": 1588860768
    },
    {
        "content": "<p>David told me about this category over a year ago, and explained it as \"it's like locally ringed spaces, except you replace local rings with sets and also replace topological spaces with sets\". So for a while we called it \"setted sets\". So I wonder if it already appears in Grothendieck or something equally old and in French?</p>",
        "id": 196776453,
        "sender_full_name": "Jules Hedges",
        "timestamp": 1588860960
    },
    {
        "content": "<p>(Since it looks like I'm just bashing it, I should add that I'm <em>extremely</em> excited about this paper)</p>",
        "id": 196776684,
        "sender_full_name": "Jules Hedges",
        "timestamp": 1588861047
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"276625\">@Joachim Kock</span> 's notes on polynomial functors has a section of historical remarks, and probably knows much more about the history of this category.</p>",
        "id": 196777938,
        "sender_full_name": "Exequiel Rivas",
        "timestamp": 1588861541
    },
    {
        "content": "<p><a href=\"http://mat.uab.es/~kock/cat/polynomial.pdf\" title=\"http://mat.uab.es/~kock/cat/polynomial.pdf\">http://mat.uab.es/~kock/cat/polynomial.pdf</a> (long pdf!)</p>",
        "id": 196779206,
        "sender_full_name": "Jules Hedges",
        "timestamp": 1588862095
    },
    {
        "content": "<p>Part of the difficulty with finding references to properties of polynomial functors is that they're spread across both category theory (as \"polynomial functors\") and computer science (as \"indexed containers\").</p>",
        "id": 196782671,
        "sender_full_name": "Nathanael Arkor",
        "timestamp": 1588863525
    },
    {
        "content": "<p>Another thing to be aware of is that sometimes results are stated just for polynomials in <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"bold\">S</mi><mi mathvariant=\"bold\">e</mi><mi mathvariant=\"bold\">t</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbf{Set}</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68611em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathbf\">S</span><span class=\"mord mathbf\">e</span><span class=\"mord mathbf\">t</span></span></span></span></span>, like in <span class=\"user-mention\" data-user-id=\"276049\">@David Spivak</span>'s new preprint, and some for arbitrary categories with pullbacks. Some of the properties stated in the preprint are not true for the category of polynomials in an arbitrary category.</p>",
        "id": 196783567,
        "sender_full_name": "Nathanael Arkor",
        "timestamp": 1588863898
    },
    {
        "content": "<p>This <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mtext>Poly</mtext></mrow><annotation encoding=\"application/x-tex\">\\textrm{Poly}</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord text\"><span class=\"mord textrm\">Poly</span></span></span></span></span> is the same one in <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mtext>§</mtext></mrow><annotation encoding=\"application/x-tex\">\\textrm{\\S}</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord text\"><span class=\"mord textrm\">§</span></span></span></span></span> 2.5 of Kock's notes, I take it?</p>",
        "id": 196796131,
        "sender_full_name": "(=_=)",
        "timestamp": 1588868902
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"276092\">Nathanael Arkor</span> <a href=\"#narrow/stream/229136-theory.3A-category.20theory/topic/polynomial.20functors/near/196782671\" title=\"#narrow/stream/229136-theory.3A-category.20theory/topic/polynomial.20functors/near/196782671\">said</a>:</p>\n<blockquote>\n<p>Part of the difficulty with finding references to properties of polynomial functors is that they're spread across both category theory (as \"polynomial functors\") and computer science (as \"indexed containers\").</p>\n</blockquote>\n<p>Over on the category-theoretic side, there are some interesting applications of polynomial functors (and monads) to topology. It'd be interesting to see how they can be interpreted through this lens (pun somewhat intended).</p>",
        "id": 196798934,
        "sender_full_name": "(=_=)",
        "timestamp": 1588870315
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"276424\">Rongmin Lu</span> <a href=\"#narrow/stream/229136-theory.3A-category.20theory/topic/polynomial.20functors/near/196796131\" title=\"#narrow/stream/229136-theory.3A-category.20theory/topic/polynomial.20functors/near/196796131\">said</a>:</p>\n<blockquote>\n<p>This <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mtext>Poly</mtext></mrow><annotation encoding=\"application/x-tex\">\\textrm{Poly}</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord text\"><span class=\"mord textrm\">Poly</span></span></span></span></span> is the same one in <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mtext>§</mtext></mrow><annotation encoding=\"application/x-tex\">\\textrm{\\S}</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord text\"><span class=\"mord textrm\">§</span></span></span></span></span> 2.5 of Kock's notes, I take it?</p>\n</blockquote>\n<p>I believe it's the category <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mrow><mi mathvariant=\"bold\">S</mi><mi mathvariant=\"bold\">e</mi><mi mathvariant=\"bold\">t</mi></mrow><mo stretchy=\"false\">[</mo><mi>X</mi><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">\\mathbf{Set}[X]</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathbf\">S</span><span class=\"mord mathbf\">e</span><span class=\"mord mathbf\">t</span></span><span class=\"mopen\">[</span><span class=\"mord mathdefault\" style=\"margin-right:0.07847em;\">X</span><span class=\"mclose\">]</span></span></span></span> defined in §2.1 of the notes. <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"bold\">P</mi><mi mathvariant=\"bold\">o</mi><mi mathvariant=\"bold\">l</mi><mi mathvariant=\"bold\">y</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbf{Poly}</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord mathbf\">P</span><span class=\"mord mathbf\">o</span><span class=\"mord mathbf\">l</span><span class=\"mord mathbf\" style=\"margin-right:0.01597em;\">y</span></span></span></span></span> of Kock's notes restricts to cartesian natural transformations.</p>",
        "id": 196799328,
        "sender_full_name": "Nathanael Arkor",
        "timestamp": 1588870503
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"276092\">Nathanael Arkor</span> <a href=\"#narrow/stream/229136-theory.3A-category.20theory/topic/polynomial.20functors/near/196799328\" title=\"#narrow/stream/229136-theory.3A-category.20theory/topic/polynomial.20functors/near/196799328\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"276424\">Rongmin Lu</span> <a href=\"#narrow/stream/229136-theory.3A-category.20theory/topic/polynomial.20functors/near/196796131\" title=\"#narrow/stream/229136-theory.3A-category.20theory/topic/polynomial.20functors/near/196796131\">said</a>:</p>\n<blockquote>\n<p>This <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mtext>Poly</mtext></mrow><annotation encoding=\"application/x-tex\">\\textrm{Poly}</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord text\"><span class=\"mord textrm\">Poly</span></span></span></span></span> is the same one in <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mtext>§</mtext></mrow><annotation encoding=\"application/x-tex\">\\textrm{\\S}</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord text\"><span class=\"mord textrm\">§</span></span></span></span></span> 2.5 of Kock's notes, I take it?</p>\n</blockquote>\n<p>I believe it's the category <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mrow><mi mathvariant=\"bold\">S</mi><mi mathvariant=\"bold\">e</mi><mi mathvariant=\"bold\">t</mi></mrow><mo stretchy=\"false\">[</mo><mi>X</mi><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">\\mathbf{Set}[X]</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathbf\">S</span><span class=\"mord mathbf\">e</span><span class=\"mord mathbf\">t</span></span><span class=\"mopen\">[</span><span class=\"mord mathdefault\" style=\"margin-right:0.07847em;\">X</span><span class=\"mclose\">]</span></span></span></span> defined in §2.1 of the notes. <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"bold\">P</mi><mi mathvariant=\"bold\">o</mi><mi mathvariant=\"bold\">l</mi><mi mathvariant=\"bold\">y</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbf{Poly}</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord mathbf\">P</span><span class=\"mord mathbf\">o</span><span class=\"mord mathbf\">l</span><span class=\"mord mathbf\" style=\"margin-right:0.01597em;\">y</span></span></span></span></span> of Kock's notes restricts to cartesian natural transformations.</p>\n</blockquote>\n<p>Thank you. <del>I think restricting to Cartesian natural transformations can be useful. In the case of lenses, which can be viewed as an optic associated to a special case of polynomial functors, I think this gives you lawful lenses. (I haven't verified this, this is something I've heard in a seminar somewhere.)</del></p>",
        "id": 196800245,
        "sender_full_name": "(=_=)",
        "timestamp": 1588870884
    },
    {
        "content": "<p>Woah, that would be really amazing if that's true</p>",
        "id": 196801686,
        "sender_full_name": "Jules Hedges",
        "timestamp": 1588871534
    },
    {
        "content": "<p>I'm not sure the claim typechecks though, it doesn't make sense to talk about lawful lenses between arbitrary objects of the category</p>",
        "id": 196801794,
        "sender_full_name": "Jules Hedges",
        "timestamp": 1588871587
    },
    {
        "content": "<p>This was from a seminar at Macquarie by <a href=\"http://web.science.mq.edu.au/~mike/\" title=\"http://web.science.mq.edu.au/~mike/\">Mike Johnson</a> pre-Covid. I have notes somewhere that I need to dig up.</p>",
        "id": 196801818,
        "sender_full_name": "(=_=)",
        "timestamp": 1588871603
    },
    {
        "content": "<p>In the context of data manipulation, lawfulness is desirable for safety purposes. Even there, however, there are also instances where you want lenses to be less lawful.</p>",
        "id": 196802624,
        "sender_full_name": "(=_=)",
        "timestamp": 1588871896
    },
    {
        "content": "<p>Anyway, all I'm trying to say is that Cartesian natural transformations came up in the discussion of lawfulness during Mike's seminar. It's 3 in the morning here and I'll look at this in more detail later.</p>",
        "id": 196802972,
        "sender_full_name": "(=_=)",
        "timestamp": 1588872089
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"276424\">Rongmin Lu</span> <a href=\"#narrow/stream/229136-theory.3A-category.20theory/topic/polynomial.20functors/near/196802392\" title=\"#narrow/stream/229136-theory.3A-category.20theory/topic/polynomial.20functors/near/196802392\">said</a>:</p>\n<blockquote>\n<p>It's definitely more restrictive, but I'm not sure what you mean by \"arbitrary objects of the category\" and why it doesn't \"typecheck\".</p>\n</blockquote>\n<p>Not totally sure, I was kinda thinking out loud, but in the case of the category I call \"bimorphic lenses\" (which is apparently equivalent to the full subcategory of monomials) has objects of the form <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mi>a</mi><mo separator=\"true\">,</mo><mi>b</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">(a, b)</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">a</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\">b</span><span class=\"mclose\">)</span></span></span></span> (corresponding to the monomial <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>a</mi><msup><mi>x</mi><mi>b</mi></msup></mrow><annotation encoding=\"application/x-tex\">ax^b</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.849108em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">a</span><span class=\"mord\"><span class=\"mord mathdefault\">x</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.849108em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">b</span></span></span></span></span></span></span></span></span></span></span>), but you can only write the definition of lawful lenses for lenses of the form <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mi>a</mi><mo separator=\"true\">,</mo><mi>a</mi><mo stretchy=\"false\">)</mo><mo>→</mo><mo stretchy=\"false\">(</mo><mi>c</mi><mo separator=\"true\">,</mo><mi>c</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">(a, a) \\to (c, c)</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">a</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\">a</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">c</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\">c</span><span class=\"mclose\">)</span></span></span></span></p>",
        "id": 196811847,
        "sender_full_name": "Jules Hedges",
        "timestamp": 1588876163
    },
    {
        "content": "<p>Right. And since I can't sleep without correcting my mistake...</p>\n<p>I think in Kock's notes, it's stated in <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mtext>§</mtext></mrow><annotation encoding=\"application/x-tex\">\\textrm{\\S}</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord text\"><span class=\"mord textrm\">§</span></span></span></span></span> 2.1 that \"every natural transformation between polynomial functors factors as a representable one followed by a cartesian.\" In the case of lenses, the Cartesian thing is the put. Often, though, you want to relax the Cartesian assumption. That got garbled into the \"amazing\" thing that's surely not true.</p>",
        "id": 196813723,
        "sender_full_name": "(=_=)",
        "timestamp": 1588876962
    },
    {
        "content": "<p>Still very much shooting from the hip here, but it sounds like how every lens <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mi>a</mi><mo separator=\"true\">,</mo><mi>b</mi><mo stretchy=\"false\">)</mo><mo>→</mo><mo stretchy=\"false\">(</mo><mi>c</mi><mo separator=\"true\">,</mo><mi>d</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">(a,b) \\to (c,d)</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">a</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\">b</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">c</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\">d</span><span class=\"mclose\">)</span></span></span></span> factors in the form <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mi>a</mi><mo separator=\"true\">,</mo><mi>b</mi><mo stretchy=\"false\">)</mo><mo>→</mo><mo stretchy=\"false\">(</mo><mi>c</mi><mo separator=\"true\">,</mo><mi>b</mi><mo stretchy=\"false\">)</mo><mo>→</mo><mo stretchy=\"false\">(</mo><mi>c</mi><mo separator=\"true\">,</mo><mi>d</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">(a,b) \\to (c,b) \\to (c,d)</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">a</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\">b</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">c</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\">b</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">c</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\">d</span><span class=\"mclose\">)</span></span></span></span> which comes from the fact that lenses are fibred over sets, so that's a vertical and a cartesian morphism. I'm not sure it's the same sense of \"cartesian\" or not!</p>",
        "id": 196814096,
        "sender_full_name": "Jules Hedges",
        "timestamp": 1588877159
    },
    {
        "content": "<p>The sense in which Kock means \"Cartesian morphisms\" (actually, \"Cartesian natural transformations\") is defined in between Lemma 2.1.5 and Remark 2.1.6. It looks like the same definition as the one in the <a href=\"https://ncatlab.org/nlab/show/Cartesian+morphism\" title=\"https://ncatlab.org/nlab/show/Cartesian+morphism\">nLab</a>.</p>",
        "id": 196868919,
        "sender_full_name": "(=_=)",
        "timestamp": 1588925865
    },
    {
        "content": "<p>Somewhat off-topic, but re. your <a href=\"https://twitter.com/_julesh_/status/1257258741248004100\" title=\"https://twitter.com/_julesh_/status/1257258741248004100\">musings</a> on quantum machine learning, this is actually an <a href=\"https://scholar.google.com/scholar?hl=en&amp;as_sdt=0%2C5&amp;q=quantum+machine+learning\" title=\"https://scholar.google.com/scholar?hl=en&amp;as_sdt=0%2C5&amp;q=quantum+machine+learning\">emerging research area</a>.</p>\n<div class=\"inline-preview-twitter\"><div class=\"twitter-tweet\"><a href=\"https://twitter.com/_julesh_/status/1257258741248004100\"><img class=\"twitter-avatar\" src=\"https://pbs.twimg.com/profile_images/972424350736486401/RyVTQIgf_normal.jpg\"></a><p>Was daydreaming and it suddenly hit me that \"quantum machine learning\" actually makes total sense and isn't (just) buzzword soup. Machine learning is at least half linear algebra, and linear algebra is home territory for quantum computation</p><span>- julesh (@_julesh_)</span></div></div>",
        "id": 197022647,
        "sender_full_name": "(=_=)",
        "timestamp": 1589070225
    },
    {
        "content": "<p>It is indeed not so easy to trace the origin of the theory of polynomial functors. Joyal had them in the 1980s in connection with his discovery of combinatorial species and analytic functors, but did not really develop the theory because it is not rich enough to cover species and operads. Joyal himself claims that the notion should be attributed to Grothendieck :-) (I don't know exactly what this means...)</p>\n<p>At the CT2010 in Genova, Peter Johnstone helped me draw a very interesting map of precursors to the notion of polynomial functors. I remember there were dozens of them, but unfortunately I don't have the map anymore :-( There are polynomial functors already in Arbib and Manes, but they did not see the pleasant representation of them in terms of maps E -&gt; B.</p>\n<p>For me the really cool feature of polynomial functors is their representability feature --- how they can be manipulated in terms of E -&gt; B. The first printed evidence of this viewpoint that I am aware of is [Bisson-Joyal (1995): <em>The Dyer-Lashof algebra in bordism (extended abstract)</em>, 1995]. That's some very grown-up algebraic topology they are up to, and their E -&gt; B is really a covering space! They don't have time to talk much about polynomial functors, though. In logic, I believe the first explicit appearance is [Moerdijk-Palmgren (2000): <em>Wellfounded trees in categories</em>], where they show that Martin-Löf's W-types are initial algebras for polynomial endofunctors. The really nice many-variable formalism I believe was introduced by [Gambino-Hyland (2003): <em>Wellfounded Trees and Dependent Polynomial Functors</em>]. It is very curious though, that this shape of diagram,<br>\nI &lt;- E -&gt; B -&gt; J was studied by Tambara already in 1993 --- yes! it is the same Tambara as in Tambara modules! Tambara essentially proved (without noticing it) that finite polynomial functors are the Lawvere theory theory for commutative semirings. See [Gambino-Kock (2013): <em>Polynomial functors and polynomial monads</em>] for this result.</p>\n<p>Generally in [GK] we made a big effort to collect history and to unify the various developments, and in particular to bring all the container stuff into more mathematical language. I recommend that paper as a basic reference :-)</p>",
        "id": 197217004,
        "sender_full_name": "Joachim Kock",
        "timestamp": 1589238743
    },
    {
        "content": "<p>Joachim wrote:</p>\n<blockquote>\n<p>The first printed evidence of this viewpoint that I am aware of is [Bisson-Joyal (1995): The Dyer-Lashof algebra in bordism (extended abstract), 1995]. That's some very grown-up algebraic topology they are up to [...]</p>\n</blockquote>",
        "id": 197217091,
        "sender_full_name": "John Baez",
        "timestamp": 1589238816
    },
    {
        "content": "<p>Yeah, sounds like it!  I hope I understand that stuff when I grow up!</p>",
        "id": 197217112,
        "sender_full_name": "John Baez",
        "timestamp": 1589238837
    },
    {
        "content": "<p>Another big source of confusion is that there is something else which is also called polynomial functor: they are endofunctors F:  Vect -&gt; Vect such that for every pair of vector spaces the the map on hom spaces is given by polynomials. Such functors come up in representation theory, for example in connection with Schur functors. The appeared in Macdonalds book <em>Symmetric Functions and Hall Polynomials</em>, but in fact they were first studied in the 1950s (or even 1940s?) by Eilenberg and Mac Lane in connection with group cohomology. It's a very active area of research in representation theory and algebraic topology, for example in connection with functor cohomology.</p>\n<p>The two theories of polynomial functors --- the one in cartesian contexts (such as logic and geometry), and the one in linear contexts -- do not seem to have so much in common at this point. For example, there are no representability features in the linear case. Adamek and Velebil show that the only pullback-preserving endofunctors of Vect are 'tensoring with a fixed vector space'.</p>",
        "id": 197217410,
        "sender_full_name": "Joachim Kock",
        "timestamp": 1589239075
    },
    {
        "content": "<p>Regarding my Notes on polynomial functors I should apologise for them being so messy and unprocessed.</p>\n<p>I learned about polynomial functors when I was a postdoc with André Joyal in 2003-2004. We used polynomial functors to give a combinatorial version of the Baez-Dolan construction, and they have been a central topic in my research ever since.</p>\n<p>Since there was not much literature available, I started to write notes at that time. By 2009, when the manuscript had over 400 pages, a huge mess (and containing mistakes), I put it on hold (that's its present state), because I realised I needed to upgrade everything from sets to groupoids, in order to cover the applications I had in mind in combinatorics and operad theory. Since then I have been learning about groupoids (and infinity-groupoids).</p>\n<p>Groupoids really make a huge difference. With David Gepner and Rune Haugseng we showed that polynomial functors over groupoids are expressive enough to cover species, analytic functors, and operads. In fact with polynomial monads over infinity-groupoids we give a neat model for infinity-operads.</p>\n<p>I think I am now in a position where I could go back to the manuscript and finish it -- with groupoids. But meanwhile, as you all know: each research project creates a number of new research projects, so it is not clear when I will actually come around to this.</p>\n<p>However, the remarkable recent work of David Spivak and his collaborators is very motivating, and it is enjoyable to see how powerful the polynomial-functor toolbox is even in the case of one-variable polynomial functors over Set! Congratulations, David!</p>\n<p>(Sorry for telling about myself. Maybe I should move this post to the present-yourself section.)</p>",
        "id": 197219304,
        "sender_full_name": "Joachim Kock",
        "timestamp": 1589240528
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"276625\">@Joachim Kock</span>: one thing I was always curious about was how generalised species had an entire chapter dedicated to them in the table of contents for the notes (though sadly the chapter appears unwritten). Is this still a topic you would reserve a chapter for in the eventual updated book?</p>",
        "id": 197219784,
        "sender_full_name": "Nathanael Arkor",
        "timestamp": 1589240944
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"275901\">Jules Hedges</span> <a href=\"#narrow/stream/229136-theory.3A-category.20theory/topic/polynomial.20functors/near/196814096\">said</a>:</p>\n<blockquote>\n<p>Still very much shooting from the hip here, but it sounds like how every lens <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mi>a</mi><mo separator=\"true\">,</mo><mi>b</mi><mo stretchy=\"false\">)</mo><mo>→</mo><mo stretchy=\"false\">(</mo><mi>c</mi><mo separator=\"true\">,</mo><mi>d</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">(a,b) \\to (c,d)</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">a</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\">b</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">c</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\">d</span><span class=\"mclose\">)</span></span></span></span> factors in the form <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mi>a</mi><mo separator=\"true\">,</mo><mi>b</mi><mo stretchy=\"false\">)</mo><mo>→</mo><mo stretchy=\"false\">(</mo><mi>c</mi><mo separator=\"true\">,</mo><mi>b</mi><mo stretchy=\"false\">)</mo><mo>→</mo><mo stretchy=\"false\">(</mo><mi>c</mi><mo separator=\"true\">,</mo><mi>d</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">(a,b) \\to (c,b) \\to (c,d)</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">a</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\">b</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">c</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\">b</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">c</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\">d</span><span class=\"mclose\">)</span></span></span></span> which comes from the fact that lenses are fibred over sets, so that's a vertical and a cartesian morphism. I'm not sure it's the same sense of \"cartesian\" or not!</p>\n</blockquote>\n<p>Yes, that's right, it's the same.</p>",
        "id": 197220787,
        "sender_full_name": "Joachim Kock",
        "timestamp": 1589241708
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"276625\">Joachim Kock</span> <a href=\"#narrow/stream/229136-theory.3A-category.20theory/topic/polynomial.20functors/near/197217410\">said</a>:</p>\n<blockquote>\n<p>The two theories of polynomial functors --- the one in cartesian contexts (such as logic and geometry), and the one in linear contexts -- do not seem to have so much in common at this point. </p>\n</blockquote>\n<p>I'm probably asking for too much, but I've always wondered how <a href=\"https://ncatlab.org/nlab/show/Goodwillie+calculus\">Goodwillie calculus</a> can be related to these.</p>",
        "id": 197221062,
        "sender_full_name": "(=_=)",
        "timestamp": 1589241882
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"276092\">Nathanael Arkor</span> <a href=\"#narrow/stream/229136-theory.3A-category.20theory/topic/polynomial.20functors/near/197219784\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"276625\">Joachim Kock</span>: one thing I was always curious about was how generalised species had an entire chapter dedicated to them in the table of contents for the notes (though sadly the chapter appears unwritten). Is this still a topic you would reserve a chapter for in the eventual updated book?</p>\n</blockquote>\n<p>I don't know if I would get around to this. The generalised species stuff (Fiore-Gambino-Hyland-Winskel) is really a different brand of polynomial functors (as you surely know)  than the slice-category brand I mostly work with. The generalised-species stuff is about categories instead of groupoids -- very scary! It is closely related (is equal to?) the familial functors that Todd talked about in another thread, studied deeply by Mark Weber. And which Spivak uses for data migration. I would love to know more about that, but maybe it is not my highest priority right now -- and in any case my priorities tend to get overridden...</p>",
        "id": 197222086,
        "sender_full_name": "Joachim Kock",
        "timestamp": 1589242804
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"276424\">Rongmin Lu</span> <a href=\"#narrow/stream/229136-theory.3A-category.20theory/topic/polynomial.20functors/near/197221062\">said</a>:</p>\n<blockquote>\n<p>I'm probably asking for too much, but I've always wondered how <a href=\"https://ncatlab.org/nlab/show/Goodwillie+calculus\">Goodwillie calculus</a> can be related to these.</p>\n</blockquote>\n<p>I think the Goodwillie calculus is more closely related to the Vect-based notion of polynomial functor that I mentioned a few posts back.</p>",
        "id": 197222179,
        "sender_full_name": "Joachim Kock",
        "timestamp": 1589242917
    }
]