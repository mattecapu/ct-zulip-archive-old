[
    {
        "content": "<p>Ok, let's inaugurate this stream.  The idea was for people to share something in personal threads about what they're working on right now, following on what <span class=\"user-mention\" data-user-id=\"275920\">@John Baez</span> did in another stream.   So here's what I'm working on right now research-wise:</p>\n<ol>\n<li>\n<p>Finish <em>The univalence principle</em> with Benedikt Ahrens and Paige North, a much longer elaboration of <em>A Higher Structure Identity Principle</em>.</p>\n</li>\n<li>\n<p>&lt;redacted&gt;</p>\n</li>\n<li>\n<p>Revise and submit <em>All (∞,1)-toposes have strict univalent universes</em> for publication.</p>\n</li>\n<li>\n<p>Revise <em>Constructing symmetric monoidal bicategories functorially</em> (with Linde Wester Hansen), <em>Linear logic for constructive mathematics</em>, and <em>A practical type theory for symmetric monoidal categories</em> based on referee reports.</p>\n</li>\n<li>\n<p>Expand my categorical logic notes into a textbook.</p>\n</li>\n<li>\n<p>Various less-well-defined pending projects about HoTT and its semantics, including modal dependent type theory (with Dan Licata and Mitchell Riley), modeling HITs, modeling cubical type theories, modeling HoTT in elementary/realizability (∞,1)-toposes, stack semantics of 1-toposes, and impredicative constructions of HITs.</p>\n</li>\n<li>\n<p>A couple of unfinished projects involving <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>∗</mo></mrow><annotation encoding=\"application/x-tex\">\\ast</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.46528em;vertical-align:0em;\"></span><span class=\"mord\">∗</span></span></span></span>-autonomous categories.</p>\n</li>\n</ol>",
        "id": 224275261,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1611798534
    },
    {
        "content": "<p>Do I dare ask where you're publishing \"Constructing symmetric monoidal bicategories functorially\"?   </p>\n<p>This is a paper I've been using lately...</p>",
        "id": 224276970,
        "sender_full_name": "John Baez",
        "timestamp": 1611800180
    },
    {
        "content": "<p>Textbook on categorical logic?   Cool!</p>",
        "id": 224276978,
        "sender_full_name": "John Baez",
        "timestamp": 1611800196
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"275920\">John Baez</span> <a href=\"#narrow/stream/274877-practice.3A-our.20work/topic/Mike.20Shulman/near/224276970\">said</a>:</p>\n<blockquote>\n<p>Do I dare ask where you're publishing \"Constructing symmetric monoidal bicategories functorially\"?   </p>\n</blockquote>\n<p>I don't know; do you?  (-;</p>\n<p>We submitted it to <em>Compositionality</em>, and we got one of those annoying <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mrow></mrow><mo>∗</mo></msup></mrow><annotation encoding=\"application/x-tex\">^*</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.688696em;vertical-align:0em;\"></span><span class=\"mord\"><span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.688696em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span> referee reports that almost makes me wish they had just rejected it out of hand, basically saying \"This is a nice paper, but I wish you had written a different one, so would you please go write the paper I wanted to read instead?\"  At least with a clean rejection you can submit it somewhere else immediately without feeling guilty.</p>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mrow></mrow><mo>∗</mo></msup></mrow><annotation encoding=\"application/x-tex\">^*</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.688696em;vertical-align:0em;\"></span><span class=\"mord\"><span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.688696em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span> If the referee (or editor) happens to be reading this, don't take it personally!  I'm sure I've written plenty of referee reports in my time that the authors found annoying.  And often it's the annoying reports that turn out to improve the paper the most... after you get over your annoyance and sit down to do something about them.  (-:</p>",
        "id": 224280781,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1611804908
    },
    {
        "content": "<p>The textbook on categorical logic was supposed to be my sabbatical project for this year.  But I got so caught up in &lt;redacted&gt; that I haven't even started it yet.</p>",
        "id": 224280989,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1611805152
    },
    {
        "content": "<p>Will the textbook be primarily on type theory (as the notes are) or do you plan to have some model-theoretic stuff in there too?</p>",
        "id": 224307433,
        "sender_full_name": "Fawzi Hreiki",
        "timestamp": 1611829325
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"276777\">Mike Shulman</span> <a href=\"#narrow/stream/274877-practice.3A-our.20work/topic/Mike.20Shulman/near/224275261\">said</a>:</p>\n<blockquote>\n<ol start=\"5\">\n<li>Expand my categorical logic notes into a textbook.<br>\n</li>\n</ol>\n</blockquote>\n<p>Hello Mike,</p>\n<p>This is something I have been thinking for a long time, and even considering to start writing such a thing. Yet, I consider this as a very hard project. Categorical logic is many things, and more importantly it is a collection of point of views (type theory, universal algebra, functorial semantics, axiomatizations of categories of structures), it is also \"many communities\" to pay tribute to... my honest opinion is that in a way, we need more a Handbook of Categorical Logic then a book whose title is \"Categorical Logic\". In both cases, I would love to collaborate to such a project.</p>",
        "id": 224317826,
        "sender_full_name": "Ivan Di Liberti",
        "timestamp": 1611836277
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"276777\">Mike Shulman</span> <a href=\"#narrow/stream/274877-practice.3A-our.20work/topic/Mike.20Shulman/near/224275261\">said</a>:</p>\n<blockquote>\n<p>Ok, let's inaugurate this stream.  The idea was for people to share something in personal threads about what they're working on right now, following on what <span class=\"user-mention silent\" data-user-id=\"275920\">John Baez</span> did in another stream.   So here's what I'm working on right now research-wise:</p>\n<ol>\n<li>\n<p>Finish <em>The univalence principle</em> with Benedikt Ahrens and Paige North, a much longer elaboration of <em>A Higher Structure Identity Principle</em>.</p>\n</li>\n<li>\n<p>&lt;redacted&gt;</p>\n</li>\n<li>\n<p>Revise and submit <em>All (∞,1)-toposes have strict univalent universes</em> for publication.</p>\n</li>\n<li>\n<p>Revise <em>Constructing symmetric monoidal bicategories functorially</em> (with Linde Wester Hansen), <em>Linear logic for constructive mathematics</em>, and <em>A practical type theory for symmetric monoidal categories</em> based on referee reports.</p>\n</li>\n<li>\n<p>Expand my categorical logic notes into a textbook.</p>\n</li>\n<li>\n<p>Various less-well-defined pending projects about HoTT and its semantics, including modal dependent type theory (with Dan Licata and Mitchell Riley), modeling HITs, modeling cubical type theories, modeling HoTT in elementary/realizability (∞,1)-toposes, stack semantics of 1-toposes, and impredicative constructions of HITs.</p>\n</li>\n<li>\n<p>A couple of unfinished projects involving <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>∗</mo></mrow><annotation encoding=\"application/x-tex\">\\ast</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.46528em;vertical-align:0em;\"></span><span class=\"mord\">∗</span></span></span></span>-autonomous categories.</p>\n</li>\n</ol>\n</blockquote>\n<p>On a much more general level, I partially dislike the idea of declarating what we are working on.</p>\n<p>In order to motivate this, let me provide a very concrete example. In your personal nlab wiki you started describing the broad project of 2-categorical logic. What one sees on the nlab is a collection of statements that mostly puts together the standard australian literature on the topic. Yet, from time to time I have seen people saying \"Shulman's treatment of n-categorical logic\". Now, as a young researcher I am very interesting on the topic, but one feels like all the theorems I could be proving somehow already have a name on them, even though as a fact no publication, nor preprint discusses them. I do understand that it was not your intention to \"delimiter your territory\", but one should consider, especially with such an influent character, that this is the possible outcome of such a thing.</p>\n<p>Now, I am sure that some people will come here and say \"Are you saying that you do mathematics to pur your name on it?\", and I honestly believe that on a very human level, the answer to this question is at least partially always yes. To be more precise, what I would definitely dislike is if I prove something and someone else gets his/her name on it. This is very different from \"I want my name on stuff\", it's just \"I don't like when someone eventually get his/her name attached to everything just because he or she is sufficiently famous or influent\".</p>",
        "id": 224322986,
        "sender_full_name": "Ivan Di Liberti",
        "timestamp": 1611839450
    },
    {
        "content": "<p>On a similar note, I am very fond of categorical logic and type theory and have found existing textbooks to be dissatifying (tending to be too narrow in focus, be insufficiently thorough, or be simply not up to date with modern developments). I read through your notes a while ago, and enjoyed the presentation. I would be happy to volunteer to proof read drafts of the new/updated sections.</p>",
        "id": 224338409,
        "sender_full_name": "Nathanael Arkor",
        "timestamp": 1611846334
    },
    {
        "content": "<p>Thanks for the offer, <span class=\"user-mention\" data-user-id=\"276092\">@Nathanael Arkor</span>!</p>",
        "id": 224344386,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1611848611
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"277318\">@Ivan Di Liberti</span> I totally agree that categorical logic is a collection of points of views.  My notes and hoped-for textbook were explicitly designed to present <em>one</em> point of view that I felt was lacking from the literature -- hence, in fact, why the working title is \"Categorical logic from a categorical point of view\"!  I'm doing my best to respect and mention other points of view, but I want the presentation to be coherent from a particular one, which the reader can then contrast themselves with other presentations by other authors who are more qualified to present other points of view.  For the same reason, though I appreciate the offer of help, this is one project that I want to do all on my own, because I have a fairly coherent point of view and I don't want to have to compromise it.  However, I totally agree that a \"Handbook of Categorical Logic\" would <em>also</em> be a useful thing, if someone else (hint, hint) wanted to organize it.</p>",
        "id": 224344922,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1611848806
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"341237\">@Fawzi Hreiki</span> I'm not quite sure what you mean by \"model-theoretic stuff\".  The notes are already focused on the categorical models of type theory rather than the syntax.  If you mean the subject that's traditionally called <a href=\"https://en.wikipedia.org/wiki/Model_theory\">model theory</a>, then no, I'm not going to write about that.</p>",
        "id": 224345184,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1611848925
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"276777\">Mike Shulman</span> <a href=\"#narrow/stream/274877-practice.3A-our.20work/topic/Mike.20Shulman/near/224280781\">said</a>:</p>\n<blockquote>\n<p>And often it's the annoying reports that turn out to improve the paper the most... after you get over your annoyance and sit down to do something about them.  (-:</p>\n</blockquote>\n<p>By the way, since I mentioned it, this is one of the reasons I still believe in single-blind peer review: it makes it easier to give \"annoying\" but helpful/necessary reviews.</p>",
        "id": 224345390,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1611849004
    },
    {
        "content": "<p>Well I guess the way I understand it, there are two notions or layers of model theory in categorical logic. </p>\n<p>There’s the question of presenting certain kinds of categories syntactically (via generators and relations) and reasoning internal to them (using deduction rules). <br>\nSo, like how we can present and reason in CCCs using lambda calculus.  </p>\n<p>There’s also the question of studying what the corresponding categories of models look like (by homming into sets or some other ‘big’ category). </p>\n<p>A lot has been done on the model theory of ‘lower strength’ logics (e.g. propositional, algebraic, predicate) but I haven’t really seen much on the model theory of higher or dependent types.</p>",
        "id": 224348405,
        "sender_full_name": "Fawzi Hreiki",
        "timestamp": 1611850046
    },
    {
        "content": "<p>A classical example is of course Stone duality for propositional logic, or Gabriel-Ulmer duality for essentially algebraic logic.</p>",
        "id": 224349026,
        "sender_full_name": "Fawzi Hreiki",
        "timestamp": 1611850279
    },
    {
        "content": "<p>But maybe as we go up in the strength hierarchy, the categories of models become less interesting than what the syntactic categories themselves look like (since the syntactic categories are becoming ‘bigger’ and the categories of models ‘smaller’)</p>",
        "id": 224349129,
        "sender_full_name": "Fawzi Hreiki",
        "timestamp": 1611850322
    },
    {
        "content": "<p>Ah yes.  I don't think I have an opinion on whether that kind of model theory is interesting, but it's not what I was planning to write about.</p>",
        "id": 224353301,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1611851881
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"276777\">Mike Shulman</span> <a href=\"#narrow/stream/274877-practice.3A-our.20work/topic/Mike.20Shulman/near/224344922\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"277318\">Ivan Di Liberti</span> I totally agree that categorical logic is a collection of points of views.  My notes and hoped-for textbook were explicitly designed to present <em>one</em> point of view that I felt was lacking from the literature -- hence, in fact, why the working title is \"Categorical logic from a categorical point of view\"!  I'm doing my best to respect and mention other points of view, but I want the presentation to be coherent from a particular one, which the reader can then contrast themselves with other presentations by other authors who are more qualified to present other points of view.  For the same reason, though I appreciate the offer of help, this is one project that I want to do all on my own, because I have a fairly coherent point of view and I don't want to have to compromise it.  However, I totally agree that a \"Handbook of Categorical Logic\" would <em>also</em> be a useful thing, if someone else (hint, hint) wanted to organize it.</p>\n</blockquote>\n<p>I totally see your point. CatLog from a categorical point of view is definitely missing in the panorama!</p>",
        "id": 224356143,
        "sender_full_name": "Ivan Di Liberti",
        "timestamp": 1611852626
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"276777\">Mike Shulman</span> <a href=\"#narrow/stream/274877-practice.3A-our.20work/topic/Mike.20Shulman/near/224275261\">said</a>:</p>\n<blockquote>\n<p><em>A practical type theory for symmetric monoidal categories</em> </p>\n</blockquote>\n<p>I'd really like to understand this better... have you done a talk on it?<br>\nThe example equation \"tr(fg)=...=tr(gf)\" on page 4: it looks like it goes in the reverse order to the string diagram calculation in Figure 1. Is that right? If so maybe you should change the order so that it agrees with Figure 1.</p>",
        "id": 224410790,
        "sender_full_name": "Simon Burton",
        "timestamp": 1611877500
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"277321\">@Simon Burton</span> You're right, thanks.  I'll change Figure 1 instead, since the incomprehensible proof is also in the tr(fg)=...=tr(gf) order.  I haven't given any talks about this paper, unfortunately.</p>",
        "id": 224429450,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1611894016
    },
    {
        "content": "<p>Here's an update on what I'm working on, now without content-related spoilers.</p>\n<ol>\n<li>Prepare a talk I'm giving next Wednesday at UNAM on \"Double categories, multivariable mates, and Chu constructions\".</li>\n<li>&lt;redacted&gt;</li>\n<li>Revise and submit \"All (∞,1)-toposes have strict univalent universes\" for publication.</li>\n<li>Revise \"Constructing symmetric monoidal bicategories functorially\" (with Linde Wester Hansen), \"Linear logic for constructive mathematics\", and \"A practical type theory for symmetric monoidal categories\" based on referee reports.</li>\n</ol>",
        "id": 229198578,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1615133417
    },
    {
        "content": "<p>Back in December I read your paper on LL for constructive Mathematics, and found it most interesting. I am working on developing a computational interpretation of it as personal side-project.</p>",
        "id": 229199030,
        "sender_full_name": "D.G. Berry",
        "timestamp": 1615133852
    },
    {
        "content": "<p>Cool!  I'd be interested to hear what you're thinking about.</p>",
        "id": 229220052,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1615153283
    },
    {
        "content": "<p>It struck me at the time that it bears a similarity to the Dual Calculus (a la Wadler) however with a different interaction between terms and coterms. I am working on formulating a (co)term structure for it (which will not be \"complete\" (in some sense of the word) in the first instance) to investigate its reduction properties. The Chu construction could likely serve as a syntactic translation from the putative calculus into the STLC. I have not done much yet as I have been solidifying my understanding of the various basic properties and proofs of the STLC. From a more categorical perspective I have been thinking about how it could be modelled but I am less clear on the details on this side of things.</p>",
        "id": 229288961,
        "sender_full_name": "D.G. Berry",
        "timestamp": 1615205759
    },
    {
        "content": "<p>Thanks!  I look forward to seeing it.</p>",
        "id": 229331392,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1615221430
    },
    {
        "content": "<p>I am only a MSc student so it is unlikely to go anywhere (and it is not directly related to my proposed PhD research topic).</p>",
        "id": 229357360,
        "sender_full_name": "D.G. Berry",
        "timestamp": 1615230877
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"395317\">@D.G. Berry</span> I'm interested in similar things at the moment (both Mike's work and dual calculus/μ̃μ/L). When you have a dual calculus, what's the motivation for translating it into (pairs of) STLC?</p>",
        "id": 229367595,
        "sender_full_name": "James Wood",
        "timestamp": 1615234970
    },
    {
        "content": "<p>This only very briefly occurred to me when writing out my earlier message so I have not thought about it much. Dual calculi have been interpreted using CPS translations; and, my thinking was that the Chu construction might correspond to something similar. My putative calculus appears to not be pre-evidently linear but does appear to have linear-like properties (I believe that this is down to the infinitely-contraposable nature of implication). This linear-like structure could somehow bear on the nature of this translation compared to the classical CPS translations.</p>",
        "id": 229375616,
        "sender_full_name": "D.G. Berry",
        "timestamp": 1615238336
    },
    {
        "content": "<p>My vision of the Chu-Shulman translation (if that's what we're to call it) is as one of these translations that isn't often used directly, but rather we frequently work in its image. Other examples are the Gödel-Gentzen translation (showing a way of weakening statements in intuitionistic logic) and the translation from extensional to intensional type theory that gives us setoids. I'd like to see other uses, though!</p>",
        "id": 229385215,
        "sender_full_name": "James Wood",
        "timestamp": 1615241638
    },
    {
        "content": "<p>At least the Chu-Shulman translation has the advantage that its source theory is both expressive and well behaved, which gives it a better chance of being used directly than the other two I mentioned.</p>",
        "id": 229386813,
        "sender_full_name": "James Wood",
        "timestamp": 1615242063
    },
    {
        "content": "<p>At the moment I'm favoring the term \"antithesis translation/interpretation\".</p>",
        "id": 229399704,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1615248522
    },
    {
        "content": "<p>The idea being that each proposition is translated to an assertion together with its antithesis (polar opposite).</p>",
        "id": 229399783,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1615248558
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"276777\">Mike Shulman</span> <a href=\"#narrow/stream/274877-practice.3A-our.20work/topic/Mike.20Shulman/near/229399783\">said</a>:</p>\n<blockquote>\n<p>The idea being that each proposition is translated to an assertion together with its antithesis (polar opposite).</p>\n</blockquote>\n<p>well, I thought this (thinking of assertion+anti-assertions) was more like Dialectica than Chu, as one of the differences between the constructions is exactly that the relations in Dialectica allow you to negate, as oppose to simply transpose, the matrix of truth-values.  </p>\n<p>But indeed very interesting the idea of  connecting this idea to the Herbelin's calculus.</p>",
        "id": 229493418,
        "sender_full_name": "Valeria de Paiva",
        "timestamp": 1615303305
    },
    {
        "content": "<p>I'm using \"antithesis\" to refer specifically to the Chu construction where the dualizing object is absurdity.  In that case, transposition really is a form of negation.</p>",
        "id": 229509172,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1615308270
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"276777\">Mike Shulman</span> <a href=\"#narrow/stream/274877-practice.3A-our.20work/topic/Mike.20Shulman/near/229509172\">said</a>:</p>\n<blockquote>\n<p>I'm using \"antithesis\" to refer specifically to the Chu construction where the dualizing object is absurdity.  In that case, transposition really is a form of negation.</p>\n</blockquote>\n<p>Note that I still haven't found the different emojis to say \"I heard you, thanks for replying\" as opposed to \"I heard you and agree with you, thanks\".</p>",
        "id": 229556064,
        "sender_full_name": "Valeria de Paiva",
        "timestamp": 1615324825
    },
    {
        "content": "<p>Thankfully, some clever person a while ago invented language, so we aren't restricted to the meanings we can express with pictures.</p>",
        "id": 229569735,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1615329823
    },
    {
        "content": "<p>Are you suggesting that emojis are some kind of ......... regression???</p>",
        "id": 229577521,
        "sender_full_name": "D.G. Berry",
        "timestamp": 1615333688
    },
    {
        "content": "<p>Yes.</p>",
        "id": 229588556,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1615340789
    },
    {
        "content": "<p>Along with all the other pictograms that now infect the Internet in place of words.</p>",
        "id": 229588625,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1615340831
    },
    {
        "content": "<p>My cell phone understands this intuitively: when receiving text messages, the entire message regresses to an unintelligible jumble of old-school cartoon swearword replacements whenever emoji are included in the message.</p>",
        "id": 229591373,
        "sender_full_name": "Jason Erbele",
        "timestamp": 1615342885
    },
    {
        "content": "<p>Mine is an old-style phone that renders each emjoi as a pair of squares. I got a message response yesterday that was just eight squares in a row. I assumed it was a positive reaction :-)</p>",
        "id": 229769572,
        "sender_full_name": "David Michael Roberts",
        "timestamp": 1615420924
    },
    {
        "content": "<p>but did the squares commute? <span aria-label=\"grinning face with smiling eyes\" class=\"emoji emoji-1f601\" role=\"img\" title=\"grinning face with smiling eyes\">:grinning_face_with_smiling_eyes:</span></p>",
        "id": 229814007,
        "sender_full_name": "Matteo Capucci (he/him)",
        "timestamp": 1615452296
    },
    {
        "content": "<p>On that note, here's another update on my work:</p>\n<ol>\n<li>Give a talk today at the University of Wisconsin on \"Avoiding large cardinals in category theory\".</li>\n<li>Prepare and give a talk next Wednesday at Harvard on \"HOTT and the quest for extensionality\".</li>\n<li>Revise \"Categories of Nets\" for final LICS publication with John Baez, Fabrizio Genovese, and Jade Master.</li>\n<li>Revise and submit other papers for publication</li>\n</ol>",
        "id": 234217673,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1618256361
    },
    {
        "content": "<p>Will there be slides (or notes) for the talk on large cardinals?</p>",
        "id": 234218538,
        "sender_full_name": "Fawzi Hreiki",
        "timestamp": 1618256738
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"341237\">Fawzi Hreiki</span> <a href=\"#narrow/stream/274877-practice.3A-our.20work/topic/Mike.20Shulman/near/234218538\">said</a>:</p>\n<blockquote>\n<p>Will there be slides (or notes) for the talk on large cardinals?</p>\n</blockquote>\n<p>Even better, the <a href=\"https://www.math.wisc.edu/logic/seminar.html\">seminar is public</a> (and in ~40 minutes).</p>",
        "id": 234219133,
        "sender_full_name": "Nathanael Arkor",
        "timestamp": 1618256940
    },
    {
        "content": "<p>This topic was moved by <span class=\"user-mention silent\" data-user-id=\"276092\">Nathanael Arkor</span> to <a class=\"stream-topic\" data-stream-id=\"229451\" href=\"/#narrow/stream/229451-general.3A-off-topic/topic/emoji\">#general: off-topic &gt; emoji</a></p>",
        "id": 234235881,
        "sender_full_name": "Notification Bot",
        "timestamp": 1618263867
    },
    {
        "content": "<p><a href=\"http://home.sandiego.edu/~shulman/papers/wisconsin-lgcard.pdf\">http://home.sandiego.edu/~shulman/papers/wisconsin-lgcard.pdf</a></p>",
        "id": 234248534,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1618272171
    },
    {
        "content": "<p>There's also a recording and slides posted at the seminar page.</p>",
        "id": 234248723,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1618272253
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"276777\">@Mike Shulman</span> Is your categorical logic book still likely to happen this year? I’m very interested in studying both multicategories and type theories so I’ve been excited for it 🙂</p>",
        "id": 241872979,
        "sender_full_name": "Nick Smith",
        "timestamp": 1623130924
    },
    {
        "content": "<p>No, sorry.  I ended up spending the year on other projects.</p>",
        "id": 241911103,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1623155522
    },
    {
        "content": "<p>Ah, that’s a shame. Fair enough!</p>",
        "id": 241995579,
        "sender_full_name": "Nick Smith",
        "timestamp": 1623191025
    },
    {
        "content": "<p>The more charitable version is that I spent (some of) the year doing groundwork for some of the remaining chapters.  For instance, working on a polycategorical version of linear logic with exponentials (soon to appear, I hope), tying up HoTT with the stack semantics of an elementary topos, etc.  (-:</p>",
        "id": 242004292,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1623198249
    },
    {
        "content": "<p>Well, when you put it that way, I’m now even MORE excited for the eventual book. Looking forward to 2022! 😉</p>",
        "id": 242015842,
        "sender_full_name": "Nick Smith",
        "timestamp": 1623211516
    },
    {
        "content": "<p>Perhaps you could put up a reading list for people to prepare (if they have spare time) for the book :-)</p>",
        "id": 242212180,
        "sender_full_name": "Henry Story",
        "timestamp": 1623334154
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"281126\">Henry Story</span> <a href=\"#narrow/stream/274877-practice.3A-our.20work/topic/Mike.20Shulman/near/242212180\">said</a>:</p>\n<blockquote>\n<p>Perhaps you could put up a reading list for people to prepare (if they have spare time) for the book :-)</p>\n</blockquote>\n<p>Well, now that <a href=\"https://arxiv.org/abs/2106.15042\">https://arxiv.org/abs/2106.15042</a> is out, you can read that.  I expect it will greatly influence the unwritten chapter 3 of the book.  Possibly <a href=\"https://arxiv.org/abs/1911.00818\">https://arxiv.org/abs/1911.00818</a> will too.</p>",
        "id": 244378016,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1625029534
    },
    {
        "content": "<p>This is a slight sidetrack, but maybe there's a link: In <em>Affine logic for constructive mathematics</em> <a href=\"https://arxiv.org/abs/1805.07518\">https://arxiv.org/abs/1805.07518</a> you talk about \"affine sets\", which turn out to be something rather interesting. Have you ever thought about what \"relevant sets\" would be? That is, you lose weakening, but add contraction, in the underlying logic? I have been fooling around with monoidal categories with diagonals for various reasons, and these should give semantics for certain relevance logics (variations on <a href=\"https://ncatlab.org/nlab/show/relevance+monoidal+category\">https://ncatlab.org/nlab/show/relevance+monoidal+category</a>, with possibly fewer assumptions, based on the flavour of relevance logic), but I can't exactly say what a \"relevant set\" is.  Possibly this is a big and gnarly topic, but do you have any intuition (hah)?</p>",
        "id": 244510091,
        "sender_full_name": "David Michael Roberts",
        "timestamp": 1625104156
    },
    {
        "content": "<p>David, are you aware of Masaru Shirahata's phd thesis, written under Grisha Mints?https://www.semanticscholar.org/paper/Linear-set-theory-Shirahata/c6fb6ed5fc0f43b7e18fbc852c3170e11056745b</p>",
        "id": 244515757,
        "sender_full_name": "Valeria de Paiva",
        "timestamp": 1625111765
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"276656\">@Valeria de Paiva</span> no, I'm not! I haven't done an exhaustive literature search, since it's not a big project, and I was originally just happy having examples of categories with certain properties. But I really do need contraction, so linear logic is not quite the thing I need!</p>",
        "id": 244516177,
        "sender_full_name": "David Michael Roberts",
        "timestamp": 1625112268
    },
    {
        "content": "<p>Well, you can perform the same construction that I did to get \"affine sets\" on any linear hyperdoctrine, including any \"relevance\" one.  As to where a relevance hyperdoctrine might come from, I have fewer ideas.  I don't know of an obvious instance of a Chu or Dialectica construction that would end up being relevance, but I guess you could take the canonical indexing of a relevance monoidal category like <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">S</mi><mi mathvariant=\"normal\">e</mi><msub><mi mathvariant=\"normal\">t</mi><mo>∗</mo></msub></mrow><annotation encoding=\"application/x-tex\">\\rm Set_*</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">Se</span><span class=\"mord\"><span class=\"mord mathrm\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.175696em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span></span> over Set.</p>",
        "id": 244575041,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1625149696
    },
    {
        "content": "<p>Our semester just started and I've been pretty busy with teaching and bureaucracy.  When I have a chance to work, my to-do list looks like:</p>\n<ol>\n<li>A pile of refereeing committments due this month and next.</li>\n<li>Three papers that still need revising/(re)submitting -- I finally got the antithesis construction and symmetric-monoidal type theory papers revised, but it seems there's always more to do.</li>\n<li>Come up with a title and abstract for a talk at a POMSIGMAA JMM special session.  The session is called “Competing foundations for mathematics: how do we choose?”, and it looks like my role is the (homotopy) type theorist.</li>\n<li>Writing my own proof assistant.</li>\n<li>&lt;still redacted&gt;</li>\n</ol>",
        "id": 252338537,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1631034597
    },
    {
        "content": "<p>Will your talk be recorded? Which flavor of type theory does your proof assistant implement and how does it differ from existing proof assistants?</p>",
        "id": 252340643,
        "sender_full_name": "Leopold Schlicht",
        "timestamp": 1631035491
    },
    {
        "content": "<p>The JMM is <a href=\"https://www.jointmathematicsmeetings.org/\">planned to be in person</a>.  I don't know whether there are any plans to record talks.</p>",
        "id": 252343193,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1631036532
    },
    {
        "content": "<blockquote>\n<ol start=\"4\">\n<li>Writing my own proof assistant.</li>\n</ol>\n</blockquote>\n<p>I am excited to see what you come up with (and look forward to hearing some more details).</p>",
        "id": 252350751,
        "sender_full_name": "Nathanael Arkor",
        "timestamp": 1631039607
    },
    {
        "content": "<p>Well, it's been a very educational experience.  I kind of want to recommend that everyone interested in type theory should try writing their own toy proof assistant at some point.  (I probably wouldn't recommend trying to implement higher-order unification, though.  Ugh.)</p>",
        "id": 252362643,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1631044460
    },
    {
        "content": "<p>Personally, I started because I was inventing a new type theory that I wanted to play around with in a proof assistant, and I wasn't able to find any existing tool that would let me do that.  (Which doesn't necessarily mean there aren't any -- the conversation after <span class=\"user-mention\" data-user-id=\"438119\">@Florian Rabe</span>'s colloquium made me think that I should give MMT another try.)</p>",
        "id": 252362844,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1631044555
    },
    {
        "content": "<p>Since I've been in this situation several times before, of wanting to play around with a new type theory but not having any way to do it, I decided to try to implement something a bit more general that could be used as a framework library to implement multiple different object languages.</p>",
        "id": 252363279,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1631044720
    },
    {
        "content": "<p>So the underlying framework type theory is, at the moment, a plain dependent type theory, but playing the role of a logical framework in which to implement object theories with specified typechecking and reduction behavior.</p>",
        "id": 252363397,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1631044768
    },
    {
        "content": "<p>This idea is similar to various other extant frameworks like Isabelle, Andromeda, Dedukti, Lambdapi, MMT, and I'm sure others.  But I wasn't able to make any of these that I tried do exactly what I wanted.</p>",
        "id": 252363785,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1631044886
    },
    {
        "content": "<p>Will you share any tidbits about how you're going to implement it? <span aria-label=\"grinning\" class=\"emoji emoji-1f600\" role=\"img\" title=\"grinning\">:grinning:</span></p>",
        "id": 252365662,
        "sender_full_name": "Nick Hu",
        "timestamp": 1631045715
    },
    {
        "content": "<blockquote>\n<p>Personally, I started because I was inventing a new type theory that I wanted to play around with in a proof assistant, and I wasn't able to find any existing tool that would let me do that.</p>\n</blockquote>\n<p>Yes, I think there's a fast-growing need for such a tool. I wanted to do something similar a couple of years ago, and wrote a type-checker/interpreter whose metatheory was based on a higher-order version of generalised algebraic theories with rewrites, but it becomes obvious very quickly how much work is required to move from \"type-checker\" to \"proof assistant\".</p>",
        "id": 252366554,
        "sender_full_name": "Nathanael Arkor",
        "timestamp": 1631046122
    },
    {
        "content": "<p>There does seem to be a trend in that direction recently, but I also feel none of them quite caters to what I'm looking for.</p>",
        "id": 252366663,
        "sender_full_name": "Nathanael Arkor",
        "timestamp": 1631046168
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"276777\">Mike Shulman</span> <a href=\"#narrow/stream/274877-practice.3A-our.20work/topic/Mike.20Shulman/near/252363279\">said</a>:</p>\n<blockquote>\n<p>Since I've been in this situation several times before, of wanting to play around with a new type theory but not having any way to do it, I decided to try to implement something a bit more general that could be used as a framework library to implement multiple different object languages.</p>\n</blockquote>\n<p>Typical category theorist move.  <span aria-label=\"upside down\" class=\"emoji emoji-1f643\" role=\"img\" title=\"upside down\">:upside_down:</span></p>",
        "id": 252373783,
        "sender_full_name": "John Baez",
        "timestamp": 1631049720
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"275920\">John Baez</span> <a href=\"#narrow/stream/274877-practice.3A-our.20work/topic/Mike.20Shulman/near/252373783\">said</a>:</p>\n<blockquote>\n<p>Typical category theorist move.  <span aria-label=\"upside down\" class=\"emoji emoji-1f643\" role=\"img\" title=\"upside down\">:upside_down:</span></p>\n</blockquote>\n<p>I'm glad someone else said that and not me.  I was definitely thinking it.</p>",
        "id": 252381347,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1631054386
    },
    {
        "content": "<p>The main thing I was missing in the existing tools was more flexibility in specifying my normalization algorithm.  In particular, I wanted to specify \"rewriting\" or \"reduction\" rules that none of the existing tools I tried would accept as fitting into their rigid notion of what a \"rewrite\" is.  So my system allows the implementer of an object theory to write more or less arbitrary code to specify the result of a reduction on an object-language symbol.</p>",
        "id": 252381533,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1631054512
    },
    {
        "content": "<p>Also I generally prefer Coq-like tactic proofs to Agda-style hole-filling development, but it seems that the former is generally underrepresented in proof assistants, and especially in general frameworks.</p>",
        "id": 252382178,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1631054994
    },
    {
        "content": "<p>So it's something morally like Metamath but for type theories? ;-)</p>",
        "id": 252387314,
        "sender_full_name": "David Michael Roberts",
        "timestamp": 1631058631
    },
    {
        "content": "<p>I'm not really familiar with metamath, but perhaps.</p>",
        "id": 252388351,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1631059398
    },
    {
        "content": "<p>In the sense that it's more of a framework to do things, like <a href=\"http://set.mm\">set.mm</a> is (roughly) a ZFC proof assistant, but there are other, less extensive projects, like NF, HOL, IZF, all built in Metamath.</p>",
        "id": 252389527,
        "sender_full_name": "David Michael Roberts",
        "timestamp": 1631060429
    },
    {
        "content": "<p>Ok sure, and I think that's also the idea of the other generic projects like Isabelle, Andromeda, MMT, etc.</p>",
        "id": 252457926,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1631107275
    },
    {
        "content": "<p>Isabelle lets you use arbitrary ML code; MMT lets you use Scala instead. That ends up making a difference (I tried doing things with MMT, but I really don't like the code style that Scala forces on me, and abandoned that direction). It's too bad that Andromeda development seems stalled right now, as it was quite promising.</p>",
        "id": 252465215,
        "sender_full_name": "Jacques Carette",
        "timestamp": 1631109855
    },
    {
        "content": "<p>Scala3 has a much stronger formal underpinning (see  <a href=\"https://arxiv.org/pdf/1904.07298.pdf\">this more recent paper</a>). I wonder if that is going to make a difference to MMT.</p>",
        "id": 252479502,
        "sender_full_name": "Henry Story",
        "timestamp": 1631114348
    },
    {
        "content": "<p>Interesting, thanks for the report.  My current plan will involve arbitrary OCaml code.  I don't fully understand Isabelle, but insofar as I do, I am tempted to describe Platt (the working title for my proof assistant) as \"like Isabelle but with dependent types\".</p>",
        "id": 252479722,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1631114411
    },
    {
        "content": "<p>Andromeda also looked very promising to me.  But when I tried actually using it I got stuck, not just because it's unfinished, but also because despite the fact that it \"supports\" arbitrary equality rules in theory, to make something usable in practice it seems you're mostly restricted to equalities that fit within the supplied equality-checking algorithm, and mine didn't.</p>",
        "id": 252480047,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1631114511
    },
    {
        "content": "<p>Also Andromeda is (currently) restricted to a single sort (\"type\"), whereas I'm often interested in type theories with more than one sort.</p>",
        "id": 252480187,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1631114550
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"281126\">@Henry Story</span> I expect that it will make no difference whatsoever in day-to-day use, just some meta-level increased confidence. Scala is great, and I make a point of exposing many students to it when I teach my grad PL semantics class. I just personally don't like its style. [The same way Mike prefers tactic-style over hole-style; it is exactly that, a stylistic preference.]</p>",
        "id": 252482149,
        "sender_full_name": "Jacques Carette",
        "timestamp": 1631115302
    },
    {
        "content": "<p>fair enough. I am using Scala and quite happy to program web servers and clients with it; and it is what dissolve my preconceptions that category theory was abstract nonsense. :-)<br>\nBut I would love to have something like Agda that compiles to Scala, so I could do proofs and code.</p>",
        "id": 252482568,
        "sender_full_name": "Henry Story",
        "timestamp": 1631115459
    },
    {
        "content": "<p>Well, I actually think that tactic-style has <em>objective</em> advantages over hole-style.  But, of course, others may have other opinions.  (-:</p>",
        "id": 252482751,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1631115524
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"276777\">Mike Shulman</span> <a href=\"#narrow/stream/274877-practice.3A-our.20work/topic/Mike.20Shulman/near/252482751\">said</a>:</p>\n<blockquote>\n<p>Well, I actually think that tactic-style has <em>objective</em> advantages over hole-style.  But, of course, others may have other opinions.  (-:</p>\n</blockquote>\n<p>Do you mind sharing them?</p>",
        "id": 252483201,
        "sender_full_name": "Valery Isaev",
        "timestamp": 1631115704
    },
    {
        "content": "<p>The main one is that it records the process by which the proof term was constructed, so that it can be read, replayed, and modified.</p>",
        "id": 252484537,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1631116187
    },
    {
        "content": "<p>Of course there's also the potential to write fancy tactics, all the way up to ssreflect and Chlipala style; I don't tend to like tactics like that, but the potential power is there.  Agda has reflection, but I don't think it can achieve quite that level.</p>",
        "id": 252484738,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1631116249
    },
    {
        "content": "<p>Recently a student and I have been looking at \"equational reasoning\" style proofs in Agda, and even with all the tricks you can play to make them as convenient as possible, in my book they just don't approach the ease of <code>rewrite associativity</code> in Coq.</p>",
        "id": 252484891,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1631116318
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"276777\">Mike Shulman</span> <a href=\"#narrow/stream/274877-practice.3A-our.20work/topic/Mike.20Shulman/near/252484738\">said</a>:</p>\n<blockquote>\n<p>Of course there's also the potential to write fancy tactics, all the way up to ssreflect and Chlipala style; I don't tend to like tactics like that, but the potential power is there.  Agda has reflection, but I don't think it can achieve quite that level.</p>\n</blockquote>\n<p>I don't see why it couldn't.</p>",
        "id": 252485000,
        "sender_full_name": "Valery Isaev",
        "timestamp": 1631116350
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"276777\">Mike Shulman</span> <a href=\"#narrow/stream/274877-practice.3A-our.20work/topic/Mike.20Shulman/near/252484891\">said</a>:</p>\n<blockquote>\n<p>Recently a student and I have been looking at \"equational reasoning\" style proofs in Agda, and even with all the tricks you can play to make them as convenient as possible, in my book they just don't approach the ease of <code>rewrite associativity</code> in Coq.</p>\n</blockquote>\n<p>This seems more a complaint about Agda, rather than the philosophy behind the style of proof in Agda.</p>",
        "id": 252485395,
        "sender_full_name": "Nathanael Arkor",
        "timestamp": 1631116482
    },
    {
        "content": "<p>In terms of ease of use, languages like Isabelle and Coq have a large advantage over Agda in that they're much more mature.</p>",
        "id": 252485721,
        "sender_full_name": "Nathanael Arkor",
        "timestamp": 1631116598
    },
    {
        "content": "<p>Does Lean not also use Reflection for its tactics? <br>\n(But they don't have Cubical)</p>",
        "id": 252485850,
        "sender_full_name": "Henry Story",
        "timestamp": 1631116647
    },
    {
        "content": "<p>Which is not to make a point in either one's favour, but rather to point out that comparing the philosophy of proof styles by making direct comparison to implementations is not particularly representatitive.</p>",
        "id": 252485922,
        "sender_full_name": "Nathanael Arkor",
        "timestamp": 1631116672
    },
    {
        "content": "<p>There are indeed many different 'tactic' styles. The styles that hide a lot of computation in an unobservable medium annoy me - it's all black magic that does not provide much explanation. Proofs should have explanatory power (they do in normal mathematics). Proofs whose contents is merely \"it's true, really, I've checked, you don't need to worry about it\" feel rather unsatisfying.  PVS's <code>grind</code> is perhaps the worst offender!</p>\n<p>Even though I have published a lot of papers on meta-programming, somehow the MTAC language as a means to give instructions on how to build my proofs doesn't really resonate with me. I agree 100% that Agda hides that part, because that is mostly done in an invisible way in the IDE (the equivalent of 'intro' and 'intros' and 'case split' and ... all exist in Agda too, but they are IDE \"gestures\" rather that residuated in the proof).</p>\n<p>As it turns out, for the kinds of results that I'm interested in, the explicit proof terms are very important to me. So I like seeing them, Agda/Idris style.   Whether it's PL meta-theory or category theory in a constructive setting, I like to be forced to do explicit equational proofs. One huge advantage: when doing n-category theory, one can immediately see what will be hard work in (n+1)-category theory. This is also a huge disadvantage if you have no intention of going there!  It's a similar issue with strict/weak, for that matter.</p>\n<p>Note that, for the exact example of <code>associativity</code>, that can be done in Agda, in multiple ways.</p>\n<p>Personally, I'm very happy for the proliferation of systems. The design space is huge, and it should be well explored. And I don't think there is a global optimum, just local ones, that cater to different styles.</p>",
        "id": 252487498,
        "sender_full_name": "Jacques Carette",
        "timestamp": 1631117201
    },
    {
        "content": "<p>As to using reflection (in Agda): it is indeed extremely powerful, and people have just started exploring. The one thing it can't do is to create new top-level bindings, and that was exactly the kind of meta-programming I was looking for...  But as far as proof-level meta-programming, as far as I can tell, it's merely a matter of effort to program it all, there are no issues with the implementation that would block things.</p>",
        "id": 252488133,
        "sender_full_name": "Jacques Carette",
        "timestamp": 1631117417
    },
    {
        "content": "<p>Tactics don't make proof terms invisible.  You always have the option to write them out explicitly, or to print them after you've constructed them with tactics.</p>",
        "id": 252492920,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1631119234
    },
    {
        "content": "<p>Andrej Bauer likes to point out that in no usable proof assistant do you actually write \"proof terms\" in the actual underlying formal system; there is always a computation step even if it's just elaboration and unification.  Given that, why not give the user full access to that computational level?</p>",
        "id": 252493071,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1631119305
    },
    {
        "content": "<p>I don't think even a reflection-style proof in Agda, no matter how fancy it can get, can be \"replayed\" in the same way you can step through a tactic proof in Coq or Lean.  This is a big advantage because simply reading a proof assistant file, whether it's a tactic proof script or a proof term, is very hard to understand directly, especially for a working mathematician.  Stepping through it and seeing the givens and goals at each stage is much closer to the way mathematicians think when they read or write a proof.  Yes, this is a stylistic issue, but just as a large enough quantitative difference becomes qualitative, a large enough stylistic difference becomes objective.</p>",
        "id": 252493498,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1631119461
    },
    {
        "content": "<p>Perhaps you can claim that the only reason Coq has many more big formalization projects (the odd order theorem, the four-color theorem, CompCert, FIat Crypto) is that it's older and more mature.  But I think it's also significant that Lean, which is also tactic-based and much younger than Agda, has already had an astonishing degree of uptake among \"working\" mathematicians.</p>",
        "id": 252493918,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1631119630
    },
    {
        "content": "<p>Anyway, you asked.  (-:</p>",
        "id": 252494022,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1631119678
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"276092\">Nathanael Arkor</span> <a href=\"#narrow/stream/274877-practice.3A-our.20work/topic/Mike.20Shulman/near/252485922\">said</a>:</p>\n<blockquote>\n<p>Which is not to make a point in either one's favour, but rather to point out that comparing the philosophy of proof styles by making direct comparison to implementations is not particularly representatitive.</p>\n</blockquote>\n<p>Well, the available implementations are all we have to talk about.  If someone claims that the disadvantages of hole-style proofs are not intrinsic to that style, then I would say it's incumbent on them to prove it by exhibiting an implementation that avoids them.  (-:</p>",
        "id": 252495892,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1631120350
    },
    {
        "content": "<p>I \"learned\" the same lesson from Andrej as well. He is indeed correct. And I agree that having first-class access to elaboration is an excellent idea. [Idris pioneered that, BTW.  Tactics a la LCF didn't quite go that far.</p>\n<p>And you are correct on the next point as well: Agda-style proofs cannot be replayed. The end result is that I feel like I can read my Agda proofs directly, while for Coq proofs, one is more-or-less obligated to interactively replay them.</p>\n<p>It is also impossible to deny the success (size-wise) of Coq and Lean. Lean has the huge advantage of having core developers (on the language side) who have actively learned from the pros/cons of its predecessors, as well as having the enormous advantage of breaking backwards compatibility (4 times...).  Coq keeps losing people when they do the same - different communities react differently. (One can see the same in MathOverflow vs StackOverflow.)</p>\n<p>One still has to be careful. This debate has much in common with the OO vs functional debate. The debate is healthy when it is being held by people who have genuinely tried the alternatives and made a choice, evil when it's done by a 'fan'.</p>",
        "id": 252496823,
        "sender_full_name": "Jacques Carette",
        "timestamp": 1631120673
    },
    {
        "content": "<p>Lean also has the benefit of an aggressive guerilla marketing campaign</p>",
        "id": 252497747,
        "sender_full_name": "Nick Hu",
        "timestamp": 1631121049
    },
    {
        "content": "<p>I don't see why any given proof assistant has to restrict itself to one style.  The comparison to OO vs functional programming is <em>a propos</em> -- some of the nicest (IMHO) modern languages, like Scala and OCaml, incorporate both OO and functional features, allowing the user to choose which is most appropriate for their particular situation or stylistic preference.</p>",
        "id": 252498408,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1631121310
    },
    {
        "content": "<p>For the record, I have used Agda myself -- not as extensively as Coq, but for several fairly substantial projects -- and there are definitely situations in which it shines comparatively.  For instance, working with large families of mutual inductive or inductive-inductive types is much more pleasant/possible in Agda.  Of course a tactic-based proof assistant could provide better support for such things than Coq does, but I suspect there are some intrinsic advantages to hole-style in that situation.</p>",
        "id": 252498744,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1631121455
    },
    {
        "content": "<p>Talking about varieties of styles to write down proofs in a proof assistant, Coq has at least 5 quite distinct tactic languages/metalanguages (Ltac, Ltac2, MtacX, Elpi, Gallina through Metacoq's plugin). And you can get closer to agda style program/proof writing with Equations.</p>",
        "id": 252499519,
        "sender_full_name": "Kenji Maillard",
        "timestamp": 1631121741
    },
    {
        "content": "<p>Ideally, I would like Platt to support both styles.  I also have an idea for a sort of intermediate style that works with proof terms and holes but records the sequence of hole-filling, so that with proper tool support you can view the context and type of each hole along with the term that filled it.  The idea is that if you write just <code>f ? a</code>, then <code>?</code> is a hole that's reported to the user with its context and type.  But when you \"fill\" it with a term like <code>g a b</code>, instead of that term replacing the hole to get <code>f (g a b) a</code>, it comes after it delimited by a semicolon (or something): <code>f ? a ; g a b</code>.  Semantically this means the stame as <code>f (g a b) a</code>, so the semicolon is sort of a backwards let-binding akin to <code>let ? = g a b in f ? a</code>.  The difference is that the type of <code>?</code> is still inferred from its use point in <code>f ? a</code>, with the term <code>g a b</code> being checked against that type.  Multiple holes can also be chained, with the same term being obtainable as <code>f ? a ; g ? b ; a</code> or <code>f ? ? ; g a b ; a</code>; the question-marks \"go onto a queue\" as they are encountered and semicolons fill them in order.</p>",
        "id": 252500015,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1631121940
    },
    {
        "content": "<p>Then in the process of checking the proof, the proof assistant knows the types of each <code>?</code> and can display them to the user with a suitable interface.  I did some experiments with this, using an emacs mode with commands to move around between the <code>?</code>s in a completed term and show their types, and I found it quite pleasant.</p>",
        "id": 252500221,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1631122015
    },
    {
        "content": "<p>It's been a long time since I posted an update on my work, because fall semester happened.  But I'm teaching less this semester, so I'm hoping to make some progress on my to-do list:</p>\n<ol>\n<li>Make it through our departmental hiring cycle.</li>\n<li>&lt;redacted&gt;</li>\n<li>Revise some papers.</li>\n<li>Write my talk for the postponed now-virtual JMM session \"Competing foundations for mathematics: how do we choose?\"  My talk is scheduled for April 6 and is contrarily titled \"Complementary foundations for mathematics: when do we choose?\" but that's about all I know about it so far.</li>\n<li>Plan my 3 talks for the \"HoTTEST Distinguished Lecture Series\" on April 14, 21, and 28.  For these I don't even have a title yet.</li>\n</ol>",
        "id": 270861565,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1644112670
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"276777\">@Mike Shulman</span> do you know if your JMM talk will be recorded and made available?</p>",
        "id": 270862079,
        "sender_full_name": "David Michael Roberts",
        "timestamp": 1644113352
    },
    {
        "content": "<p>I haven't heard anything one way or the other.</p>",
        "id": 270902626,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1644170488
    },
    {
        "content": "<p>Something was said about recordings of the JMM talks being available later, so we'll see.  In the meantime <a href=\"http://home.sandiego.edu/~shulman/papers/jmm2022-complementary.pdf\">here are my slides</a>.</p>",
        "id": 278113954,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1649302923
    },
    {
        "content": "<p>The title for my HoTTEST talks is \"Towards Third-Generation HOTT\", and the abstract is on the <a href=\"https://www.uwo.ca/math/faculty/kapulkin/seminars/hottest.html\">HoTTEST page</a>.  This is the project that I've been posting as \"&lt;redacted&gt;\" all this time, because I wasn't sure it would come to anything.  But although it's still not quite finished, I'm now confident enough that the unresolved details will work out one way or another.</p>",
        "id": 278114046,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1649303047
    },
    {
        "content": "<p>Can you say anything about what \"third-generation\" means here, or is it still top secret?</p>",
        "id": 278114811,
        "sender_full_name": "John Baez",
        "timestamp": 1649304008
    },
    {
        "content": "<p>Something vague would suffice, no need to give away your tricks.</p>",
        "id": 278114886,
        "sender_full_name": "John Baez",
        "timestamp": 1649304051
    },
    {
        "content": "<p>Oh yeah, and what's \"second-generation\" HoTT?</p>",
        "id": 278114897,
        "sender_full_name": "John Baez",
        "timestamp": 1649304081
    },
    {
        "content": "<p>I'm thinking of Book HoTT as \"first-generation\" and cubical type theories as \"second-generation\".  So the new formalism we're working on, which I sketched in the abstract, would be a third generation.</p>",
        "id": 278115301,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1649304561
    },
    {
        "content": "<p>I like this programming metaphor very much!</p>",
        "id": 278116392,
        "sender_full_name": "Zhen Lin Low",
        "timestamp": 1649305910
    },
    {
        "content": "<p>Incidentally I think Thomas Forster talks about mainstream set theory as the \"study of wellfoundedness\", in contrast to the non-wellfounded set theory he likes to think about.</p>",
        "id": 278116445,
        "sender_full_name": "Zhen Lin Low",
        "timestamp": 1649305953
    },
    {
        "content": "<p>The difference between HoTT and HOTT is ... not confusing at all ? :-P</p>",
        "id": 278117562,
        "sender_full_name": "David Michael Roberts",
        "timestamp": 1649307454
    },
    {
        "content": "<p>Just read your JMM slides - I thoroughly enjoyed them. You make an extremely convincing argument.</p>",
        "id": 278151791,
        "sender_full_name": "Jacques Carette",
        "timestamp": 1649332420
    },
    {
        "content": "<p>oh no, i've barely worked through the HoTT book, so i'm already two generations behind before having even properly started! <span aria-label=\"expressionless\" class=\"emoji emoji-1f611\" role=\"img\" title=\"expressionless\">:expressionless:</span></p>",
        "id": 278152191,
        "sender_full_name": "Tim Hosgood",
        "timestamp": 1649332631
    },
    {
        "content": "<p>Fortunately, one of the goals of HOTT is to be easier to work with than either of the first two generations, so if it works out, a newcomer should  just be able to start there.  But it'll probably be a while before anyone writes a third generation HOTT Book, so for now the first gen one is perfectly good.</p>",
        "id": 278173049,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1649342170
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"276422\">David Michael Roberts</span> <a href=\"#narrow/stream/274877-practice.3A-our-work/topic/Mike.20Shulman/near/278117562\">said</a>:</p>\n<blockquote>\n<p>The difference between HoTT and HOTT is ... not confusing at all ? :-P</p>\n</blockquote>\n<p>Well, the not-so-secret goal is to take over the whole subject. (-:</p>",
        "id": 278173136,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1649342205
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"416301\">Zhen Lin Low</span> <a href=\"#narrow/stream/274877-practice.3A-our-work/topic/Mike.20Shulman/near/278116445\">said</a>:</p>\n<blockquote>\n<p>Incidentally I think Thomas Forster talks about mainstream set theory as the \"study of wellfoundedness\", in contrast to the non-wellfounded set theory he likes to think about.</p>\n</blockquote>\n<p>Yes, this certainly isn't an original suggestion of mine.  Another reference was suggested by one of the audience after the talk, Mathias I think.</p>",
        "id": 278173484,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1649342349
    },
    {
        "content": "<p>After HoTT and HOTT there will be HÖTT - the heavy metal version.</p>",
        "id": 278190316,
        "sender_full_name": "John Baez",
        "timestamp": 1649348681
    },
    {
        "content": "<p>Or maybe HΩTT?</p>",
        "id": 278190754,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1649348893
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"276777\">Mike Shulman</span> <a href=\"#narrow/stream/274877-practice.3A-our-work/topic/Mike.20Shulman/near/278173484\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"416301\">Zhen Lin Low</span> <a href=\"#narrow/stream/274877-practice.3A-our-work/topic/Mike.20Shulman/near/278116445\">said</a>:</p>\n<blockquote>\n<p>Incidentally I think Thomas Forster talks about mainstream set theory as the \"study of wellfoundedness\", in contrast to the non-wellfounded set theory he likes to think about.</p>\n</blockquote>\n<p>Yes, this certainly isn't an original suggestion of mine.  Another reference was suggested by one of the audience after the talk, Mathias I think.</p>\n</blockquote>\n<p>Interesting. Adrian Mathias was Thomas's advisor. It makes sense.</p>",
        "id": 278190924,
        "sender_full_name": "Zhen Lin Low",
        "timestamp": 1649348988
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"276777\">@Mike Shulman</span> Love your opening slides!</p>",
        "id": 278194787,
        "sender_full_name": "Jon Sterling",
        "timestamp": 1649350746
    },
    {
        "content": "<p>I'm not surprised all the computer scientists like it when I say that math is like programming...</p>",
        "id": 278194922,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1649350799
    },
    {
        "content": "<p>Hahaha :) Well, the part I especially liked was \"A bug in the compiler can be fixed, and most code is fine\". I think that for reasons of publicity and trying to find a way to communicate the value of our work to outsiders, it has become very common for us to make mountains out of molehills of bugs and mistakes, and try and convince people they should give us a million dollars to decrease the \"trusted base\" of our tool or whatever, but the reality is that this basically never matters in practice. What matters is ergonomics, and making sure that the tool reflects the mental model of the mathematician.</p>",
        "id": 278196107,
        "sender_full_name": "Jon Sterling",
        "timestamp": 1649351257
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"276777\">Mike Shulman</span> <a href=\"#narrow/stream/274877-practice.3A-our-work/topic/Mike.20Shulman/near/278190754\">said</a>:</p>\n<blockquote>\n<p>Or maybe HΩTT?</p>\n</blockquote>\n<p>You should save that one for last: \"ultimate HoTT\".</p>",
        "id": 278203151,
        "sender_full_name": "John Baez",
        "timestamp": 1649354404
    }
]