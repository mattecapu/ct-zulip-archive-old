[
    {
        "content": "<p>Typos at the bottom of 12th page (stRict monoidal laws) and 11th (cartesian functionS can be paired).loving it so far as well-could be an intro this monoidality stuff for CS background people.I'm not graphically minded but this makes the diagrammatic stuff easy to understand</p>",
        "id": 299100100,
        "sender_full_name": "Simonas Tutlys",
        "timestamp": 1663310490
    },
    {
        "content": "<p>thanks much! i appreciate this on any channel, but if anyone wants to reach me directly, it's <a href=\"mailto:dusko@hawaii.edu\">dusko@hawaii.edu</a> or <a href=\"mailto:dusko@dusko.org\">dusko@dusko.org</a> :)</p>",
        "id": 299116921,
        "sender_full_name": "dusko",
        "timestamp": 1663318162
    },
    {
        "content": "<p>Hi Dusko, I'm looking at it now. </p>\n<p>At the beginning of section 1.2 you say \"We assume that any type is equipped with such operations\", i.e., in your category every object is a commutative comonoid in a canonoical way. Is this assumption meant to be enforced throughout the entire book? Where does this assumption apply?</p>\n<p><a href=\"https://ncatlab.org/nlab/show/cartesian+monoidal+category\">https://ncatlab.org/nlab/show/cartesian+monoidal+category</a> </p>\n<blockquote>\n<p>Moreover, one can show (e.g. Fox 1976 or Heunen-Vicary 2012, p. 79 (p. 85 of the pdf)) that any symmetric monoidal category equipped with suitably well-behaved diagonals and augmentations must in fact be cartesian monoidal. More precisely: suppose C is a symmetric monoidal category equipped with monoidal natural transformations (...)</p>\n</blockquote>\n<p>The paragraph I highlighted  from the linked nlab page seems to suggest that any symmetric monoidal category where every object is a comonoid in a natural way is a Cartesian monoidal category. Later on that you will be considering both arbitrary maps and Cartesian maps (i.e. comonoid homomorphisms) between two objects. Now this seems to suggest that you are not actually working in a Cartesian monoidal category because every morphism between objects in a Cartesian monoidal category is always a comonoid homomorphism. There is some subtlety here, you are working in a category where every object has a comonoid structure but yet the category is not Cartesian monoidal, so maybe you could discuss which hypotheses of the theorems I mentioned are not satisfied.</p>",
        "id": 299360551,
        "sender_full_name": "Patrick Nicodemus",
        "timestamp": 1663446154
    },
    {
        "content": "<p>There are no examples of categories given in the section titled \"Categories.\" I would like to see a short list of the most representative examples of categories which are semantic models. What are you thinking of, the category of pointed sets, the category of dcpo's? What categories model the salient features of permitting nontotal functions or functions which are not single valued?</p>\n<p>I understand that the book is meant to be accessible to undergraduate students and so the examples might complicate things. For example maybe the Kleisli category of the finite powerset monad is an example of a category which models nondeterministic computation but it would be unfair to expect undergraduate students to understand this comment. Perhaps you can mark the examples with a warning saying it's OK if this is not understood upon first read and one can come back to it later.</p>",
        "id": 299361038,
        "sender_full_name": "Patrick Nicodemus",
        "timestamp": 1663446676
    },
    {
        "content": "<p>Similarly I think the book is made harder to read because it chooses to avoid some established terminology to avoid intimidating students. I understand that the phrase \"morphism of comonoids\" may be intimidating for students who are not familiar with the terminology but I find it more understandable to say \"A Cartesian map is a map which is a morphism with respect to the canonical comonoid structure\" than to say \"A Cartesian map is a map which is both total and single valued.\" Again, I am not sure how to handle the issue of intimidating students with scary algebra terminology but you could say in a footnote / aside \"Different books use different terminology. So-and-so would call our Cartesian maps a \"morphism of comonoids\". The book by XYZ refers to our program evaluators as \"ABC's.\" \"</p>",
        "id": 299361383,
        "sender_full_name": "Patrick Nicodemus",
        "timestamp": 1663447050
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"424412\">Patrick Nicodemus</span> <a href=\"#narrow/stream/274877-practice.3A-our-work/topic/Dusko.20Pavlovic/near/299360551\">said</a>:</p>\n<blockquote>\n<p>Hi Dusko, I'm looking at it now. </p>\n<p>At the beginning of section 1.2 you say \"We assume that any type is equipped with such operations\", i.e., in your category every object is a commutative comonoid in a canonoical way. Is this assumption meant to be enforced throughout the entire book? Where does this assumption apply?</p>\n<p><a href=\"https://ncatlab.org/nlab/show/cartesian+monoidal+category\">https://ncatlab.org/nlab/show/cartesian+monoidal+category</a> </p>\n<blockquote>\n<p>Moreover, one can show (e.g. Fox 1976 or Heunen-Vicary 2012, p. 79 (p. 85 of the pdf)) that any symmetric monoidal category equipped with suitably well-behaved diagonals and augmentations must in fact be cartesian monoidal. More precisely: suppose C is a symmetric monoidal category equipped with monoidal natural transformations (...)</p>\n</blockquote>\n<p>The paragraph I highlighted  from the linked nlab page seems to suggest that any symmetric monoidal category where every object is a comonoid in a natural way is a Cartesian monoidal category. </p>\n</blockquote>\n<p>Fox 1976 constructs the cofree cartesian category over a given symmetric monoidal. That is the category of comonoids and <em>comonoid homomorphisms</em>. Heunen and Vicary surely mention somewhere that the hierarchy categories of comonoids in monoidal categories with various kinds of homomorphisms was studied in detail in <a href=\"https://arxiv.org/abs/0904.1997\">https://arxiv.org/abs/0904.1997</a><br>\n(unless they forgot to mention it :)))</p>\n<p>Look at the monoidal category <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mi>R</mi><mi>e</mi><mi>l</mi><mo separator=\"true\">,</mo><mo>×</mo><mo separator=\"true\">,</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">(Rel,\\times,1)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">×</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">)</span></span></span></span>. Every set comes with various data services. One is inherited from the cartesian structure of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mi>S</mi><mi>e</mi><mi>t</mi><mo separator=\"true\">,</mo><mo>×</mo><mo separator=\"true\">,</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">(Set,\\times,1)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">t</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">×</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">)</span></span></span></span>. Moreover, for any set <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>A</mi></mrow><annotation encoding=\"application/x-tex\">A</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">A</span></span></span></span>, any abelian group structure <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mo>+</mo><mo stretchy=\"false\">)</mo><mo>:</mo><mi>A</mi><mo>×</mo><mi>A</mi><mo>→</mo><mi>A</mi></mrow><annotation encoding=\"application/x-tex\">(+):A\\times A\\to A</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord\">+</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7667em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\">A</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">A</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">A</span></span></span></span> induces an additional data service <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">Δ</mi><mo>:</mo><mi>A</mi><mo>→</mo><mi>A</mi><mo>×</mo><mi>A</mi></mrow><annotation encoding=\"application/x-tex\">\\Delta:A\\to A\\times A</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord\">Δ</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">A</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7667em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\">A</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">A</span></span></span></span> in <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>R</mi><mi>e</mi><mi>l</mi></mrow><annotation encoding=\"application/x-tex\">Rel</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span></span></span></span> defined by $x\\Delta \\langle y,z\\rangle$$ whenever <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi><mo>=</mo><mi>y</mi><mo>+</mo><mi>z</mi></mrow><annotation encoding=\"application/x-tex\">x=y+z</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7778em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span></span></span></span>. See <a href=\"https://arxiv.org/abs/0812.2266\">https://arxiv.org/abs/0812.2266</a>. There are lots of data services in <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>R</mi><mi>e</mi><mi>l</mi></mrow><annotation encoding=\"application/x-tex\">Rel</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span></span></span></span>, supporting nondeterministic computation. And <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>R</mi><mi>e</mi><mi>l</mi></mrow><annotation encoding=\"application/x-tex\">Rel</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span></span></span></span> of course isn't a cartesian category. </p>\n<p>(Btw, why are you calling them \"cartesian monoidal categories\". Isn't cartesian structure always monoidal? I.e., are ther cartesian non-monoidal categories?)</p>\n<p>The confusion probably stems from the \"<em>suitably well-behaved</em>\" part of the \"suitably well-behaved diagonals and augmentations must in fact be cartesian monoidal\". The <em>natural</em> diagonals and projections are a part of the standard definition of cartesian categories. I think I specifically define the <em>cartesian</em> functions to be those with respect to which the diagonals and the projections are natural. There are lots of interesting \"well-behaved\" structures that are not natural, and many natural structures that are neither interesting nor \"well-behaved\". </p>\n<p>But thank you for reading. While I don't think this is an error, I am sure that there are some to be found  :)</p>",
        "id": 299376745,
        "sender_full_name": "dusko",
        "timestamp": 1663462963
    }
]