[
    {
        "content": "<p>This is the official topic for the course's second lecture, <strong>\"Essential building blocks: Categories and Functors\"</strong></p>\n<p>As a reminder, by the end of this week you will:</p>\n<ul>\n<li>Understand the key building blocks of categories: objects, morphisms and functors.</li>\n<li>Leverage these concepts to explain several standard mathematical constructs: sets, relations, and groups.</li>\n<li>Get comfortable manipulating these concepts through several worked exercises.</li>\n<li>Ground all of the above in relevant deep learning context, with links to functional programming.</li>\n<li>Show how we can build an effective \"type checker\" for deep learning using the category of sets.</li>\n</ul>\n<p>This lecture will help explain key parts of <a href=\"https://arxiv.org/abs/2203.15544\">Graph Neural Networks are Dynamic Programmers</a> (Dudzik and Veliƒçkoviƒá, NeurIPS 2022)</p>",
        "id": 303289099,
        "sender_full_name": "Petar Veliƒçkoviƒá",
        "timestamp": 1665418671
    },
    {
        "content": "<p>Hi, I just wanted to mention that we've updated the calendar invite for this week with the new zoom link (you should be able to find it under 'Location' in the event). Alternatively, you should be able to access it from this link: <a href=\"https://uva-live.zoom.us/j/82982934369\">Zoom link for Monday</a></p>",
        "id": 303527289,
        "sender_full_name": "Bruno Gavranovic",
        "timestamp": 1665525596
    },
    {
        "content": "<p>Hi all, </p>\n<p>Another important point to note: Lecture 2 will start <strong>at the same time</strong> as Lecture 1 (Monday, 17 October), but unlike Bruno's lecture, it will last <em>for up to <strong>two</strong> hours</em> (including Q&amp;A). Hence, the event will last <strong>4--6pm UK Time</strong>.</p>\n<p>This is to give us ample time to play with many interesting categorical constructs in a paced manner. If you cannot make the whole slot, this is okay -- we will again strive to record. Of course, being there for the live event is preferable, as it will allow you to ask questions on the spot. <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span></p>",
        "id": 303533778,
        "sender_full_name": "Petar Veliƒçkoviƒá",
        "timestamp": 1665529072
    },
    {
        "content": "<p>Hi all!</p>\n<p>Super excited about our lecture today!<br>\nAs a reminder, the lecture is set for <strong>4--6pm, UK Time</strong>.</p>\n<p>The zoom link for joining the meeting is: <a href=\"https://uva-live.zoom.us/j/82982934369\">https://uva-live.zoom.us/j/82982934369</a><br>\nAs before, we aim to livestream on YouTube, which will be available here: <a href=\"https://youtu.be/jU7KyZn_hBc\">https://youtu.be/jU7KyZn_hBc</a><br>\n(this link should also hold the lecture recording once the event is over!)</p>\n<div class=\"youtube-video message_inline_image\"><a data-id=\"jU7KyZn_hBc\" href=\"https://youtu.be/jU7KyZn_hBc\"><img src=\"https://uploads.zulipusercontent.net/0c06845e783e11993aca256e423780e8f3f62a1f/68747470733a2f2f692e7974696d672e636f6d2f76692f6a55374b795a6e5f6842632f64656661756c742e6a7067\"></a></div><p>As promised, I make the slides available ahead-of-time, so annotation can be done on the fly. Thanks for suggesting this <span class=\"user-mention\" data-user-id=\"553422\">@Charles London</span>!<br>\nOur slides for today are given here: <a href=\"https://docs.google.com/presentation/d/1z8QmCWsImykggqrHt6pGoQ2pW1_qfHwdX1BnqqpnCdM/edit?usp=sharing\">https://docs.google.com/presentation/d/1z8QmCWsImykggqrHt6pGoQ2pW1_qfHwdX1BnqqpnCdM/edit?usp=sharing</a></p>\n<p>It's highly recommended to join via Zoom if you can -- there will be plentiful potential for interaction during the lecture.</p>\n<p>Join me for an exciting journey into the realm categorical.... <span aria-label=\"dragon\" class=\"emoji emoji-1f409\" role=\"img\" title=\"dragon\">:dragon:</span>  followed with some immediate implications to deep learning architecture design (we'll apply what we've learnt to explain the key concepts of my paper with <span class=\"user-mention\" data-user-id=\"553308\">@Andrew Dudzik</span> -- freshly accepted at NeurIPS'22.</p>",
        "id": 304453879,
        "sender_full_name": "Petar Veliƒçkoviƒá",
        "timestamp": 1666011419
    },
    {
        "content": "<p>Where is people answering the questions online? Thanks!</p>",
        "id": 304492452,
        "sender_full_name": "Lucia",
        "timestamp": 1666020712
    },
    {
        "content": "<p>Hi! Would someone be kind enough to CTRL+A, CTRL+C, CTRL+V  for the contents of the Q&amp;A? my zoom crashed and i lost all previous comments, which i wanted to preserve for some of the links and references.</p>",
        "id": 304507132,
        "sender_full_name": "Tali Beynon",
        "timestamp": 1666024793
    },
    {
        "content": "<p>Viliam Vadocz 05:09 PM  <br>\nWhy not use the zoom chat instead of the Q&amp;A?<br>\nPim de Haan 05:10 PM <br>\nI think Q&amp;A is preferable. Allows for upvotes<br>\nKarthikeyan Natesan Ramamurthy 05:18 PM  <br>\nIf we are not allowed to peek into the objects, how do we define useful morphisms?<br>\nThis question has been answered live<br>\nFilip Bar 05:21 PM <br>\nOf  course we  first have to be aware  of what our objects are to define meaningful morphisms (and that is the crux when d efining your category). Once you have that data settled down it is the morphisms that allow you to have the bird's  eye view on your global (and also local)  structure.<br>\nYivan Zhang 05:24 PM <br>\nI think this is rooted in the <a href=\"https://ncatlab.org/nlab/show/Yoneda+lemma\">https://ncatlab.org/nlab/show/Yoneda+lemma</a><br>\nashwath 05:21 PM  <br>\ndoes g circle f need to be unique?<br>\nThis question has been answered live<br>\njules tsukahara 05:21 PM  <br>\nIf g and f are invertible, is it a category?<br>\nThis question has been answered live<br>\nFilip Bar 05:24 PM <br>\nCategories where every arrow is invertible is called a groupoid. As the name suggests it is a generalisation of a group, and has been around before  the concept of  a category has been defined.<br>\nGiacomo Aldegheri 05:22 PM  <br>\nDoes category theory also deal with non-categories, or is the concept general enough to be ‚Äúexhaustive‚Äù?<br>\nThis question has been answered live<br>\nFilip Bar 05:22 PM <br>\nFun fact:  you can construct a category over any graph<br>\nTali Beynon 05:23 PM <br>\n@Filip aka the free category generated by a quiver<br>\njules tsukahara 05:23 PM <br>\ni guess you need to add all self loops and make all arrow composable?<br>\nPim de Haan 05:24 PM <br>\nFor example, a semigroup lacks an identity and itself can not be seen as a category. However, you can often still define morphisms between two semi-groups, so can form a category of all semigroups.<br>\nMatthew Pugh 05:24 PM <br>\nis every category a subcategory of the free category on some quiver?<br>\nTali Beynon 05:26 PM <br>\n@Matthew yes, with some asterisks. for example you need to define \"sub\" to mean a quotient operation where you declare some morphisms to be identical to others, rather than a sub-graph.<br>\nTali Beynon 05:26 PM <br>\nthis is similar (in fact almost identical!) to how any finite group can be seen as isomorphic to a free group quotiented by some relations<br>\nFilip Bar 05:27 PM <br>\nYes, it should be. You can forget the category structure and just look at it as a graph. Then you can construct the \"free\" category over that graph. This doesn't make your  original category a  subcategory. But you can perform a suitable \"quotient construction\" as Tali says.<br>\nMatthew Pugh 05:28 PM <br>\nSo not as a subcategory but as a 'Quotient' Category by adding relations? Awesome, thanks for the help<br>\nTali Beynon 05:28 PM <br>\n@Jules it's more that the morphisms of the free category represent <em>paths</em> of any finite length in the original graph. you can compose paths when they are head to tail. for example, the morphisms between objects ùëé and ùëè in the free category on a graph is the set of paths that begin at ùëé and end at ùëè<br>\nTali Beynon 05:29 PM <br>\n@Jules then the \"empty path\", which immediately starts and ends at a vertex ùëé, is exactly the (unique) identity morphism in the category.<br>\nTali Beynon 05:30 PM <br>\n@Jules I don't refer to category theory at all but the way it works is visualized here (<a href=\"https://quivergeometry.net/path-groupoids/\">https://quivergeometry.net/path-groupoids/</a>) and its the same idea<br>\nFranck Albinet 05:27 PM  <br>\nThere is a unique one!<br>\nThis question has been answered live<br>\nDobrik Georgiev 05:27 PM  <br>\nConstant fn?<br>\nThis question has been answered live<br>\nVictoria Klein 05:27 PM  <br>\nconstant?<br>\nThis question has been answered live<br>\nDobrik Georgiev 05:29 PM  <br>\nWhat does \"up to isomorphism\" mean in Cat theory? (i.e. what's an Isomorphism)<br>\nJo√£o Ara√∫jo 05:29 PM <br>\nPetar will explain that in a couple of slides<br>\nAmina Mollaysa 05:29 PM  <br>\nisn‚Äôt what is in the object makes A different from B? if we ignore what is in the object then everything in a set become the smae? like a molecular graph has different atoms because what is inside atoms actually defines what type of atom it is?<br>\nJo√£o Ara√∫jo 05:34 PM <br>\nIn our context the sets themselves are the objects, what Petar is saying is that we won‚Äôt talk about the elements of the sets, but the sets themselves differ from each other by things like cardinality<br>\nFilip Bar 05:36 PM <br>\nGood point. This is  why we need to carefully distinguish between being isomorphic and being equal. Isomers in Chemistry would be isomorphic (in a suitable sense), but not equal.<br>\nTali Beynon 05:53 PM <br>\n@Filip makes me think that a nice illustration of the maxim that \"objects are defined by their relationships\" for chemistry would be that nuclear isotopes manifest almost no chemical difference (except for slight changes in diffusion and reaction rates due to mass and maybe nuclear spin). so their chemical relationships with other molecules are the same, and we can treat them as the same kind of element \"most of them time\" because chemistry (=category theory) won't be able to tell the difference between them.<br>\nyobibyte 05:30 PM  <br>\nThere is |B| morphisms like that?<br>\nThis question has been answered live<br>\nluchino_prince 05:30 PM  <br>\ncardinality of B<br>\nThis question has been answered live<br>\nPiotr Piƒôkos 05:30 PM  <br>\ncould you give an example of a non-category that doesn‚Äôt satisfy the compositionality axiom?<br>\nThis question has been answered live<br>\nDaniel Gonzalez Cedre 05:31 PM <br>\nyou can imagine a category with three objects A, B, C and two morphisms A-&gt;B and B-&gt;C and all of the identities, but no morphism A-&gt;C<br>\nSebastian Thomas (dida) 05:32 PM <br>\nThat‚Äôs kind of the ‚Äûwrong‚Äú question as composition is considered to be part of the data.<br>\nPiotr Piƒôkos 05:33 PM <br>\nbut isn‚Äôt it the case that you can always easily extend the universe of morphisms to contain the compositions?<br>\nDaniel Gonzalez Cedre 05:34 PM <br>\nsure, but then you may be dealing with a different universe. for example, if you are trying to describe some phenomenon using categorical language and you discover that compositionality is not satisfied, you can ‚Äúadd it in yourself,‚Äù but you have to acknowledge that the underlying phenomenon was not actually categorical<br>\nDaniel Gonzalez Cedre 05:34 PM <br>\nperhaps someone else can weigh in with such a real-world example, i can‚Äôt think of any at the moment<br>\nSebastian Thomas (dida) 05:35 PM <br>\nYes, you have the right intuition. Given a graph, you can ‚Äûextend‚Äú this graph and get a category. That construction is called the ‚Äûfree category‚Äú on the given graph.</p>\n<p>The true problem is that this free category becomes HUGE.<br>\nPiotr Piƒôkos 05:36 PM <br>\nregardless of the real world example, i think i see it now more clearly, thanks. (If anyone has a non-trivial example, then I would still appreciate it)<br>\nFilip Bar 05:38 PM <br>\n@Piotr. Take as objects the points in space (say a torus = doughnuts), and the arrows to be be paths between the points. This does not form  a category unless you are very careful how you model continuous paths mathematically.<br>\nBrayan Escobar 05:41 PM <br>\ne.g. the graph of lovers, the objects are people, and a connection between A and B means \"A fells attraction to B\" or \"A likes B\"<br>\nShivam 05:31 PM  <br>\nDescreibes ‚Äòinside of B‚Äô in a sense?<br>\nThis question has been answered live<br>\nAndrei Manolache 05:32 PM  <br>\nDon‚Äôt you still need to have some information about the set? In this case the cardinality?<br>\nPim de Haan 05:32 PM <br>\nJust the set morphisms into and out of the object encode the cardinality.<br>\nAndrei Manolache 05:37 PM <br>\nI see, but we still need to know something about the (unique) morphisms, isn‚Äôt that equivalent to knowing the cardinality of the set?<br>\n05:33 PM  <br>\n05:34 PM  <br>\n05:34 PM  <br>\n05:35 PM  <br>\n05:36 P<br>\n<span class=\"user-mention silent\" data-user-id=\"552962\">Tali Beynon</span> <a href=\"#narrow/stream/347879-workshop.3A-Categories-for-AI/topic/Week.202.3A.20Essential.20building.20blocks.3A.20Categories.20and.20Functors/near/304507132\">said</a>:</p>\n<blockquote>\n<p>Hi! Would someone be kind enough to CTRL+A, CTRL+C, CTRL+V  for the contents of the Q&amp;A? my zoom crashed and i lost all previous comments, which i wanted to preserve for some of the links and references.</p>\n</blockquote>\n<p>M  <br>\n05:37 PM  <br>\n05:38 PM  <br>\n05:41 PM  <br>\n05:41 PM  <br>\n05:43 PM  <br>\n05:52 PM  <br>\n05:53 PM  <br>\n05:55 PM  <br>\n05:55 PM  <br>\n05:56 PM  <br>\n05:56 PM  <br>\n05:58 PM  <br>\n05:58 PM  <br>\n05:58 PM  <br>\n05:59 PM  <br>\n06:00 PM  <br>\n06:01 PM  <br>\n06:01 PM  <br>\n06:03 PM  <br>\n06:05 PM  <br>\n06:09 PM  <br>\n06:09 PM  <br>\n06:13 PM  <br>\n06:14 PM  <br>\n06:14 PM  <br>\n06:18 PM  <br>\n06:18 PM  <br>\n06:18 PM  <br>\n06:19 PM  <br>\n06:22 PM  <br>\n06:24 PM  <br>\n06:25 PM  <br>\n06:25 PM  <br>\n06:26 PM  <br>\n06:30 PM  <br>\n06:32 PM  <br>\n06:32 PM  <br>\n06:33 PM  <br>\n06:33 PM  <br>\n06:34 PM  <br>\n06:38 PM</p>",
        "id": 304507436,
        "sender_full_name": "Rub√©n Ballester",
        "timestamp": 1666024863
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"551763\">Rub√©n Ballester</span> <a href=\"#narrow/stream/347879-workshop.3A-Categories-for-AI/topic/Week.202.3A.20Essential.20building.20blocks.3A.20Categories.20and.20Functors/near/304507436\">said</a>:</p>\n<blockquote>\n<p>Viliam Vadocz 05:09 PM  <br>\n...</p>\n</blockquote>\n<p>Thanks! Don't know why but everything after 5:35pm got cut off. Weird.</p>",
        "id": 304508060,
        "sender_full_name": "Tali Beynon",
        "timestamp": 1666025051
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"552962\">Tali Beynon</span> <a href=\"#narrow/stream/347879-workshop.3A-Categories-for-AI/topic/Week.202.3A.20Essential.20building.20blocks.3A.20Categories.20and.20Functors/near/304508060\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"551763\">Rub√©n Ballester</span> <a href=\"#narrow/stream/347879-workshop.3A-Categories-for-AI/topic/Week.202.3A.20Essential.20building.20blocks.3A.20Categories.20and.20Functors/near/304507436\">said</a>:</p>\n<blockquote>\n<p>Viliam Vadocz 05:09 PM  <br>\n...</p>\n</blockquote>\n<p>Thanks! Don't know why but everything after 5:35pm got cut off. Weird.</p>\n</blockquote>\n<p>I'm sorry, the quality of the transcript I gave is a mess :(</p>",
        "id": 304508282,
        "sender_full_name": "Rub√©n Ballester",
        "timestamp": 1666025115
    },
    {
        "content": "<p>I'll try to upload the Q&amp;A afterwards</p>",
        "id": 304509348,
        "sender_full_name": "Pim de Haan",
        "timestamp": 1666025436
    },
    {
        "content": "<p>I'm working on the coexponential exercise. I am guessing that in addition to reversing the arrows in the universal property, I also need to replace product with coproduct? Like this?<br>\nX + A &lt;--{u + id_A}-- coexp(B, A) + A &lt;--{v}-- B<br>\nX + A &lt;--{e}-- B</p>",
        "id": 304511231,
        "sender_full_name": "Samuel G√©lineau",
        "timestamp": 1666025999
    },
    {
        "content": "<p>I notice I‚Äôm still slightly confused about the claim that ‚Äúo is no longer a function‚Äù ‚Äî I intuitively see what‚Äôs going on, but why is the claim not ‚Äúo is no longer an epimorphism‚Äù? (A possibly useful question to clarify things: what is the type of o in Haskell?)</p>",
        "id": 304511596,
        "sender_full_name": "Euan Ong",
        "timestamp": 1666026105
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"551681\">Samuel G√©lineau</span> <a href=\"#narrow/stream/347879-workshop.3A-Categories-for-AI/topic/Week.202.3A.20Essential.20building.20blocks.3A.20Categories.20and.20Functors/near/304511231\">said</a>:</p>\n<blockquote>\n<p>I'm working on the coexponential exercise. I am guessing that in addition to reversing the arrows in the universal property, I also need to replace product with coproduct? Like this?<br>\nX + A &lt;--{u + id_A}-- coexp(B, A) + A &lt;--{v}-- B<br>\nX + A &lt;--{e}-- B</p>\n</blockquote>\n<p>This is my interpretation‚Äîreverse the arrows and replace product with coproduct. (there are two other possibilities if you only flip one of them, so you can also think of this as three exercises in one)</p>",
        "id": 304511817,
        "sender_full_name": "Andrew Dudzik",
        "timestamp": 1666026169
    },
    {
        "content": "<blockquote>\n<p>(there are two other possibilities if you only flip one of them, so you can also think of this as three exercises in one)</p>\n</blockquote>\n<p>Hmm, but if we only flip one, then we're no longer looking for the dual concept. Do the other two exercises also lead to interesting, although not dual, concepts in Set?</p>",
        "id": 304512099,
        "sender_full_name": "Samuel G√©lineau",
        "timestamp": 1666026248
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"551834\">Euan Ong</span> <a href=\"#narrow/stream/347879-workshop.3A-Categories-for-AI/topic/Week.202.3A.20Essential.20building.20blocks.3A.20Categories.20and.20Functors/near/304511596\">said</a>:</p>\n<blockquote>\n<p>I notice I‚Äôm still slightly confused about the claim that ‚Äúo is no longer a function‚Äù ‚Äî I intuitively see what‚Äôs going on, but why is the claim not ‚Äúo is no longer an epimorphism‚Äù? (A possibly useful question to clarify things: what is the type of o in Haskell?)</p>\n</blockquote>\n<p>In that figure, o is surjective; every output position is populated.  But some output positions are populated by two sources, so describing such a network requires a relation, also known as a \"multi-valued function\".</p>",
        "id": 304512251,
        "sender_full_name": "Andrew Dudzik",
        "timestamp": 1666026299
    },
    {
        "content": "<p>Thank you all <strong>so much</strong> for coming to the lecture once again, <em>and</em> for having such fantastic talking points, for both asking and answering questions! The community spirit is certainly strong here.  <span aria-label=\"heart\" class=\"emoji emoji-2764\" role=\"img\" title=\"heart\">:heart:</span> </p>\n<p>After two hours of lecturing, I'll need a thorough break. <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span> <br>\nBut afterwards I will come back to this thread and attempt to answer any lingering questions that remain.<br>\nIf you have any leftover feedback, please let me know (either here or by sending me a DM/email).</p>",
        "id": 304513048,
        "sender_full_name": "Petar Veliƒçkoviƒá",
        "timestamp": 1666026556
    },
    {
        "content": "<p><a href=\"/user_uploads/21317/8Zfi7Ao3QKq4x6uNVmQnQHwW/Seminar-2-QA-Report.pdf\">Seminar-2-QA-Report.pdf</a>  Here are the Q&amp;As</p>",
        "id": 304513357,
        "sender_full_name": "Pim de Haan",
        "timestamp": 1666026653
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"551681\">Samuel G√©lineau</span> <a href=\"#narrow/stream/347879-workshop.3A-Categories-for-AI/topic/Week.202.3A.20Essential.20building.20blocks.3A.20Categories.20and.20Functors/near/304512099\">said</a>:</p>\n<blockquote>\n<blockquote>\n<p>(there are two other possibilities if you only flip one of them, so you can also think of this as three exercises in one)</p>\n</blockquote>\n<p>Hmm, but if we only flip one, then we're no longer looking for the dual concept. Do the other two exercises also lead to interesting, although not dual, concepts in Set?</p>\n</blockquote>\n<p>If you define exponentiability in a monoidal category, then taking the dual doesn't change the monoidal product.</p>\n<p>But given the way things were defined in the lecture, it's appropriate to switch product to sum since it's defined by a universal property that gets reversed when we switch the arrows.  And in any case, for a cartesian product if we don't make the switch <a href=\"https://ncatlab.org/nlab/show/cocartesian+closed+category\">we're guaranteed to get something boring</a>.</p>",
        "id": 304514069,
        "sender_full_name": "Andrew Dudzik",
        "timestamp": 1666026869
    },
    {
        "content": "<p>Is it sensible to think of the co-exponential object as the exponential object in the co-category?</p>",
        "id": 304514319,
        "sender_full_name": "Matthew Pugh",
        "timestamp": 1666026943
    },
    {
        "content": "<p>Where was the QnA?</p>\n<p>I could only see that zoom chat </p>\n<p>Thanks!</p>",
        "id": 304515851,
        "sender_full_name": "Lucia",
        "timestamp": 1666027418
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"553247\">Lucia</span> <a href=\"#narrow/stream/347879-workshop.3A-Categories-for-AI/topic/Week.202.3A.20Essential.20building.20blocks.3A.20Categories.20and.20Functors/near/304515851\">said</a>:</p>\n<blockquote>\n<p>Where was the QnA?</p>\n<p>I could only see that zoom chat </p>\n<p>Thanks!</p>\n</blockquote>\n<p>It's a Zoom feature, there should be a button for it, though their clients do vary across platform.</p>",
        "id": 304516042,
        "sender_full_name": "Andrew Dudzik",
        "timestamp": 1666027475
    },
    {
        "content": "<p>Since functors are \"maps\" between categories, is it correct to say that a functor is just a morphism in the category of categories (assuming such a thing is correctly defined)?</p>",
        "id": 304518583,
        "sender_full_name": "Mihael Kovaƒç",
        "timestamp": 1666028254
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"551652\">@Mihael Kovaƒç</span>  ncatlab is a resource I've found useful. <a href=\"https://ncatlab.org/nlab/show/Cat\">https://ncatlab.org/nlab/show/Cat</a> It says that functors are morphisms in the category of categories.</p>",
        "id": 304519285,
        "sender_full_name": "Matthew Pugh",
        "timestamp": 1666028417
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"551665\">@Aishwarya Balwani</span>  About <em>disentanglement</em>: the definition by [Higgins et al. 2018 <a href=\"https://arxiv.org/abs/1812.02230]\">https://arxiv.org/abs/1812.02230]</a> can actually be interpreted from CT. Since a group is precisely a single-object category, a group action is a functor, and an equivariant map is a natural transformation, their definition (secretly) says that a disentangled representation is a natural transformation where the source category contains direct products of groups. On the other hand, we can also formulate the definition based on statistical independence in the category of probability measures, where <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>P</mi><mo stretchy=\"false\">(</mo><mi>X</mi><mo>√ó</mo><mi>Y</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">P(X \\times Y)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">√ó</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mclose\">)</span></span></span></span> is all joint distributions and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>P</mi><mi>X</mi><mo>√ó</mo><mi>P</mi><mi>Y</mi></mrow><annotation encoding=\"application/x-tex\">PX \\times PY</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7667em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">PX</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">√ó</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span></span></span></span> is the product of two marginal distributions (disentangled). We can see that the concept of <em>product</em> is the core of disentanglement, and I think it is promising to unify these two definitions via CT. I'm currently working on this (sorry for the self-promotion: <a href=\"https://arxiv.org/abs/2208.02011\">https://arxiv.org/abs/2208.02011</a>), and an initial step is to go beyond groups because the invertibility requirement can be too restrictive in some problems. You can further check the concepts of the monoidal category and monoidal natural transformation, which can be useful here.</p>",
        "id": 304520398,
        "sender_full_name": "Yivan Zhang",
        "timestamp": 1666028751
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"555924\">@Yivan Zhang</span> I was thinking of precisely some of Irina Higgins' work along these lines when I asked the question! More so perhaps in the context of the relatively newer <a href=\"https://arxiv.org/abs/2006.12982\">Disentangling by Subspace Diffusion</a> (which again is something that your answer has alluded to, except in the paper I've mentioned, you'd be talking about product manifolds rather than independent distributions?!). Your paper looks very interesting and I look forward to going through it (and also chatting more about these ideas if you're so inclined)!</p>",
        "id": 304522889,
        "sender_full_name": "Aishwarya Balwani",
        "timestamp": 1666029449
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"551665\">@Aishwarya Balwani</span> Thank you for the reference! I'm actually not aware of this work. It seems they considered more structures (Lie groups), but the core is still the product (product metric here?). One thing that bothered me for a while is that the community seems to divide into two groups, algebra-based and statistics-based, and we still lack a common ground where we can talk about both. I think CT may be the solution.<br>\nI'm looking forward to chatting with you more, too!</p>",
        "id": 304526643,
        "sender_full_name": "Yivan Zhang",
        "timestamp": 1666030536
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"553485\">Matthew Pugh</span> <a href=\"#narrow/stream/347879-workshop.3A-Categories-for-AI/topic/Week.202.3A.20Essential.20building.20blocks.3A.20Categories.20and.20Functors/near/304519285\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"551652\">Mihael Kovaƒç</span>  ncatlab is a resource I've found useful. <a href=\"https://ncatlab.org/nlab/show/Cat\">https://ncatlab.org/nlab/show/Cat</a> It says that functors are morphisms in the category of categories.</p>\n</blockquote>\n<p>indeed, that's arguably the right the way to remember them. the candidates for morphisms in <em>any</em> category are \"structure preserving maps\", maps that preserve the structure of the objects in the category. when you apply this maxim to categories themselves, you get that a map between categories must \"preserve morphism composition\", since morphism composition is what defines the structure of a category. this property of preserving morphism composition, F(f) ; F(g) = F(f ; g) is indeed the (essential) defining property of a functor F. you can compose morphisms and apply functor, or apply functor and compose morphisms, and you get the same thing.</p>",
        "id": 304528193,
        "sender_full_name": "Tali Beynon",
        "timestamp": 1666030986
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"555924\">Yivan Zhang</span> <a href=\"#narrow/stream/347879-workshop.3A-Categories-for-AI/topic/Week.202.3A.20Essential.20building.20blocks.3A.20Categories.20and.20Functors/near/304520398\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"551665\">Aishwarya Balwani</span>  About <em>disentanglement</em>:... We can see that the concept of <em>product</em> is the core of disentanglement, and I think it is promising to unify these two definitions via CT. I'm currently working on this (sorry for the self-promotion: <a href=\"https://arxiv.org/abs/2208.02011\">https://arxiv.org/abs/2208.02011</a>), and an initial step is to go beyond groups because the invertibility requirement can be too restrictive in some problems. You can further check the concepts of the monoidal category and monoidal natural transformation, which can be useful here.</p>\n</blockquote>\n<p>that's super interesting. thanks for mentioning your research! how do transcend invertibility? do you move to a semigroupoid?</p>",
        "id": 304529249,
        "sender_full_name": "Tali Beynon",
        "timestamp": 1666031283
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"552962\">Tali Beynon</span> <a href=\"#narrow/stream/347879-workshop.3A-Categories-for-AI/topic/Week.202.3A.20Essential.20building.20blocks.3A.20Categories.20and.20Functors/near/304529249\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"555924\">Yivan Zhang</span> <a href=\"#narrow/stream/347879-workshop.3A-Categories-for-AI/topic/Week.202.3A.20Essential.20building.20blocks.3A.20Categories.20and.20Functors/near/304520398\">said</a>:<br>\nthat's super interesting. thanks for mentioning your research! how do transcend invertibility? do you move to a semigroupoid?</p>\n</blockquote>\n<p>I mean, we can consider a <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"bold\">B</mi><mi>M</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbf{B}M</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6861em;\"></span><span class=\"mord mathbf\">B</span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span></span></span></span> instead of a <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"bold\">B</mi><mi>G</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbf{B}G</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6861em;\"></span><span class=\"mord mathbf\">B</span><span class=\"mord mathnormal\">G</span></span></span></span>, or simply a <em>category with all products</em>, if we want to consider which operations are composable. I think the group structure is not essential in disentanglement and can be limiting. For example, the monoid of natural numbers for size and count is also useful. If we extend the definition in this direction, we can talk about more types of operations (I mentioned some ideas in the future work section). I'm glad that you find it interesting. Thanks!</p>",
        "id": 304533292,
        "sender_full_name": "Yivan Zhang",
        "timestamp": 1666032369
    },
    {
        "content": "<p>I have a guess for the coexponential in Set exercise, but I don't like it one bit.</p>\n<div class=\"spoiler-block\"><div class=\"spoiler-header\">\n<p>my solution</p>\n</div><div class=\"spoiler-content\" aria-hidden=\"true\">\n<p><code>coexp(B, A)</code> = if <code>A</code> is non-empty, then <code>Void</code>, otherwise <code>B</code></p>\n<p>We need to define a morphism <code>v : B -&gt; coexp(B, A) + A</code>.<br>\nCase 1: <code>A</code> is non-empty. Then <code>v : B -&gt; Void + A</code>, so we need to map every element in <code>B</code> to an element in <code>A</code>. Since <code>A</code> is non-empty, it has at least one element <code>a ‚àà A</code>, to which we map everything. We pick this <code>a</code> arbitrarily.<br>\nCase 2: <code>A</code> is empty.  Then <code>v : B -&gt; B + A</code>, so we can simply map the elements of <code>B</code> to themselves.</p>\n<p>We also need to produce a unique <code>u : coexp(B, A) -&gt; X</code> for any <code>e : B -&gt; X + A</code>. We proceed by cases.<br>\nCase 1: A is non-empty. Then <code>u : Void -&gt; X</code>, so we must choose <code>u : Void -&gt; X</code> to be <code>absurd_Void</code>, the unique morphism out of <code>Void</code>.<br>\nCase 2: A is empty. Then <code>u : B -&gt; X</code>, and <code>e : B -&gt; X + Void</code> must map every element of <code>B</code> to an <code>X</code>, so we choose that map for our <code>u</code>.</p>\n</div></div>\n<p>I don't like it because it is far from being as elegant as the exponential, because it doesn't seem very useful, and because of the arbitrary choice in the definition of <code>v</code>. Are we allowed to sweep this arbitrariness under the rug by saying that different choices lead to different definitions of the coexponential which are isomorphic to each other? If it was my choice of the object <code>coexp(B, A)</code> which was arbitrary, I would be fine with the idea that the different choices are isomorphic to each other, in the sense that we can find two morphisms between those two objects which compose to the identity. But what is the appropriate notion of isomorphism between two choices of definitions for <code>v</code>, which is itself a morphism?</p>",
        "id": 304539363,
        "sender_full_name": "Samuel G√©lineau",
        "timestamp": 1666034234
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"553308\">Andrew Dudzik</span> <a href=\"#narrow/stream/347879-workshop.3A-Categories-for-AI/topic/Week.202.3A.20Essential.20building.20blocks.3A.20Categories.20and.20Functors/near/304512251\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"551834\">Euan Ong</span> <a href=\"#narrow/stream/347879-workshop.3A-Categories-for-AI/topic/Week.202.3A.20Essential.20building.20blocks.3A.20Categories.20and.20Functors/near/304511596\">said</a>:</p>\n<blockquote>\n<p>I notice I‚Äôm still slightly confused about the claim that ‚Äúo is no longer a function‚Äù ‚Äî I intuitively see what‚Äôs going on, but why is the claim not ‚Äúo is no longer an epimorphism‚Äù? (A possibly useful question to clarify things: what is the type of o in Haskell?)</p>\n</blockquote>\n<p>In that figure, o is surjective; every output position is populated.  But some output positions are populated by two sources, so describing such a network requires a relation, also known as a \"multi-valued function\".</p>\n</blockquote>\n<p>I'm slightly confused here. While I do understand why surjectivity implies o is not function, why is o a surjection to begin with?</p>",
        "id": 304564709,
        "sender_full_name": "Cheuk Kit Lee",
        "timestamp": 1666043189
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"556104\">Cheuk Kit Lee</span> <a href=\"#narrow/stream/347879-workshop.3A-Categories-for-AI/topic/Week.202.3A.20Essential.20building.20blocks.3A.20Categories.20and.20Functors/near/304564709\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"553308\">Andrew Dudzik</span> <a href=\"#narrow/stream/347879-workshop.3A-Categories-for-AI/topic/Week.202.3A.20Essential.20building.20blocks.3A.20Categories.20and.20Functors/near/304512251\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"551834\">Euan Ong</span> <a href=\"#narrow/stream/347879-workshop.3A-Categories-for-AI/topic/Week.202.3A.20Essential.20building.20blocks.3A.20Categories.20and.20Functors/near/304511596\">said</a>:</p>\n<blockquote>\n<p>I notice I‚Äôm still slightly confused about the claim that ‚Äúo is no longer a function‚Äù ‚Äî I intuitively see what‚Äôs going on, but why is the claim not ‚Äúo is no longer an epimorphism‚Äù? (A possibly useful question to clarify things: what is the type of o in Haskell?)</p>\n</blockquote>\n<p>In that figure, o is surjective; every output position is populated.  But some output positions are populated by two sources, so describing such a network requires a relation, also known as a \"multi-valued function\".</p>\n</blockquote>\n<p>I'm slightly confused here. While I do understand why surjectivity implies o is not function, why is o a surjection to begin with?</p>\n</blockquote>\n<p>In the GNN implementations we're referencing, o would send V^2 to V by summing along one axis, and V^2 to V^2 by the identity.  So every element of V^2 is sent by o to two values.  The point is that the tensor is copied and then used in two different ways.</p>",
        "id": 304582092,
        "sender_full_name": "Andrew Dudzik",
        "timestamp": 1666050418
    },
    {
        "content": "<p>Hi guys. I am still trying to get my head around products and coproducts. I asked a question in QnA but I didn't understand the answers. If I understand correctly then the projections have to be epimorphism. For the Set category I can see it. But is it true in general? I tried to prove it but didn't get too far. Any explanation or link to further resources will be much appreciated. I also have another question related to this. How do we prove that two morphisms are same, in general? If we can show that for all f_1 we have f_1<em>g=f_1</em>h and for all f2 we have g<em>f_2=h</em>f2 then can we say g=h?</p>",
        "id": 304586409,
        "sender_full_name": "Ibraheem Moosa/‡¶á‡¶¨‡ßç‡¶∞‡¶æ‡¶π‡ßÄ‡¶Æ ‡¶Æ‡ßÇ‡¶∏‡¶æ",
        "timestamp": 1666052810
    }
]