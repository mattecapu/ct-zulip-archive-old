[
    {
        "content": "<p><a href=\"/user_uploads/21317/_dUnWVT4Vb7NQoBkhqh2Ic1C/image.png\">image.png</a> <br>\nDonald Yau and Niles Johnson just unveiled a new trio of books.<br>\n<a href=\"https://nilesjohnson.net/En-monoidal.html\">https://nilesjohnson.net/En-monoidal.html</a><br>\nIt's all about \"bimonoidal categories\", a term I dislike for ring-like categories. Donald wrote the first two volumes, and then Niles joined for the last one. They combine to 1403 pages! It's very convenient for me, as I've been thinking about ring-like categories in basically all of my various current projects.</p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/21317/_dUnWVT4Vb7NQoBkhqh2Ic1C/image.png\" title=\"image.png\"><img src=\"/user_uploads/21317/_dUnWVT4Vb7NQoBkhqh2Ic1C/image.png\"></a></div>",
        "id": 246976173,
        "sender_full_name": "Joe Moeller",
        "timestamp": 1627046497
    },
    {
        "content": "<p>I really appreciate <a href=\"https://arxiv.org/abs/2002.06055\">2-Dimensional Categories</a>, so I'm really looking forward to diving into this one.</p>",
        "id": 246976391,
        "sender_full_name": "Joe Moeller",
        "timestamp": 1627046596
    },
    {
        "content": "<p>It looks really nice indeed, thanks for sharing! They seem to have interesting questions around sheet diagrams in there.</p>",
        "id": 246985678,
        "sender_full_name": "Antonin Delpeuch",
        "timestamp": 1627051105
    },
    {
        "content": "<p>Ping <span class=\"user-mention\" data-user-id=\"282822\">@fosco</span></p>",
        "id": 246994043,
        "sender_full_name": "Daniele Palombi",
        "timestamp": 1627055028
    },
    {
        "content": "<p>This stuff reads to me like computer code that is meant to be run on wetware, ie. brains. I have trouble comprehending why we are not just writing actual computer code for actual hardware. Such code would amount to merely typechecking; these are not fancy epsilon-delta arguments. I don't see much of first-order logic being used, that would warrant using a \"real\" theorem prover like Lean, etc. </p>\n<p>Anyway, I have been doing some experiments along these lines, mostly at the monoidal 1-category level... My main motivation is that my wetware is pretty bad at running code like this!</p>",
        "id": 247076672,
        "sender_full_name": "Simon Burton",
        "timestamp": 1627135935
    },
    {
        "content": "<p><a href=\"http://Homotopy.io\">Homotopy.io</a> does something like the kind of typechecking i'm suggesting, in great generality...</p>",
        "id": 247076911,
        "sender_full_name": "Simon Burton",
        "timestamp": 1627136292
    },
    {
        "content": "<p>Laplaza's definition of symmetric bimonoidal category has 24 axioms.    Yau and Johnson show they come in 12 pairs and one only needs one axiom from each pair.... so, just 12 axioms.   12 axioms is still a lot.   </p>\n<p>I think there's a more abstract approach to symmetric bimonoidal categories where you can write down the definition in a sentence - a sentence involving more abstract concepts, of course.  </p>\n<p>In such a more abstract approach one suffers more at first, wrapping one's mind around the abstractions, but quite possibly the proofs involve fewer long calculations later on.</p>",
        "id": 247079744,
        "sender_full_name": "John Baez",
        "timestamp": 1627139719
    },
    {
        "content": "<p>It's always a tough decision for me whether to go the more abstract route or do a lot of calculations.  I've certainly done a lot of calculations in my day!</p>",
        "id": 247080092,
        "sender_full_name": "John Baez",
        "timestamp": 1627140181
    }
]